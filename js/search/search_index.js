var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AccessTokenPayload.html",[0,0.991,1,2.823]],["body/interfaces/AccessTokenPayload.html",[0,1.827,1,4.987,2,2.464,3,0.075,4,0.057,5,0.066,6,4.895,7,0.111,8,0.889,9,1.181,10,6.824,11,2.116,12,5.848,13,5.866,14,0.401,15,0.304,16,0.007,17,5.643,18,5.167,19,0.104,20,4.62,21,3.87,22,3.733,23,1.085,24,1.451,25,1.356,26,1.917,27,1.694,28,3.733,29,4.895,30,3.733,31,4.895,32,0.004,33,0.005,34,0.004]],["title/classes/Account.html",[35,0.269,36,1.532]],["body/classes/Account.html",[0,1.235,3,0.05,4,0.038,5,0.044,7,0.074,8,0.68,9,1.309,14,0.379,15,0.324,16,0.007,17,3.647,18,3.4,19,0.097,23,1.186,26,2.563,32,0.003,33,0.004,34,0.003,35,0.238,36,2.213,37,0.628,38,3.081,39,2.864,40,5.725,41,5.725,42,4.079,43,4.583,44,3.204,45,4.079,46,2.532,47,2.654,48,1.682,49,2.274,50,2.236,51,1.209,52,3.164,53,0.383,54,4.269,55,4.396,56,3.077,57,3.791,58,4.269,59,4.269,60,1.206,61,2.786,62,2.049,63,4.269,64,2.184,65,3.193,66,4.269,67,4.269,68,4.269,69,2.866,70,1.924,71,1.924,72,1.924,73,1.84,74,1.924,75,0.17,76,1.982,77,1.515,78,1.279,79,2.021,80,1.982,81,2.873,82,1.486,83,2.581,84,3.494,85,2.023,86,2.023,87,1.322,88,2.195,89,2.26,90,2.797,91,3.494,92,2.134,93,1.644,94,2.928,95,1.972,96,2.26,97,4.612,98,1.072,99,3.264,100,1.644,101,1.515,102,1.774,103,3.494,104,3.494,105,0.874,106,0.821,107,4.137,108,3.494,109,2.581,110,3.494,111,1.753,112,3.494,113,3.494,114,1.84,115,3.267,116,5.725,117,1.909,118,3.494,119,4.937,120,3.494,121,1.288,122,2.928,123,1.234,124,3.494,125,3.494,126,3.264,127,3.4,128,2.134,129,3.494,130,2.926,131,5.725,132,1.878,133,3.494,134,5.214,135,3.494,136,2.683,137,3.494,138,2.928,139,3.494,140,2.928,141,3.494,142,3.494,143,2.077]],["title/classes/AccountActivation.html",[35,0.269,144,3.042]],["body/classes/AccountActivation.html",[0,1.314,3,0.055,4,0.041,5,0.048,7,0.081,8,0.724,9,1.338,14,0.346,15,0.325,16,0.007,19,0.1,23,1.339,26,1.923,30,4.279,32,0.003,33,0.004,34,0.003,35,0.26,36,2.827,37,0.686,39,2.936,43,4.206,46,2.324,47,2.824,48,1.79,49,2.42,50,2.725,51,1.216,52,3.161,53,0.385,56,2.053,60,0.805,61,3.65,62,2.317,69,2.979,70,2.103,71,2.103,72,2.103,73,1.424,74,2.103,75,0.169,76,2.109,77,1.656,78,1.398,79,2.12,80,2.109,81,2.636,82,1.624,83,2.822,85,2.211,86,2.211,87,1.023,92,2.333,98,1.172,101,1.656,102,2.324,106,0.927,115,2.759,121,1.088,144,4.611,145,3.368,146,6.005,147,6.005,148,6.178,149,6.178,150,2.631,151,2.893,152,4.667,153,4.667,154,4.667,155,4.667,156,4.667,157,4.667,158,2.053,159,2.933,160,2.471,161,4.908,162,3.569,163,2.27,164,3.569,165,3.82,166,3.82,167,3.82,168,3.201,169,3.82,170,5.253,171,3.201,172,3.82,173,3.82,174,1.166,175,2.631,176,1.669,177,3.201,178,5.253,179,2.399,180,3.82,181,3.82,182,3.201]],["title/interfaces/AccountActivationModel.html",[0,0.991,171,3.32]],["body/interfaces/AccountActivationModel.html",[0,1.444,2,2.068,3,0.063,4,0.048,5,0.055,7,0.094,9,0.804,14,0.318,15,0.296,16,0.007,19,0.104,23,1.418,26,2.113,30,5.067,32,0.004,33,0.005,34,0.004,35,0.299,36,2.647,39,2.362,43,4.622,50,2.623,52,3.102,53,0.226,60,0.926,62,2.22,64,1.944,75,0.174,76,2.317,77,1.906,78,1.609,79,2.276,80,2.317,81,3.235,82,1.869,83,3.248,85,2.545,86,2.545,87,1.177,92,2.685,98,1.349,101,1.906,102,2.461,106,0.981,115,3.032,121,1.196,144,4.433,145,3.876,146,4.396,147,4.396,148,6.037,149,6.037,151,2.421,158,2.363,159,3.375,160,2.843,161,5.394,162,4.107,163,2.613,164,4.107,165,4.396,166,4.396,167,4.396,168,3.684,169,4.396,170,5.774,171,4.839,172,5.774,173,4.396,174,1.431,175,3.028,176,1.834,177,3.684,178,5.774,179,2.761,180,4.396,181,4.396,182,3.684,183,1.627,184,7.053,185,5.37,186,1.638,187,0.993,188,1.157]],["title/classes/AccountAuthenId.html",[35,0.269,189,4.311]],["body/classes/AccountAuthenId.html",[3,0.067,4,0.051,5,0.059,7,0.1,8,0.829,9,1.4,14,0.328,15,0.328,16,0.007,19,0.1,23,1.247,32,0.004,33,0.005,34,0.004,35,0.319,36,2.958,37,0.843,39,3.09,46,2.663,47,3.236,48,2.051,49,2.773,50,2.164,51,1.19,52,3.026,53,0.381,56,2.52,61,3.398,62,2.266,69,3.233,70,2.581,71,2.581,72,2.581,73,1.747,74,2.581,75,0.167,76,2.416,77,2.033,78,1.716,79,2.348,80,2.416,82,1.993,98,1.439,101,2.033,102,2.164,106,0.672,150,3.229,151,3.315,158,2.52,163,2.786,189,7.235,190,4.688,191,5.727,192,5.727,193,5.101,194,5.101,195,3.398,196,3.398,197,6.55,198,6.55,199,5.727,200,5.727]],["title/interfaces/AccountRequirements.html",[0,0.991,201,3.962]],["body/interfaces/AccountRequirements.html",[0,0.931,1,2.652,2,1.124,3,0.034,4,0.026,5,0.03,7,0.051,8,0.513,11,1.641,12,1.913,13,2.858,14,0.384,15,0.279,16,0.007,18,2.564,19,0.065,21,2.75,22,1.703,25,1.183,26,2.263,28,2.652,30,2.652,32,0.004,33,0.003,34,0.002,35,0.162,36,2.809,42,2.652,44,2.15,45,1.703,46,2.022,49,1.715,50,1.338,62,1.611,64,1.646,73,0.891,75,0.162,78,0.875,79,1.614,80,0.959,81,2.294,83,3.377,87,0.64,89,4.137,92,1.459,93,1.751,95,1.349,96,4.557,100,3.16,106,1.076,107,2.003,109,1.765,111,1.868,114,2.449,115,1.255,117,2.852,121,1.517,127,2.564,132,2.457,136,4.748,138,3.831,140,2.003,143,3.992,144,1.835,148,3.282,149,2.107,158,1.285,159,1.835,160,2.957,171,3.119,174,1.015,175,3.149,176,2.032,187,0.54,188,1.358,201,4.571,202,2.6,203,3.852,204,1.668,205,5.16,206,2.39,207,1.049,208,0.629,209,2.107,210,2.39,211,1.546,212,1.546,213,2.107,214,4.686,215,3.119,216,2.003,217,2.39,218,3.119,219,2.75,220,2.6,221,2.39,222,2.107,223,2.273,224,3.722,225,3.51,226,1.501,227,1.316,228,2.107,229,2.288,230,2.107,231,2.233,232,2.233,233,2.6,234,2.6,235,2.233,236,2.233,237,2.6,238,2.6,239,2.6,240,4.973,241,5.224,242,2.6,243,2.589,244,4.049,245,2.6,246,2.846,247,2.6,248,5.614,249,4.973,250,1.913,251,4.049,252,2.6,253,4.049,254,2.107,255,2.6,256,4.049,257,2.107,258,2.6,259,3.831,260,2.6,261,2.107,262,1.835,263,2.107,264,2.107,265,1.835,266,2.107,267,2.6,268,2.6,269,2.6,270,4.049,271,1.255,272,2.6,273,4.049,274,2.6,275,2.6,276,2.6,277,2.6,278,4.571,279,3.831,280,0.875,281,1.036,282,2.6,283,2.6,284,2.6,285,4.049,286,2.6,287,4.049,288,2.6,289,2.6,290,2.6,291,2.6,292,2.39,293,3.282,294,2.6,295,2.6,296,2.6,297,2.6,298,2.6,299,2.6,300,2.6,301,2.6,302,4.049,303,2.6,304,2.6,305,2.6,306,4.973,307,2.6,308,4.049,309,2.6,310,1.349,311,2.6,312,2.6,313,2.6,314,2.6,315,2.6,316,2.6,317,2.6,318,2.6,319,2.6,320,2.6,321,2.6,322,2.457,323,2.6,324,2.6,325,4.973,326,2.003,327,2.6,328,2.6,329,4.049,330,2.6,331,2.6,332,2.39,333,2.39,334,4.049,335,2.6,336,2.6,337,2.6,338,2.39,339,2.39,340,1.913,341,2.6,342,2.6,343,2.233,344,2.39,345,2.6,346,2.6,347,2.6,348,4.049,349,4.049,350,4.049,351,4.049,352,2.6,353,2.6,354,1.199,355,2.6,356,2.39,357,2.6,358,3.405,359,2.39,360,4.049,361,2.6,362,1.199,363,1.349,364,2.39,365,2.6,366,2.6,367,4.049,368,2.6,369,4.049,370,2.003,371,3.324,372,4.748,373,2.6,374,2.6,375,2.6,376,2.107,377,1.765,378,2.6,379,2.6,380,2.39,381,1.199,382,2.107,383,2.564,384,1.646,385,2.6,386,2.155,387,1.835,388,2.6,389,1.835,390,2.6,391,2.6,392,1.835]],["title/controllers/AppController.html",[393,1.532,394,2.42]],["body/controllers/AppController.html",[3,0.021,4,0.016,5,0.041,7,0.031,9,1.099,11,1.294,12,2.59,13,3.295,14,0.338,15,0.301,16,0.007,17,2.39,18,2.956,19,0.021,21,1.827,25,0.837,26,2.248,32,0.003,33,0.002,34,0.001,35,0.099,36,2.567,44,1.798,51,1.027,53,0.321,62,1.558,75,0.147,85,0.84,86,0.84,87,1.468,88,0.911,92,0.886,93,1.522,100,1.798,102,1.374,106,1.029,111,1.918,114,2.736,117,2.776,121,1.39,136,1.114,138,1.215,140,2.073,143,0.862,144,3.831,160,3.022,174,0.718,176,2.133,183,0.697,186,2.239,187,1.481,188,1.648,203,2.956,204,1.699,205,1.45,208,0.851,223,0.886,225,1.114,226,1.554,227,0.798,229,1.323,243,2.345,246,2.062,259,3.227,271,1.299,278,2.474,279,2.073,280,0.531,281,1.073,322,2.055,333,2.474,354,3.082,356,2.474,359,4.672,362,1.918,363,2.158,364,1.45,371,2.512,372,2.935,377,1.071,381,1.918,382,1.279,383,0.999,386,2.213,393,0.956,394,1.511,395,0.697,396,1.772,397,3.952,398,3.022,399,3.952,400,2.055,401,4.67,402,3.022,403,3.022,404,3.952,405,3.022,406,3.022,407,3.952,408,3.952,409,1.772,410,4.857,411,3.887,412,1.772,413,1.772,414,1.772,415,1.772,416,1.772,417,2.272,418,2.474,419,1.772,420,1.772,421,4.002,422,1.772,423,2.824,424,2.474,425,5.708,426,3.934,427,1.772,428,4.635,429,1.772,430,1.772,431,1.772,432,1.772,433,1.772,434,1.772,435,1.772,436,3.571,437,2.55,438,1.772,439,2.724,440,3.022,441,1.772,442,1.772,443,1.772,444,1.772,445,1.772,446,1.772,447,2.55,448,1.279,449,1.772,450,3.022,451,1.772,452,1.772,453,1.772,454,3.994,455,1.772,456,4.67,457,4.67,458,3.022,459,1.772,460,1.772,461,1.772,462,2.272,463,2.852,464,1.772,465,1.772,466,1.772,467,3.022,468,4.67,469,4.67,470,1.772,471,1.772,472,1.772,473,1.772,474,1.772,475,1.772,476,1.772,477,1.772,478,1.355,479,1.772,480,1.772,481,1.772,482,1.772,483,3.452,484,3.022,485,1.772,486,1.214,487,0.712,488,0.728,489,1.214,490,0.728,491,0.697,492,0.728,493,0.728,494,0.712,495,1.46,496,1.554,497,1.588,498,0.712,499,0.712,500,0.697,501,0.697,502,1.554,503,1.554,504,1.798,505,2.106,506,1.49,507,0.697,508,1.214,509,0.712,510,0.712,511,0.712,512,1.188,513,1.214,514,0.712,515,0.712,516,0.712,517,0.712,518,0.712,519,0.712,520,0.697,521,0.668,522,0.641,523,1.214,524,0.712,525,0.712,526,0.712,527,0.712,528,0.712,529,0.712,530,0.668,531,0.728,532,0.728,533,0.728,534,0.728,535,0.728,536,0.728,537,0.728,538,0.728,539,0.728,540,0.728,541,0.712,542,0.712,543,0.728,544,0.728,545,0.728,546,0.728,547,0.728,548,0.728,549,0.728,550,0.728,551,0.728,552,0.728,553,0.728,554,0.728,555,0.561,556,0.712,557,0.712,558,0.728,559,2.711,560,1.114,561,1.49,562,0.967,563,2.474,564,1.772,565,1.071,566,1.071,567,1.279,568,0.84,569,0.938,570,1.279,571,1.432,572,1.47,573,0.886,574,0.798,575,3.129,576,0.886,577,0.938,578,1.45,579,4.613,580,3.741,581,2.935,582,3.588,583,3.741,584,0.375,585,3.26,586,1.47,587,2.272,588,1.47,589,1.47,590,1.47,591,1.47,592,1.47,593,1.772,594,1.355,595,1.772,596,1.215,597,1.114,598,1.114,599,1.114,600,1.114,601,1.114,602,1.114,603,1.161,604,1.781,605,1.432,606,1.033,607,0.886,608,1.45,609,4.231,610,1.772,611,4.67,612,1.772,613,1.772,614,4.005,615,5.242,616,5.527,617,1.355,618,1.772,619,1.153,620,2.474,621,1.45,622,1.215,623,3.295,624,1.772,625,1.772,626,1.772,627,1.772,628,3.022,629,1.772,630,1.578,631,1.772,632,1.772,633,4.635,634,1.772,635,1.772,636,1.772,637,3.952,638,1.772,639,1.772,640,1.772,641,1.772,642,3.022,643,1.772,644,1.772,645,1.772,646,1.772,647,1.772,648,1.772,649,1.772,650,1.772,651,1.772,652,1.772,653,1.45,654,1.772,655,1.772,656,1.772,657,1.772,658,1.772,659,1.772,660,1.772,661,1.772,662,1.772,663,1.578,664,1.578,665,3.952,666,4.291,667,3.022,668,3.952,669,3.022,670,1.772,671,1.772,672,1.772,673,1.772,674,1.772,675,1.772,676,1.772,677,1.578,678,1.578,679,1.772,680,3.022,681,3.952,682,1.772,683,1.772,684,1.772,685,3.022,686,1.772,687,1.772,688,1.161,689,1.578,690,1.279,691,1.772,692,1.772,693,1.772,694,3.022,695,1.772,696,1.772,697,5.242,698,2.484,699,1.772,700,3.204,701,1.772,702,1.772,703,1.772,704,1.772,705,1.772,706,1.772,707,1.772,708,1.772,709,1.772,710,1.772,711,1.772,712,1.772,713,1.772,714,1.772,715,1.772,716,3.022,717,3.022,718,1.355,719,1.772,720,1.975,721,3.022,722,2.181,723,1.772,724,1.772,725,1.772,726,1.772,727,1.578,728,3.022,729,1.772,730,1.772,731,1.578,732,1.578,733,1.578,734,2.691,735,3.022,736,1.772,737,1.45,738,1.772,739,1.772,740,1.772,741,1.114,742,1.578,743,1.772,744,1.772,745,1.772,746,1.772,747,1.772,748,3.022,749,1.772,750,1.772,751,1.772,752,2.691,753,1.161,754,1.772,755,1.578,756,1.772,757,1.772,758,1.772,759,1.772,760,1.772,761,3.022,762,1.772,763,1.772,764,1.772,765,1.772,766,1.772,767,1.772,768,1.772,769,1.772,770,1.772,771,1.772,772,1.772,773,1.772,774,1.772,775,1.772,776,1.772]],["title/controllers/AppController-1.html",[393,1.283,394,2.027,777,1.073]],["body/controllers/AppController-1.html",[3,0.055,4,0.042,5,0.076,7,0.082,9,0.703,11,1.065,15,0.219,16,0.007,19,0.055,32,0.005,33,0.004,34,0.003,35,0.261,51,0.865,53,0.271,62,1.648,75,0.171,79,1.863,87,1.925,88,2.415,102,1.896,106,0.756,114,2.245,121,1.093,176,1.676,183,1.487,186,1.433,187,1.36,188,1.389,204,1.243,208,1.012,227,2.117,229,2.464,281,1.667,354,1.929,377,2.84,381,1.929,393,2.04,394,3.222,395,1.847,400,3.486,410,4.532,411,3.754,421,3.784,426,3.314,439,3.76,478,3.591,486,2.59,487,1.887,488,1.929,489,2.59,490,1.929,491,1.847,492,1.929,493,1.929,494,1.887,495,2.719,496,2.894,497,2.958,498,1.887,499,1.887,500,1.847,501,1.847,502,2.894,503,2.894,504,3.05,505,2.958,506,2.775,507,1.847,508,2.59,509,1.887,510,1.887,511,1.887,512,2.535,513,2.59,514,1.887,515,1.887,516,1.887,517,1.887,518,1.887,519,1.887,520,1.847,521,1.771,522,1.7,523,2.59,524,1.887,525,1.887,526,1.887,527,1.887,528,1.887,529,1.887,530,1.771,531,1.929,532,1.929,533,1.929,534,1.929,535,1.929,536,1.929,537,1.929,538,1.929,539,1.929,540,1.929,541,1.887,542,1.887,543,1.929,544,1.929,545,1.929,546,1.929,547,1.929,548,1.929,549,1.929,550,1.929,551,1.929,552,1.929,553,1.929,554,1.929,555,1.486,556,1.887,557,1.887,558,1.929,559,4.422,560,2.952,561,2.775,562,2.564,565,2.84,568,2.226,569,2.487,574,2.117,575,2.117,576,2.348,577,2.487,579,4.051,581,4.626,582,4.051,584,0.995,596,3.222,597,2.952,598,2.952,599,2.952,600,2.952,601,2.952,602,2.952,604,2.905,605,2.226,609,2.648,614,3.222,623,2.952,698,2.952,700,3.222,778,4.696,779,5.741,780,4.696,781,4.696,782,5.992,783,4.696,784,4.696,785,4.696,786,2.285,787,4.652,788,4.696,789,3.222,790,4.696,791,4.422,792,4.696,793,3.39,794,6.446,795,4.696]],["title/controllers/AppController-2.html",[393,1.283,394,2.027,796,2.927]],["body/controllers/AppController-2.html",[3,0.067,4,0.051,5,0.084,7,0.1,16,0.007,19,0.067,32,0.004,33,0.005,34,0.004,35,0.319,51,0.77,53,0.241,75,0.139,87,1.613,121,0.972,183,1.698,188,1.236,204,1.518,208,1.236,229,2.722,281,2.036,393,2.33,394,3.68,395,2.256,400,3.774,486,2.958,487,2.305,488,2.356,489,2.958,490,2.356,491,2.256,492,2.356,493,2.356,494,2.305,495,3.004,496,3.197,497,3.267,498,2.305,499,2.305,500,2.256,501,2.256,502,3.197,503,3.197,504,3.303,505,3.267,506,3.066,507,2.256,508,2.958,509,2.305,510,2.305,511,2.305,512,2.895,513,2.958,514,2.305,515,2.305,516,2.305,517,2.305,518,2.305,519,2.305,520,2.256,521,2.163,522,2.077,523,2.958,524,2.305,525,2.305,526,2.305,527,2.305,528,2.305,529,2.305,530,2.163,531,2.356,532,2.356,533,2.356,534,2.356,535,2.356,536,2.356,537,2.356,538,2.356,539,2.356,540,2.356,541,2.305,542,2.305,543,2.356,544,2.356,545,2.356,546,2.356,547,2.356,548,2.356,549,2.356,550,2.356,551,2.356,552,2.356,553,2.356,554,2.356,555,1.815,556,2.305,557,2.305,558,2.356,561,3.066,562,3.132,605,2.718,789,3.935,797,5.736,798,5.736,799,4.387]],["title/controllers/AppController-3.html",[393,1.283,394,2.027,506,1.529]],["body/controllers/AppController-3.html",[3,0.064,4,0.049,5,0.082,7,0.095,16,0.007,19,0.064,32,0.004,33,0.005,34,0.004,35,0.304,51,0.733,53,0.23,75,0.159,87,1.846,121,0.926,176,1.421,183,1.646,188,1.178,204,1.446,208,1.178,226,3.669,227,2.463,229,2.66,281,1.94,393,2.258,394,3.567,395,2.149,400,3.706,486,2.867,487,2.196,488,2.245,489,2.867,490,2.245,491,2.149,492,2.245,493,2.245,494,2.196,495,2.935,496,3.124,497,3.192,498,2.196,499,2.196,500,2.149,501,2.149,502,3.124,503,3.124,504,3.243,505,3.192,506,2.996,507,2.149,508,2.867,509,2.196,510,2.196,511,2.196,512,2.806,513,2.867,514,2.196,515,2.196,516,2.196,517,2.196,518,2.196,519,2.196,520,2.149,521,2.061,522,1.979,523,2.867,524,2.196,525,2.196,526,2.196,527,2.196,528,2.196,529,2.196,530,2.061,531,2.245,532,2.245,533,2.245,534,2.245,535,2.245,536,2.245,537,2.245,538,2.245,539,2.245,540,2.245,541,2.196,542,2.196,543,2.245,544,2.245,545,2.245,546,2.245,547,2.245,548,2.245,549,2.245,550,2.245,551,2.245,552,2.245,553,2.245,554,2.245,555,1.73,556,2.196,557,2.196,558,2.245,561,2.996,562,2.984,571,3.381,572,3.471,573,2.732,577,2.894,604,3.796,605,3.381,606,3.188,607,2.732,608,4.474,737,4.474,789,3.749,800,5.465,801,5.465,802,4.479]],["title/controllers/AppController-4.html",[393,1.283,394,2.027,803,3.101]],["body/controllers/AppController-4.html",[3,0.065,4,0.05,5,0.083,7,0.097,16,0.007,19,0.065,32,0.004,33,0.005,34,0.004,35,0.311,51,0.75,53,0.235,75,0.152,87,1.76,121,0.947,176,1.454,183,1.67,188,1.204,204,1.479,208,1.204,229,2.689,281,1.984,393,2.291,394,3.619,395,2.198,400,3.737,486,2.909,487,2.246,488,2.296,489,2.909,490,2.296,491,2.198,492,2.296,493,2.296,494,2.246,495,2.967,496,3.158,497,3.227,498,2.246,499,2.246,500,2.198,501,2.198,502,3.158,503,3.158,504,3.27,505,3.227,506,3.028,507,2.198,508,2.909,509,2.246,510,2.246,511,2.246,512,2.847,513,2.909,514,2.246,515,2.246,516,2.246,517,2.246,518,2.246,519,2.246,520,2.198,521,2.108,522,2.024,523,2.909,524,2.246,525,2.246,526,2.246,527,2.246,528,2.246,529,2.246,530,2.108,531,2.296,532,2.296,533,2.296,534,2.296,535,2.296,536,2.296,537,2.296,538,2.296,539,2.296,540,2.296,541,2.246,542,2.246,543,2.296,544,2.296,545,2.296,546,2.296,547,2.296,548,2.296,549,2.296,550,2.296,551,2.296,552,2.296,553,2.296,554,2.296,555,1.769,556,2.246,557,2.246,558,2.296,561,3.028,562,3.051,571,3.431,572,3.522,573,2.794,604,2.519,605,3.431,607,2.794,608,4.575,737,4.575,789,3.834,799,4.274,804,5.589,805,5.589]],["title/controllers/AppController-5.html",[393,1.283,394,2.027,722,2.927]],["body/controllers/AppController-5.html",[3,0.023,4,0.018,5,0.044,7,0.035,9,1.089,11,1.767,14,0.363,15,0.323,16,0.007,19,0.023,32,0.001,33,0.002,34,0.001,35,0.111,51,1.002,53,0.314,62,0.856,64,2.202,75,0.15,87,1.637,88,1.029,93,3.101,98,1.993,102,2.608,105,1.849,106,0.999,111,2.782,114,2.765,117,2.805,121,1.321,174,0.918,176,1.762,183,0.773,186,2.217,187,1.629,188,1.646,204,0.53,208,0.722,211,1.774,212,3.954,226,1.722,227,0.902,229,1.447,281,0.71,322,3.362,354,2.499,358,1.947,384,1.128,393,1.367,394,1.675,395,0.787,400,2.223,410,5.117,411,4.327,418,4.979,421,3.128,424,3.537,426,1.722,439,1.954,478,1.53,486,1.346,487,0.804,488,0.822,489,1.346,490,0.822,491,0.787,492,0.822,493,0.822,494,0.804,495,1.596,496,1.699,497,1.736,498,0.804,499,0.804,500,0.787,501,0.787,502,1.699,503,1.699,504,1.945,505,2.03,506,1.629,507,0.787,508,1.346,509,0.804,510,0.804,511,0.804,512,1.317,513,1.346,514,0.804,515,0.804,516,0.804,517,0.804,518,0.804,519,0.804,520,0.787,521,0.755,522,0.725,523,1.346,524,0.804,525,0.804,526,0.804,527,0.804,528,0.804,529,0.804,530,0.755,531,0.822,532,0.822,533,0.822,534,0.822,535,0.822,536,0.822,537,0.822,538,0.822,539,0.822,540,0.822,541,0.804,542,0.804,543,0.822,544,0.822,545,0.822,546,0.822,547,0.822,548,0.822,549,0.822,550,0.822,551,0.822,552,0.822,553,0.822,554,0.822,555,0.633,556,0.804,557,0.804,558,0.822,560,1.258,561,1.629,562,1.093,565,1.21,568,0.948,569,1.06,571,1.588,572,1.63,573,1,574,0.902,575,3.173,576,1,577,1.06,579,3.176,580,4.439,581,2.716,582,2.106,583,4.894,584,0.424,597,1.258,598,1.258,599,1.258,600,1.258,601,1.258,602,1.258,603,1.312,604,2.277,605,0.948,606,1.167,607,1.675,609,2.436,614,3.229,616,4.233,623,3.176,698,2.716,786,1.63,789,1.373,793,2.418,802,3.969,806,1.782,807,2.984,808,3.118,809,3.848,810,2.984,811,2.984,812,3.848,813,3.848,814,3.848,815,3.304,816,3.848,817,1.782,818,1.782,819,1.782,820,1.782,821,4.652,822,1.782,823,1.782,824,1.782,825,1.782,826,1.782,827,1.782,828,1.782,829,1.782,830,1.782,831,1.782,832,1.782,833,1.782,834,1.782,835,5.242,836,5.242,837,5.242,838,3.466,839,2.007,840,1.782,841,1.782,842,2.655,843,3.768,844,5.384,845,2.313,846,2.601,847,1.782,848,1.782,849,1.996,850,2.222,851,4.173,852,4.173,853,4.173,854,2.298,855,1.782,856,6.033,857,2.984,858,1.782,859,1.782,860,2.026,861,1.782,862,1.782,863,1.782,864,1.782,865,1.782,866,1.782,867,1.782,868,2.598,869,1.782,870,1.782,871,1.782,872,1.312,873,2.436,874,1.373,875,1.444,876,1.782,877,1.258,878,0.462,879,6.066,880,0.725,881,0.683,882,2.665,883,2.223,884,2.675,885,2.675,886,2.675,887,2.026,888,1.373,889,1.258,890,2.078,891,1.093,892,1.782,893,3.304,894,1.53,895,1.53,896,1.782,897,2.298,898,1.782,899,1.53,900,3.848,901,1.53,902,1.782,903,3.848,904,1.782,905,1.782,906,3.864,907,2.984,908,3.466,909,1.53,910,1.782,911,4.173,912,5.418,913,1.782,914,1.782,915,1.782,916,2.106,917,1.782,918,1.782,919,1.782,920,1.782,921,1.782,922,2.562,923,1.782,924,1.213,925,2.984,926,2.984,927,2.984,928,1.46,929,2.562,930,1.782,931,2.964,932,1.342,933,1.367,934,2.288,935,2.964,936,2.964,937,2.964,938,1.782,939,2.562,940,2.106,941,2.984,942,2.984,943,2.984,944,2.562,945,1.782,946,1.782,947,1.782,948,1.782,949,1.588,950,1.782,951,2.984,952,2.984,953,1.782,954,1.782,955,1.782]],["title/controllers/AppController-6.html",[393,1.283,394,2.027,956,3.611]],["body/controllers/AppController-6.html",[3,0.023,4,0.018,5,0.044,7,0.035,9,1.089,11,1.767,14,0.363,15,0.323,16,0.007,19,0.023,32,0.001,33,0.002,34,0.001,35,0.111,51,1.002,53,0.314,62,0.856,64,2.202,75,0.15,87,1.637,88,1.029,93,3.101,98,1.993,102,2.608,105,1.849,106,0.999,111,2.782,114,2.765,117,2.805,121,1.321,174,0.918,176,1.762,183,0.773,186,2.217,187,1.629,188,1.646,204,0.53,208,0.722,211,1.774,212,3.954,226,1.722,227,0.902,229,1.447,281,0.71,322,3.362,354,2.499,358,1.947,384,1.128,393,1.367,394,1.675,395,0.787,400,2.223,410,5.117,411,4.327,418,4.979,421,3.128,424,3.537,426,1.722,439,1.954,478,1.53,486,1.346,487,0.804,488,0.822,489,1.346,490,0.822,491,0.787,492,0.822,493,0.822,494,0.804,495,1.596,496,1.699,497,1.736,498,0.804,499,0.804,500,0.787,501,0.787,502,1.699,503,1.699,504,1.945,505,2.03,506,1.629,507,0.787,508,1.346,509,0.804,510,0.804,511,0.804,512,1.317,513,1.346,514,0.804,515,0.804,516,0.804,517,0.804,518,0.804,519,0.804,520,0.787,521,0.755,522,0.725,523,1.346,524,0.804,525,0.804,526,0.804,527,0.804,528,0.804,529,0.804,530,0.755,531,0.822,532,0.822,533,0.822,534,0.822,535,0.822,536,0.822,537,0.822,538,0.822,539,0.822,540,0.822,541,0.804,542,0.804,543,0.822,544,0.822,545,0.822,546,0.822,547,0.822,548,0.822,549,0.822,550,0.822,551,0.822,552,0.822,553,0.822,554,0.822,555,0.633,556,0.804,557,0.804,558,0.822,560,1.258,561,1.629,562,1.093,565,1.21,568,0.948,569,1.06,571,1.588,572,1.63,573,1,574,0.902,575,3.173,576,1,577,1.06,579,3.176,580,4.439,581,2.716,582,2.106,583,4.894,584,0.424,597,1.258,598,1.258,599,1.258,600,1.258,601,1.258,602,1.258,603,1.312,604,2.277,605,0.948,606,1.167,607,1.675,609,2.436,614,3.229,616,4.233,623,3.176,698,2.716,786,1.63,789,1.373,793,2.418,802,3.969,806,1.782,807,2.984,808,3.118,809,3.848,810,2.984,811,2.984,812,3.848,813,3.848,814,3.848,815,3.304,816,3.848,817,1.782,818,1.782,819,1.782,820,1.782,821,4.652,822,1.782,823,1.782,824,1.782,825,1.782,826,1.782,827,1.782,828,1.782,829,1.782,830,1.782,831,1.782,832,1.782,833,1.782,834,1.782,835,5.242,836,5.242,837,5.242,838,3.466,839,2.007,840,1.782,841,1.782,842,2.655,843,3.768,844,5.384,845,2.313,846,2.601,847,1.782,848,1.782,849,1.996,850,2.222,851,4.173,852,4.173,853,4.173,854,2.298,855,1.782,856,6.033,857,2.984,858,1.782,859,1.782,860,2.026,861,1.782,862,1.782,863,1.782,864,1.782,865,1.782,866,1.782,867,1.782,868,2.598,869,1.782,870,1.782,871,1.782,872,1.312,873,2.436,874,1.373,875,1.444,876,1.782,877,1.258,878,0.462,879,6.066,880,0.725,881,0.683,882,2.665,883,2.223,884,2.675,885,2.675,886,2.675,887,2.026,888,1.373,889,1.258,890,2.078,891,1.093,892,1.782,893,3.304,894,1.53,895,1.53,896,1.782,897,2.298,898,1.782,899,1.53,900,3.848,901,1.53,902,1.782,903,3.848,904,1.782,905,1.782,906,3.864,907,2.984,908,3.466,909,1.53,910,1.782,911,4.173,912,5.418,913,1.782,914,1.782,915,1.782,916,2.106,917,1.782,918,1.782,919,1.782,920,1.782,921,1.782,922,2.562,923,1.782,924,1.213,925,2.984,926,2.984,927,2.984,928,1.46,929,2.562,930,1.782,931,2.964,932,1.342,933,1.367,934,2.288,935,2.964,936,2.964,937,2.964,938,1.782,939,2.562,940,2.106,941,2.984,942,2.984,943,2.984,944,2.562,945,1.782,946,1.782,947,1.782,948,1.782,949,1.588,950,1.782,951,2.984,952,2.984,953,1.782,954,1.782,955,1.782]],["title/modules/AppModule.html",[957,2.489,958,3.702]],["body/modules/AppModule.html",[3,0.064,4,0.049,5,0.082,16,0.007,19,0.064,32,0.004,33,0.005,34,0.004,35,0.305,75,0.165,87,1.742,204,1.448,208,1.179,229,2.662,281,1.943,394,3.974,395,2.809,486,2.87,487,2.199,488,2.248,489,2.87,490,2.248,491,2.153,492,2.248,493,2.248,494,2.199,495,2.937,496,3.126,497,3.195,498,2.199,499,2.199,500,2.153,501,2.153,502,3.126,503,3.126,504,3.244,505,3.195,506,2.998,507,2.153,508,2.87,509,2.199,510,2.199,511,2.199,512,2.809,513,2.87,514,2.199,515,2.199,516,2.199,517,2.199,518,2.199,519,2.199,520,2.153,521,2.064,522,1.982,523,2.87,524,2.199,525,2.199,526,2.199,527,2.199,528,2.199,529,2.199,530,2.064,531,2.248,532,2.248,533,2.248,534,2.248,535,2.248,536,2.248,537,2.248,538,2.248,539,2.248,540,2.248,541,2.199,542,2.199,543,2.248,544,2.248,545,2.248,546,2.248,547,2.248,548,2.248,549,2.248,550,2.248,551,2.248,552,2.248,553,2.248,554,2.248,555,1.732,556,2.199,557,2.199,558,2.248,561,3.38,562,2.988,577,2.898,957,3.672,958,7.08,959,3.193,960,4.68,961,4.875,962,4.875,963,4.875,964,6.149,965,5.155,966,3.951,967,3.587,968,5.473,969,4.68,970,4.209,971,5.462,972,5.473,973,5.473]],["title/injectables/AppService.html",[207,1.116,561,1.825]],["body/injectables/AppService.html",[3,0.094,4,0.05,5,0.058,7,0.099,9,0.849,14,0.384,15,0.248,16,0.007,19,0.066,32,0.004,33,0.005,34,0.004,35,0.315,44,2.812,53,0.307,62,1.867,64,2.052,75,0.161,85,2.685,86,2.685,87,1.771,88,2.913,93,2.812,106,0.948,114,2.466,117,1.793,121,0.96,183,1.684,186,1.728,187,1.047,188,1.574,207,1.684,208,1.221,271,2.435,280,1.697,322,2.493,338,4.638,400,3.757,495,3.154,561,2.754,578,4.638,619,1.804,678,5.046,688,3.713,974,2.228,975,5.666,976,7.304,977,5.666,978,7.304,979,8.836,980,5.666,981,5.666,982,7.304,983,5.666,984,6.505,985,5.666,986,5.666,987,7.304,988,5.666,989,5.666,990,7.304,991,7.304,992,5.666,993,5.666,994,5.666,995,7.304,996,2.832,997,6.505,998,7.304,999,5.666,1000,7.304,1001,5.297,1002,5.046,1003,5.666,1004,5.666,1005,5.666,1006,5.666,1007,4.638,1008,5.666,1009,7.304,1010,5.666,1011,5.666,1012,5.666,1013,5.666]],["title/injectables/AppService-1.html",[207,0.935,561,1.529,777,1.073]],["body/injectables/AppService-1.html",[3,0.084,4,0.064,5,0.074,7,0.125,14,0.29,15,0.244,16,0.007,19,0.084,32,0.005,33,0.006,34,0.005,35,0.399,53,0.301,64,2.596,75,0.135,121,1.215,183,1.948,188,1.545,207,1.948,208,1.545,400,4.079,561,3.185,619,2.085,974,2.819,1001,4.698,1014,7.168,1015,7.168,1016,5.174]],["title/injectables/AppService-2.html",[207,0.935,561,1.529,796,2.927]],["body/injectables/AppService-2.html",[3,0.084,4,0.064,5,0.074,7,0.125,14,0.29,15,0.244,16,0.007,19,0.084,32,0.005,33,0.006,34,0.005,35,0.399,53,0.301,64,2.596,75,0.135,121,1.215,183,1.948,188,1.545,207,1.948,208,1.545,400,4.079,561,3.185,619,2.085,974,2.819,1001,4.698,1017,7.168,1018,7.168,1019,7.168]],["title/injectables/AppService-3.html",[207,0.935,506,1.529,561,1.529]],["body/injectables/AppService-3.html",[3,0.084,4,0.064,5,0.074,7,0.125,14,0.29,15,0.244,16,0.007,19,0.084,32,0.005,33,0.006,34,0.005,35,0.399,53,0.301,64,2.596,75,0.135,121,1.215,183,1.948,188,1.545,207,1.948,208,1.545,400,4.079,561,3.185,619,2.085,924,2.596,974,2.819,1001,4.698,1020,7.168,1021,7.168]],["title/injectables/AppService-4.html",[207,0.935,561,1.529,803,3.101]],["body/injectables/AppService-4.html",[3,0.084,4,0.064,5,0.074,7,0.125,14,0.29,15,0.244,16,0.007,19,0.084,32,0.005,33,0.006,34,0.005,35,0.399,53,0.301,64,2.596,75,0.135,121,1.215,183,1.948,188,1.545,207,1.948,208,1.545,400,4.079,561,3.185,619,2.085,974,2.819,1001,4.698,1022,7.168,1023,7.168,1024,7.168]],["title/injectables/AppService-5.html",[207,0.935,561,1.529,722,2.927]],["body/injectables/AppService-5.html",[3,0.084,4,0.064,5,0.074,7,0.125,14,0.29,15,0.244,16,0.007,19,0.084,32,0.005,33,0.006,34,0.005,35,0.399,53,0.301,64,2.596,75,0.135,121,1.215,183,1.948,188,1.545,207,1.948,208,1.545,400,4.079,561,3.185,619,2.085,974,2.819,1001,4.698,1025,7.168,1026,7.168,1027,6.384]],["title/injectables/AppService-6.html",[207,0.935,561,1.529,956,3.611]],["body/injectables/AppService-6.html",[3,0.084,4,0.064,5,0.074,7,0.125,14,0.29,15,0.244,16,0.007,19,0.084,32,0.005,33,0.006,34,0.005,35,0.399,53,0.301,64,2.596,75,0.135,121,1.215,183,1.948,188,1.545,207,1.948,208,1.545,400,4.079,561,3.185,619,2.085,974,2.819,1001,4.698,1028,7.168,1029,7.168,1030,5.868]],["title/classes/ArchiveHashtag.html",[35,0.269,1031,4.311]],["body/classes/ArchiveHashtag.html",[3,0.068,4,0.052,5,0.06,7,0.101,8,0.836,9,1.403,14,0.234,15,0.324,16,0.007,19,0.096,23,1.257,32,0.004,33,0.005,34,0.004,35,0.323,37,0.853,39,3.098,46,2.684,47,3.262,48,2.068,49,2.796,50,2.678,51,1.222,52,3.107,53,0.389,56,2.552,57,4.66,61,3.775,62,2.365,69,3.248,70,2.614,71,2.614,72,2.614,73,1.769,74,2.614,75,0.163,76,2.436,77,2.058,78,1.737,79,1.676,80,2.436,82,2.018,101,2.058,102,2.404,106,0.68,1031,7.278,1032,5.165,1033,8.172,1034,6.249,1035,8.172,1036,5.799,1037,6.249,1038,5.799,1039,5.799,1040,5.165,1041,5.165,1042,5.799,1043,5.799]],["title/classes/Author.html",[35,0.269,1044,1.788]],["body/classes/Author.html",[3,0.047,4,0.06,5,0.041,7,0.07,8,0.653,11,1.852,14,0.386,15,0.322,16,0.007,19,0.107,23,0.683,24,1.536,25,1.435,27,1.793,32,0.003,33,0.004,34,0.003,35,0.532,37,0.593,48,1.124,51,1.129,53,0.353,60,1.451,75,0.128,98,1.013,105,1.387,106,0.473,123,1.673,174,1.346,187,1.07,204,1.067,280,2.35,584,0.854,619,1.673,777,1.067,839,1.799,842,1.52,845,2.577,846,1.49,878,2.312,880,2.682,881,1.376,890,1.49,924,2.097,928,1.958,932,1.253,933,1.276,1044,2.898,1045,1.694,1046,2.269,1047,2.105,1048,4.032,1049,4.032,1050,4.032,1051,4.032,1052,4.032,1053,2.852,1054,4.032,1055,4.032,1056,1.867,1057,2.23,1058,2.957,1059,2.433,1060,1.124,1061,3.295,1062,2.609,1063,3.372,1064,2.433,1065,2.609,1066,2.277,1067,2.277,1068,2.327,1069,2.277,1070,2.454,1071,1.552,1072,2.327,1073,1.49,1074,1.656,1075,3.111,1076,2.03,1077,2.327,1078,1.694,1079,2.723,1080,2.055,1081,2.379,1082,2.852,1083,2.489,1084,2.489,1085,1.656,1086,1.733,1087,1.62,1088,1.62,1089,1.733,1090,1.208,1091,1.23,1092,2.433,1093,1.52,1094,2.784,1095,2.847,1096,2.269,1097,2.277,1098,2.379,1099,1.49,1100,1.46]],["title/classes/AuthorDto.html",[35,0.269,1092,2.033]],["body/classes/AuthorDto.html",[3,0.05,4,0.062,5,0.044,7,0.074,8,0.681,11,1.888,14,0.385,15,0.315,16,0.007,19,0.108,23,0.724,24,0.969,25,0.905,27,1.131,32,0.003,33,0.004,34,0.003,35,0.536,37,0.629,48,1.192,51,0.81,53,0.254,60,1.384,75,0.132,98,1.074,105,1.433,106,0.501,123,1.235,174,1.381,187,1.116,204,1.131,280,2.403,584,0.905,619,1.728,777,1.131,839,1.875,842,1.612,845,2.635,846,1.579,878,2.312,880,2.753,881,1.459,890,1.579,924,2.186,928,2.022,932,1.328,933,1.352,1044,2.809,1045,1.795,1046,1.431,1047,1.328,1053,2.928,1056,1.946,1057,2.324,1058,3.014,1059,2.536,1060,1.192,1061,3.37,1062,2.695,1063,3.448,1064,2.536,1065,2.695,1066,2.374,1067,2.374,1068,2.426,1069,2.374,1070,2.534,1071,1.645,1072,2.426,1073,1.579,1074,1.755,1075,3.194,1076,2.096,1077,2.426,1078,1.795,1079,2.812,1080,2.142,1081,2.479,1082,2.928,1083,2.594,1084,2.594,1085,1.755,1086,1.837,1087,1.717,1088,1.717,1089,1.837,1090,1.28,1091,1.304,1092,2.94,1093,1.612,1094,2.875,1095,2.94,1096,2.343,1097,2.374,1098,2.479,1099,1.579,1100,1.547,1101,4.274,1102,4.274]],["title/classes/BlogPayload.html",[35,0.269,1065,1.864]],["body/classes/BlogPayload.html",[3,0.049,4,0.061,5,0.043,7,0.073,8,0.67,9,1.128,11,1.708,14,0.385,15,0.314,16,0.007,19,0.108,23,0.709,24,0.948,25,0.886,27,1.107,32,0.003,33,0.004,34,0.003,35,0.535,37,0.615,48,1.166,51,0.928,53,0.316,60,1.372,75,0.131,98,1.051,105,1.416,106,0.491,123,1.208,174,1.368,187,1.099,204,1.83,280,2.603,584,0.886,619,1.965,777,1.107,839,1.847,842,1.577,845,2.474,846,1.545,878,2.311,880,2.727,881,1.427,890,1.545,924,2.152,928,1.998,932,1.299,933,1.323,1044,2.782,1045,1.757,1046,1.4,1047,1.299,1053,2.663,1056,1.917,1057,2.289,1058,2.993,1059,2.905,1060,1.166,1061,3.342,1062,2.663,1063,3.655,1064,2.497,1065,2.9,1066,2.338,1067,2.338,1068,2.389,1069,2.338,1070,2.504,1071,1.61,1072,2.389,1073,1.545,1074,1.718,1075,3.164,1076,2.072,1077,2.389,1078,1.757,1079,2.779,1080,2.11,1081,2.442,1082,2.9,1083,2.555,1084,2.555,1085,1.718,1086,1.797,1087,1.68,1088,1.68,1089,1.797,1090,1.253,1091,1.276,1092,2.497,1093,1.577,1094,2.841,1095,2.905,1096,2.316,1097,2.338,1098,2.442,1099,1.545,1100,1.514,1103,4.182,1104,4.182,1105,4.182,1106,4.182]],["title/classes/BlogPhoto.html",[35,0.269,1059,2.033]],["body/classes/BlogPhoto.html",[3,0.05,4,0.062,5,0.044,7,0.075,8,0.682,11,1.726,14,0.383,15,0.31,16,0.007,19,0.108,23,0.726,24,0.971,25,0.907,27,1.133,32,0.003,33,0.004,34,0.003,35,0.536,37,0.63,48,1.195,51,0.811,53,0.254,60,1.385,75,0.132,98,1.076,105,1.435,106,0.503,123,1.238,174,1.383,187,1.117,204,1.133,280,2.405,584,0.907,619,1.73,777,1.133,839,1.878,842,1.615,845,2.501,846,1.583,878,2.313,880,2.756,881,1.462,890,1.583,924,2.756,928,2.025,932,1.331,933,1.356,1044,2.812,1045,1.799,1046,1.434,1047,1.331,1053,2.698,1056,1.949,1057,2.328,1058,3.166,1059,2.944,1060,1.954,1061,3.372,1062,2.698,1063,3.451,1064,2.54,1065,2.698,1066,2.378,1067,2.378,1068,2.43,1069,2.378,1070,2.537,1071,1.649,1072,2.43,1073,1.583,1074,1.759,1075,3.198,1076,2.099,1077,2.43,1078,1.799,1079,2.816,1080,2.146,1081,2.484,1082,2.931,1083,2.599,1084,2.599,1085,1.759,1086,1.841,1087,1.721,1088,1.721,1089,1.841,1090,1.283,1091,1.307,1092,2.54,1093,1.615,1094,2.878,1095,2.944,1096,2.346,1097,2.378,1098,2.484,1099,1.583,1100,1.551,1107,4.283,1108,4.283]],["title/classes/CastLogger.html",[35,0.269,571,2.294]],["body/classes/CastLogger.html",[3,0.063,4,0.048,5,0.056,7,0.095,9,1.186,14,0.386,15,0.269,16,0.007,19,0.093,23,1.204,32,0.004,33,0.005,34,0.004,35,0.302,37,0.798,53,0.333,57,4.975,62,1.387,75,0.134,85,2.571,86,2.571,87,1.189,88,2.79,106,1.023,183,1.638,186,2.415,187,1.463,188,1.706,208,1.169,529,3.593,571,3.365,572,2.639,619,2.208,622,6.134,860,5.078,1109,5.425,1110,7.916,1111,9.561,1112,8.942,1113,7.101,1114,8.397,1115,5.391,1116,5.425,1117,8.942,1118,7.05,1119,7.101,1120,5.425,1121,7.101,1122,5.425,1123,7.101,1124,7.101,1125,8.942,1126,7.916,1127,5.425,1128,5.425,1129,5.425,1130,5.425,1131,7.101,1132,5.425,1133,5.425,1134,5.425,1135,5.425,1136,3.916]],["title/classes/CastcleBase.html",[35,0.269,39,1.621]],["body/classes/CastcleBase.html",[3,0.077,4,0.059,5,0.068,7,0.115,8,0.909,9,1.44,14,0.325,15,0.315,16,0.007,19,0.077,32,0.004,33,0.005,34,0.004,35,0.369,37,0.975,39,2.698,46,3.144,47,3.82,48,2.422,49,3.274,50,2.657,51,1.165,52,3.212,53,0.379,56,2.917,73,2.649,75,0.152,76,2.648,78,1.986,95,3.063,1137,6.63,1138,6.63,1139,6.63,1140,6.63,1141,6.63]],["title/classes/CastcleContentQueryOptions.html",[35,0.269,1098,1.988]],["body/classes/CastcleContentQueryOptions.html",[3,0.048,4,0.061,5,0.042,7,0.071,8,0.658,9,1.293,11,1.688,14,0.381,15,0.321,16,0.007,19,0.108,23,0.989,24,0.924,25,0.863,27,1.079,32,0.003,33,0.004,34,0.003,35,0.533,37,0.6,48,1.628,53,0.313,60,1.359,64,1.476,69,2.807,75,0.129,98,1.024,105,1.613,106,0.478,123,1.178,174,1.352,187,1.079,204,1.079,280,2.36,584,0.863,619,1.684,777,1.544,839,2.118,842,2.571,845,2.693,846,2.519,849,3.15,850,3.506,878,2.306,880,2.695,881,1.391,890,1.506,924,2.113,928,1.97,932,1.813,933,1.847,1044,2.75,1045,1.712,1046,1.365,1047,1.266,1053,2.625,1056,1.882,1057,3.25,1058,2.968,1059,2.452,1060,1.137,1061,3.309,1062,2.625,1063,3.386,1064,2.452,1065,2.625,1066,2.295,1067,2.295,1068,2.345,1069,2.295,1070,2.469,1071,1.569,1072,2.345,1073,1.506,1074,1.674,1075,3.127,1076,2.042,1077,2.345,1078,1.712,1079,2.74,1080,2.072,1081,2.397,1082,2.866,1083,2.509,1084,2.509,1085,1.674,1086,1.752,1087,1.638,1088,1.638,1089,1.752,1090,1.221,1091,1.243,1092,2.452,1093,1.537,1094,2.801,1095,2.864,1096,2.283,1097,2.295,1098,2.801,1099,2.156,1100,1.476,1142,4.076,1143,4.076,1144,4.076,1145,4.076]],["title/classes/CastcleException.html",[35,0.269,575,2.182]],["body/classes/CastcleException.html",[0,1.218,3,0.07,4,0.053,5,0.061,9,0.891,14,0.362,15,0.202,16,0.007,19,0.088,23,1.277,32,0.004,33,0.005,34,0.004,35,0.331,37,0.875,53,0.25,75,0.142,98,1.494,106,0.698,186,1.815,187,1.099,208,1.282,227,2.681,495,2.198,574,4.043,575,3.396,619,1.469,622,4.08,753,5.419,1146,4.869,1147,7.364,1148,6.71,1149,5.948,1150,5.297,1151,5.297,1152,4.869,1153,4.869,1154,4.869,1155,4.869,1156,4.869,1157,4.869,1158,4.869,1159,4.869,1160,4.869,1161,4.869,1162,4.869,1163,4.869,1164,4.869,1165,4.869,1166,4.869,1167,4.869,1168,4.869,1169,4.869,1170,4.869,1171,4.869,1172,4.869,1173,4.869,1174,4.869,1175,4.869,1176,4.869,1177,4.869,1178,4.869,1179,4.869,1180,4.869,1181,4.869,1182,4.869,1183,4.869,1184,4.869,1185,4.869,1186,4.869,1187,4.869,1188,4.869,1189,4.869,1190,4.869,1191,4.869,1192,4.869,1193,4.869,1194,4.869,1195,4.869,1196,4.869,1197,4.869,1198,4.869,1199,4.869,1200,4.869,1201,4.869,1202,4.869,1203,4.869,1204,6.167,1205,5.297,1206,4.869,1207,5.297,1208,5.297,1209,5.297]],["title/classes/CastcleName.html",[35,0.269,222,3.494]],["body/classes/CastcleName.html",[3,0.044,4,0.033,5,0.039,7,0.065,8,0.62,9,1.232,14,0.395,15,0.308,16,0.007,19,0.044,32,0.003,33,0.004,34,0.003,35,0.209,37,0.552,53,0.381,60,1.548,62,2.036,75,0.071,106,0.894,121,1.504,183,1.267,186,2.51,187,1.82,188,1.933,222,3.966,227,1.69,229,1.84,281,2.705,322,2.418,358,3.59,362,2.941,363,3.521,381,3.466,382,3.966,383,3.098,521,2.072,777,0.992,1007,4.497,1071,3.315,1210,9.138,1211,3.75,1212,6.503,1213,6.503,1214,4.973,1215,6.426,1216,7.16,1217,5.494,1218,5.494,1219,5.494,1220,5.494,1221,3.75,1222,5.494,1223,3.75,1224,3.75,1225,3.75,1226,3.75,1227,3.75,1228,5.494,1229,3.75,1230,6.788,1231,7.622,1232,7.964,1233,7.622,1234,5.494,1235,5.494,1236,5.494,1237,3.75,1238,5.494,1239,5.494,1240,5.494,1241,3.75,1242,7.093,1243,5.494,1244,5.494,1245,5.494,1246,3.75,1247,5.494,1248,5.494,1249,3.75,1250,5.494,1251,4.893,1252,5.494,1253,3.75,1254,3.75,1255,3.75,1256,3.75,1257,3.75,1258,5.494,1259,3.75,1260,3.07,1261,3.75,1262,3.75,1263,3.75,1264,3.75,1265,3.75,1266,3.75,1267,3.75,1268,3.75,1269,3.75,1270,3.75,1271,3.75,1272,3.75,1273,6.503,1274,3.75,1275,3.75,1276,4.893,1277,5.494,1278,3.75,1279,5.494,1280,5.494,1281,5.494,1282,3.75,1283,3.75,1284,3.75,1285,6.503,1286,3.75,1287,3.75,1288,3.75,1289,3.75,1290,3.75,1291,3.75,1292,3.75,1293,3.75,1294,3.75,1295,3.75,1296,5.494,1297,3.75,1298,3.75]],["title/classes/CastcleQueryOptions.html",[35,0.269,1057,1.864]],["body/classes/CastcleQueryOptions.html",[3,0.07,4,0.053,5,0.061,7,0.104,8,0.85,9,1.411,14,0.334,15,0.33,16,0.007,19,0.102,32,0.004,33,0.005,34,0.004,35,0.419,37,0.875,48,2.306,53,0.365,64,2.154,73,1.815,75,0.112,98,1.494,105,1.928,106,0.698,130,2.29,584,1.26,777,2.188,842,3.278,845,2.856,846,3.314,849,3.82,850,4.252,878,2.069,928,1.719,932,2.701,933,2.751,934,3.149,1057,3.184,1099,3.055,1299,4.869,1300,5.948,1301,5.948,1302,5.948,1303,5.948,1304,4.869,1305,4.08,1306,3.898,1307,6.167,1308,4.937,1309,5.762]],["title/classes/ChangePasswordBody.html",[35,0.269,592,2.355]],["body/classes/ChangePasswordBody.html",[3,0.067,4,0.051,5,0.059,7,0.099,8,0.828,14,0.4,15,0.25,16,0.007,19,0.113,24,1.664,25,1.21,26,2.43,32,0.004,33,0.005,34,0.004,35,0.541,37,0.84,44,3.123,51,0.985,53,0.308,60,0.985,75,0.108,100,2.198,174,1.474,243,2.345,246,2.887,362,2.345,363,2.638,371,3.768,386,3.844,417,2.778,437,2.778,447,2.778,462,2.778,584,1.21,585,2.778,586,2.778,587,2.778,588,2.778,589,2.778,590,2.778,591,2.778,592,3.571,619,1.41,720,2.854,878,2.299,996,2.854,1310,2.936,1311,5.71,1312,5.71,1313,3.669,1314,2.936,1315,3.669]],["title/classes/CheckEmailExistDto.html",[35,0.269,586,2.355]],["body/classes/CheckEmailExistDto.html",[3,0.068,4,0.052,5,0.06,7,0.101,8,0.836,14,0.399,15,0.197,16,0.007,19,0.113,24,1.681,25,1.228,26,2.666,32,0.004,33,0.005,34,0.004,35,0.542,37,0.853,44,3.146,51,0.778,53,0.244,60,1,75,0.109,100,2.233,174,1.485,243,2.382,246,2.916,362,2.382,363,2.679,371,3.262,386,2.748,417,2.821,437,2.821,447,2.821,462,2.821,584,1.228,585,2.821,586,3.607,587,2.821,588,2.821,589,2.821,590,2.821,591,2.821,592,2.821,619,1.432,720,2.899,878,2.298,996,2.899,1310,2.982,1313,3.706,1314,2.982,1315,3.706,1316,5.799]],["title/classes/CheckIdExistDto.html",[35,0.269,417,2.355]],["body/classes/CheckIdExistDto.html",[3,0.068,4,0.052,5,0.06,7,0.101,8,0.836,14,0.399,15,0.197,16,0.007,19,0.113,24,1.953,25,1.228,26,2.448,32,0.004,33,0.005,34,0.004,35,0.542,37,0.853,44,3.146,51,0.778,53,0.244,60,1,75,0.109,100,2.233,174,1.485,243,2.382,246,2.916,362,2.382,363,2.679,371,3.262,386,2.748,417,3.607,437,2.821,447,2.821,462,2.821,584,1.228,585,2.821,586,2.821,587,2.821,588,2.821,589,2.821,590,2.821,591,2.821,592,2.821,619,1.432,720,2.899,878,2.298,996,2.899,1310,2.982,1313,3.706,1314,2.982,1315,3.706,1317,5.799]],["title/classes/CheckingResponse.html",[35,0.269,587,2.355]],["body/classes/CheckingResponse.html",[3,0.067,4,0.051,5,0.059,7,0.099,8,0.827,14,0.399,15,0.276,16,0.007,19,0.113,24,1.663,25,1.208,26,2.428,32,0.004,33,0.005,34,0.004,35,0.541,37,0.839,44,3.121,51,0.984,53,0.308,60,0.983,64,2.064,75,0.108,100,2.195,174,1.608,243,2.342,246,2.884,362,2.342,363,2.634,371,3.227,386,2.702,417,2.774,437,2.774,447,2.774,462,2.774,584,1.208,585,2.774,586,2.774,587,3.567,588,2.774,589,2.774,590,2.774,591,2.774,592,2.774,619,2.002,720,2.85,878,2.298,996,2.85,1310,2.931,1313,3.666,1314,2.931,1315,3.666,1318,5.701,1319,5.701]],["title/classes/Circle.html",[35,0.269,1320,4.311]],["body/classes/Circle.html",[3,0.068,4,0.051,5,0.059,7,0.101,8,0.834,9,1.402,14,0.373,15,0.326,16,0.007,19,0.101,23,1.254,32,0.004,33,0.005,34,0.004,35,0.322,37,0.85,39,3.096,46,2.679,47,3.256,48,2.064,49,2.79,50,2.177,51,1.221,52,3.105,53,0.388,56,2.544,61,3.77,62,2.364,69,3.244,70,2.606,71,2.606,72,2.606,73,1.764,74,2.606,75,0.154,76,2.431,77,2.052,78,1.732,79,1.671,80,2.431,82,2.012,98,1.452,101,2.052,102,2.401,106,0.678,187,1.508,849,3.418,1071,3.142,1320,7.267,1321,4.732,1322,5.781,1323,5.781,1324,5.781,1325,5.149,1326,6.589,1327,5.149,1328,5.781,1329,5.781]],["title/classes/Comment.html",[35,0.269,1080,1.718]],["body/classes/Comment.html",[3,0.05,4,0.062,5,0.044,7,0.074,8,0.676,11,1.717,14,0.383,15,0.312,16,0.007,19,0.108,23,0.718,24,0.96,25,0.897,27,1.121,32,0.003,33,0.004,34,0.003,35,0.535,37,0.623,48,1.181,51,0.934,53,0.293,60,1.432,75,0.131,98,1.064,105,1.551,106,0.497,123,1.224,174,1.376,187,1.108,204,1.121,280,2.395,584,0.897,619,1.72,777,1.121,839,1.863,842,1.597,845,2.488,846,1.564,878,2.312,880,2.742,881,1.445,890,1.564,924,2.171,928,2.012,932,1.316,933,1.34,1044,2.798,1045,1.779,1046,1.418,1047,1.316,1053,2.681,1056,1.934,1057,2.309,1058,3.005,1059,2.519,1060,1.181,1061,3.358,1062,2.681,1063,3.436,1064,2.519,1065,2.681,1066,2.359,1067,2.359,1068,2.41,1069,2.359,1070,2.521,1071,1.63,1072,2.41,1073,1.564,1074,1.739,1075,3.358,1076,2.395,1077,2.41,1078,1.779,1079,3.212,1080,2.471,1081,3.111,1082,2.916,1083,2.578,1084,2.578,1085,1.739,1086,1.82,1087,1.702,1088,1.702,1089,1.82,1090,1.268,1091,1.292,1092,2.519,1093,1.597,1094,2.86,1095,2.925,1096,2.332,1097,2.359,1098,2.463,1099,1.564,1100,1.533,1330,4.234,1331,4.234,1332,4.234]],["title/classes/Comment-1.html",[35,0.226,777,1.073,1080,1.439]],["body/classes/Comment-1.html",[3,0.063,4,0.048,5,0.056,7,0.094,8,0.798,9,1.383,14,0.339,15,0.331,16,0.007,19,0.092,23,1.2,32,0.004,33,0.005,34,0.004,35,0.301,36,2.5,37,0.795,39,3.047,46,2.564,47,3.116,48,1.975,49,2.67,50,2.083,51,1.239,52,3.151,53,0.392,56,3.116,57,4.45,61,3.873,62,2.387,64,1.956,65,3.522,69,3.161,70,2.435,71,2.435,72,2.435,73,1.648,74,2.435,75,0.158,76,2.326,77,1.917,78,1.618,79,1.561,80,2.326,82,1.88,101,1.917,102,2.466,105,1.617,106,0.634,158,2.377,619,1.951,1016,5.701,1034,6.04,1044,2.918,1076,1.618,1080,2.804,1333,4.811,1334,6.04,1335,5.402,1336,5.402,1337,5.402,1338,5.402,1339,5.402,1340,4.811,1341,4.422,1342,4.422,1343,5.402,1344,5.402]],["title/injectables/CommonDate.html",[207,1.116,563,3.962]],["body/injectables/CommonDate.html",[3,0.057,4,0.044,5,0.051,7,0.086,9,1.302,14,0.385,15,0.296,16,0.007,19,0.057,32,0.003,33,0.004,34,0.003,35,0.273,50,2.896,53,0.365,75,0.125,105,1.961,106,0.884,121,1.474,176,2.383,183,1.533,186,2.652,187,1.607,188,1.873,207,1.533,208,1.059,563,5.442,727,8.161,733,4.377,734,4.377,974,1.933,1276,4.377,1345,4.914,1346,6.648,1347,6.648,1348,6.648,1349,6.648,1350,6.648,1351,6.648,1352,6.648,1353,8.073,1354,8.073,1355,8.073,1356,4.914,1357,6.648,1358,7.535,1359,4.914,1360,6.648,1361,7.535,1362,4.914,1363,6.648,1364,4.914,1365,7.535,1366,6.648,1367,8.25,1368,4.914,1369,6.648,1370,4.914,1371,5.921,1372,6.648,1373,4.914,1374,7.535,1375,4.914,1376,4.914,1377,4.914,1378,4.914,1379,6.648,1380,4.914,1381,4.377,1382,4.914,1383,4.914,1384,4.914,1385,4.914,1386,4.914,1387,4.914]],["title/classes/Content.html",[35,0.269,1388,2.489]],["body/classes/Content.html",[0,1.297,3,0.042,4,0.056,5,0.037,7,0.062,8,0.599,9,1.248,11,1.205,14,0.302,15,0.322,16,0.007,19,0.092,23,1.073,32,0.004,33,0.004,34,0.002,35,0.199,36,1.134,37,0.527,39,2.716,46,1.924,47,2.338,48,1.482,49,2.004,50,1.563,51,1.142,52,2.904,53,0.364,56,2.786,57,3.34,61,3.236,62,2.175,64,1.297,65,3.291,69,2.641,70,1.615,71,1.615,72,1.615,73,1.621,74,1.615,75,0.161,76,1.746,77,1.272,78,1.073,79,1.83,80,1.746,81,2.877,82,1.247,95,1.655,101,1.272,102,2.061,105,1.297,106,0.952,114,1.621,115,2.722,117,1.681,121,1.073,128,1.791,130,2.697,132,2.338,134,4.805,151,1.615,158,1.577,174,1.513,176,0.932,187,0.662,188,0.772,271,2.722,281,1.272,310,3.62,322,2.338,326,3.645,354,1.472,387,2.252,389,2.252,392,2.252,393,1.134,555,2.217,741,2.252,777,1.406,839,1.113,880,2.536,1016,4.57,1034,4.843,1044,2.996,1062,2.438,1065,2.438,1066,2.942,1069,2.942,1070,1.297,1071,1.38,1072,2.135,1073,1.324,1074,1.472,1076,2.429,1077,2.135,1079,2.135,1080,1.272,1081,2.182,1082,2.046,1087,1.44,1088,2.135,1090,1.073,1091,1.093,1097,2.49,1308,3.482,1334,5.356,1341,2.933,1342,6.123,1388,4.516,1389,2.933,1390,3.583,1391,3.583,1392,3.583,1393,3.583,1394,3.583,1395,3.583,1396,2.933,1397,2.586,1398,3.191,1399,2.586,1400,2.586,1401,3.191,1402,3.191,1403,3.98,1404,4.349,1405,4.57,1406,3.482,1407,3.191,1408,5.183,1409,3.191,1410,3.191,1411,4.349,1412,2.933,1413,4.732,1414,3.191,1415,6.238,1416,3.191,1417,3.191,1418,3.191,1419,3.191,1420,3.191,1421,3.191,1422,3.191,1423,3.191,1424,3.191,1425,3.191,1426,5.64,1427,4.732,1428,2.933,1429,4.732,1430,2.933,1431,2.167,1432,3.191,1433,3.191,1434,6.238,1435,4.732,1436,3.191,1437,3.191,1438,3.191,1439,2.458,1440,3.191,1441,2.458,1442,3.191,1443,3.191,1444,2.933,1445,3.191]],["title/controllers/ContentController.html",[393,1.532,1446,3.702]],["body/controllers/ContentController.html",[3,0.026,4,0.02,5,0.048,7,0.039,9,1.163,11,1.926,14,0.383,15,0.306,16,0.007,19,0.026,32,0.004,33,0.002,34,0.002,35,0.125,36,1.72,51,0.988,53,0.326,62,1.201,64,1.338,75,0.147,87,1.66,88,1.159,93,2.989,102,1.087,105,1.32,106,1.05,114,2.829,117,2.873,121,1.316,136,3.417,174,1.171,176,1.915,183,0.852,186,2.368,187,1.491,188,1.672,204,0.596,208,0.486,226,1.9,227,1.016,229,1.573,271,2.337,281,0.8,354,3.188,358,1.016,384,1.27,393,1.487,395,0.886,410,5.256,411,4.407,421,3.896,426,1.9,428,4.654,439,2.156,448,2.668,463,4.332,486,1.485,487,0.905,488,0.926,489,1.485,490,0.926,491,0.886,492,0.926,493,0.926,494,0.905,495,1.736,496,1.848,497,1.888,498,0.905,499,0.905,500,0.886,501,0.886,502,1.848,503,1.848,504,2.093,505,2.185,506,1.772,507,0.886,508,1.485,509,0.905,510,0.905,511,0.905,512,1.454,513,1.485,514,0.905,515,0.905,516,0.905,517,0.905,518,0.905,519,0.905,520,0.886,521,0.85,522,0.816,523,1.485,524,0.905,525,0.905,526,0.905,527,0.905,528,0.905,529,0.905,530,0.85,531,0.926,532,0.926,533,0.926,534,0.926,535,0.926,536,0.926,537,0.926,538,0.926,539,0.926,540,0.926,541,0.905,542,0.905,543,0.926,544,0.926,545,0.926,546,0.926,547,0.926,548,0.926,549,0.926,550,0.926,551,0.926,552,0.926,553,0.926,554,0.926,555,0.713,556,0.905,557,0.905,558,0.926,559,1.546,560,1.416,561,1.772,562,1.23,565,1.363,568,1.068,569,1.193,571,1.752,572,1.798,573,1.126,574,1.016,575,3.318,576,1.126,577,1.193,579,4.281,580,3.563,581,2.953,582,2.953,583,4.965,584,0.477,596,1.546,597,1.416,598,1.416,599,1.416,600,1.416,601,1.416,602,1.416,603,1.477,604,2.705,605,1.752,606,1.314,607,1.126,609,3.636,614,3.554,616,4.66,619,1.343,623,4.281,633,3.924,666,4.45,698,2.953,700,3.223,786,1.096,802,2.649,821,6.059,835,3.223,836,3.223,837,3.223,838,3.223,839,1.689,849,1.041,850,1.159,851,2.535,852,2.535,853,2.535,854,2.535,872,1.477,873,2.649,878,0.52,881,0.769,884,1.957,885,1.957,886,1.957,887,2.235,888,1.546,889,1.416,891,1.23,897,1.546,906,2.826,909,1.723,911,4.877,931,1.546,932,0.7,933,0.713,934,1.193,935,1.546,936,1.546,937,1.546,939,4.157,944,5.208,1068,0.905,1093,2.776,1100,2.92,1388,4.368,1403,3.417,1405,3.924,1446,2.826,1447,2.007,1448,4.185,1449,3.292,1450,4.185,1451,3.593,1452,3.846,1453,4.185,1454,3.846,1455,3.846,1456,3.846,1457,3.846,1458,3.846,1459,2.007,1460,2.007,1461,3.292,1462,2.007,1463,2.007,1464,2.007,1465,2.007,1466,2.007,1467,2.007,1468,2.007,1469,2.007,1470,2.007,1471,2.826,1472,2.007,1473,2.007,1474,2.007,1475,2.007,1476,2.007,1477,2.007,1478,2.007,1479,2.007,1480,2.007,1481,2.007,1482,2.007,1483,2.007,1484,2.007,1485,2.007,1486,2.007,1487,2.007,1488,2.007,1489,2.007,1490,2.007,1491,2.007,1492,2.007,1493,1.546,1494,2.007,1495,3.292,1496,2.007,1497,3.292,1498,3.292,1499,2.007,1500,4.185,1501,6.332,1502,2.007,1503,2.007,1504,2.007,1505,3.292,1506,2.007,1507,2.007,1508,2.007,1509,2.007,1510,2.007,1511,2.007,1512,4.157,1513,4.842,1514,4.842,1515,4.842,1516,4.45,1517,2.007,1518,2.007,1519,2.007,1520,2.007,1521,2.007,1522,2.007,1523,2.007,1524,2.007,1525,2.007,1526,2.007]],["title/controllers/ContentController-1.html",[393,1.283,777,1.073,1446,3.101]],["body/controllers/ContentController-1.html",[3,0.026,4,0.02,5,0.048,7,0.039,9,1.163,11,1.926,14,0.383,15,0.306,16,0.007,19,0.026,32,0.004,33,0.002,34,0.002,35,0.125,36,1.72,51,0.988,53,0.326,62,1.201,64,1.338,75,0.147,87,1.66,88,1.159,93,2.989,102,1.087,105,1.32,106,1.05,114,2.829,117,2.873,121,1.316,136,3.417,174,1.171,176,1.915,183,0.852,186,2.368,187,1.491,188,1.672,204,0.596,208,0.486,226,1.9,227,1.016,229,1.573,271,2.337,281,0.8,354,3.188,358,1.016,384,1.27,393,1.487,395,0.886,410,5.256,411,4.407,421,3.896,426,1.9,428,4.654,439,2.156,448,2.668,463,4.332,486,1.485,487,0.905,488,0.926,489,1.485,490,0.926,491,0.886,492,0.926,493,0.926,494,0.905,495,1.736,496,1.848,497,1.888,498,0.905,499,0.905,500,0.886,501,0.886,502,1.848,503,1.848,504,2.093,505,2.185,506,1.772,507,0.886,508,1.485,509,0.905,510,0.905,511,0.905,512,1.454,513,1.485,514,0.905,515,0.905,516,0.905,517,0.905,518,0.905,519,0.905,520,0.886,521,0.85,522,0.816,523,1.485,524,0.905,525,0.905,526,0.905,527,0.905,528,0.905,529,0.905,530,0.85,531,0.926,532,0.926,533,0.926,534,0.926,535,0.926,536,0.926,537,0.926,538,0.926,539,0.926,540,0.926,541,0.905,542,0.905,543,0.926,544,0.926,545,0.926,546,0.926,547,0.926,548,0.926,549,0.926,550,0.926,551,0.926,552,0.926,553,0.926,554,0.926,555,0.713,556,0.905,557,0.905,558,0.926,559,1.546,560,1.416,561,1.772,562,1.23,565,1.363,568,1.068,569,1.193,571,1.752,572,1.798,573,1.126,574,1.016,575,3.318,576,1.126,577,1.193,579,4.281,580,3.563,581,2.953,582,2.953,583,4.965,584,0.477,596,1.546,597,1.416,598,1.416,599,1.416,600,1.416,601,1.416,602,1.416,603,1.477,604,2.705,605,1.752,606,1.314,607,1.126,609,3.636,614,3.554,616,4.66,619,1.343,623,4.281,633,3.924,666,4.45,698,2.953,700,3.223,786,1.096,802,2.649,821,6.059,835,3.223,836,3.223,837,3.223,838,3.223,839,1.689,849,1.041,850,1.159,851,2.535,852,2.535,853,2.535,854,2.535,872,1.477,873,2.649,878,0.52,881,0.769,884,1.957,885,1.957,886,1.957,887,2.235,888,1.546,889,1.416,891,1.23,897,1.546,906,2.826,909,1.723,911,4.877,931,1.546,932,0.7,933,0.713,934,1.193,935,1.546,936,1.546,937,1.546,939,4.157,944,5.208,1068,0.905,1093,2.776,1100,2.92,1388,4.368,1403,3.417,1405,3.924,1446,2.826,1447,2.007,1448,4.185,1449,3.292,1450,4.185,1451,3.593,1452,3.846,1453,4.185,1454,3.846,1455,3.846,1456,3.846,1457,3.846,1458,3.846,1459,2.007,1460,2.007,1461,3.292,1462,2.007,1463,2.007,1464,2.007,1465,2.007,1466,2.007,1467,2.007,1468,2.007,1469,2.007,1470,2.007,1471,2.826,1472,2.007,1473,2.007,1474,2.007,1475,2.007,1476,2.007,1477,2.007,1478,2.007,1479,2.007,1480,2.007,1481,2.007,1482,2.007,1483,2.007,1484,2.007,1485,2.007,1486,2.007,1487,2.007,1488,2.007,1489,2.007,1490,2.007,1491,2.007,1492,2.007,1493,1.546,1494,2.007,1495,3.292,1496,2.007,1497,3.292,1498,3.292,1499,2.007,1500,4.185,1501,6.332,1502,2.007,1503,2.007,1504,2.007,1505,3.292,1506,2.007,1507,2.007,1508,2.007,1509,2.007,1510,2.007,1511,2.007,1512,4.157,1513,4.842,1514,4.842,1515,4.842,1516,4.45,1517,2.007,1518,2.007,1519,2.007,1520,2.007,1521,2.007,1522,2.007,1523,2.007,1524,2.007,1525,2.007,1526,2.007]],["title/injectables/ContentInterceptor.html",[207,1.116,1493,3.32]],["body/injectables/ContentInterceptor.html",[3,0.056,4,0.042,5,0.049,7,0.145,9,0.715,15,0.162,16,0.007,19,0.076,23,1.258,32,0.003,33,0.004,34,0.003,35,0.363,53,0.201,62,1.666,69,1.801,75,0.158,87,1.429,106,1.081,114,2.433,117,2.525,121,1.522,130,3.319,174,1.184,176,1.696,183,1.504,186,1.457,187,0.882,188,1.029,207,1.712,208,1.029,310,2.206,354,1.961,410,2.607,411,3.09,421,3.352,568,3.957,777,1.725,786,2.323,839,1.484,877,3.001,880,2.361,890,2.409,974,1.878,1058,2.688,1060,1.818,1062,1.839,1065,2.51,1085,2.678,1093,2.459,1096,2.183,1100,2.361,1115,2.692,1493,4.472,1527,4.253,1528,3.943,1529,3.931,1530,4.421,1531,4.421,1532,4.775,1533,3.909,1534,3.129,1535,3.129,1536,3.001,1537,4.253,1538,4.253,1539,7.676,1540,4.253,1541,5.806,1542,7.104,1543,3.446,1544,4.253,1545,4.253,1546,4.253,1547,4.253,1548,4.253,1549,4.253,1550,4.273,1551,3.943,1552,4.706,1553,4.706,1554,4.986,1555,4.253,1556,4.253,1557,4.666,1558,2.607,1559,3.652,1560,4.253,1561,4.253,1562,4.253,1563,4.253,1564,4.273,1565,5.806,1566,6.612,1567,2.206,1568,5.337,1569,3.446,1570,4.253,1571,4.253,1572,4.253,1573,4.253,1574,3.909,1575,4.253,1576,4.253,1577,4.253,1578,4.253,1579,4.253,1580,4.253,1581,6.612,1582,4.253,1583,5.806,1584,3.652,1585,3.652,1586,4.253]],["title/classes/ContentItem.html",[35,0.269,1587,3.962]],["body/classes/ContentItem.html",[3,0.064,4,0.049,5,0.056,7,0.096,8,0.807,9,1.388,14,0.222,15,0.331,16,0.007,19,0.064,23,1.213,32,0.004,33,0.005,34,0.004,35,0.305,36,2.67,37,0.808,39,3.059,46,2.591,47,3.149,48,1.996,49,2.698,50,2.105,51,1.226,52,3.118,53,0.389,56,2.416,61,3.897,62,2.368,65,3.006,69,3.181,70,2.474,71,2.474,72,2.474,73,1.675,74,2.474,75,0.169,78,1.645,79,2.068,82,1.911,93,3.248,94,3.766,102,2.482,150,4.488,151,4.043,163,3.873,426,2.823,741,4.498,1044,2.644,1078,3.006,1388,4.612,1587,5.857,1588,5.49,1589,7.156,1590,7.156,1591,5.472,1592,5.49,1593,5.49,1594,5.49,1595,5.49,1596,4.198,1597,3.962,1598,5.49,1599,5.49,1600,5.49,1601,5.49]],["title/classes/ContentPayloadDto.html",[35,0.269,880,1.753]],["body/classes/ContentPayloadDto.html",[3,0.045,4,0.058,5,0.039,7,0.066,8,0.627,9,1.081,11,1.816,14,0.382,15,0.324,16,0.007,19,0.106,23,0.646,24,0.864,25,0.807,27,1.009,32,0.003,33,0.004,34,0.003,35,0.529,37,0.561,48,1.063,51,1.195,53,0.374,60,1.323,75,0.124,98,0.958,105,1.344,106,0.447,123,1.102,174,1.455,187,1.028,204,1.009,280,2.298,584,0.807,619,1.621,777,1.009,839,1.728,842,1.437,845,2.371,846,1.408,878,2.31,880,2.9,881,1.301,890,1.408,924,2.013,928,1.897,932,1.184,933,1.206,1044,3.056,1045,1.601,1046,1.276,1047,1.184,1053,2.527,1056,1.793,1057,2.141,1058,2.9,1059,2.336,1060,1.063,1061,3.223,1062,2.778,1063,3.298,1064,2.336,1065,2.778,1066,2.582,1067,2.187,1068,2.234,1069,2.582,1070,2.9,1071,1.468,1072,2.234,1073,1.408,1074,1.566,1075,3.031,1076,1.966,1077,2.899,1078,1.601,1079,2.638,1080,2.33,1081,2.964,1082,2.954,1083,3.101,1084,2.821,1085,2.284,1086,2.39,1087,2.234,1088,2.234,1089,2.821,1090,1.966,1091,2.002,1092,2.336,1093,1.437,1094,2.696,1095,2.757,1096,2.198,1097,2.187,1098,2.284,1099,1.408,1100,1.38,1602,3.812,1603,3.812,1604,3.812,1605,3.812,1606,3.812,1607,3.812,1608,3.812,1609,3.812,1610,3.812,1611,3.812,1612,3.812]],["title/classes/ContentResponse.html",[35,0.269,1100,1.753]],["body/classes/ContentResponse.html",[3,0.051,4,0.063,5,0.045,7,0.075,8,0.687,11,1.735,14,0.384,15,0.307,16,0.007,19,0.109,23,0.735,24,0.983,25,0.918,27,1.147,32,0.003,33,0.004,34,0.003,35,0.537,37,0.637,48,1.209,51,0.582,53,0.182,60,1.391,75,0.133,98,1.089,105,1.444,106,0.509,123,1.252,174,1.519,187,1.127,204,1.147,280,2.415,584,0.918,619,1.741,777,1.147,839,1.894,842,1.634,845,2.514,846,1.601,878,2.313,880,2.919,881,1.479,890,1.601,924,2.207,928,2.038,932,1.346,933,1.371,1044,2.827,1045,1.82,1046,1.451,1047,1.346,1053,2.715,1056,1.965,1057,2.347,1058,3.028,1059,2.561,1060,1.209,1061,3.387,1062,2.715,1063,3.466,1064,2.561,1065,2.715,1066,2.397,1067,2.397,1068,2.45,1069,2.397,1070,2.553,1071,1.669,1072,2.45,1073,1.601,1074,1.78,1075,3.214,1076,2.112,1077,2.45,1078,1.82,1079,2.834,1080,2.164,1081,2.504,1082,2.946,1083,2.62,1084,2.62,1085,1.78,1086,1.863,1087,1.741,1088,1.741,1089,1.863,1090,1.298,1091,1.322,1092,2.561,1093,1.634,1094,2.897,1095,2.962,1096,2.361,1097,2.397,1098,2.504,1099,1.601,1100,2.207,1613,4.334]],["title/injectables/ContentService.html",[207,1.116,873,2.729]],["body/injectables/ContentService.html",[3,0.023,4,0.038,5,0.02,7,0.034,8,0.373,9,0.496,11,1.955,14,0.3,15,0.286,16,0.007,19,0.023,21,3.652,24,0.447,25,0.418,27,0.522,32,0.003,33,0.002,34,0.001,35,0.11,46,1.198,49,2.64,51,0.81,53,0.36,62,0.846,65,1.39,73,1.01,75,0.147,78,0.591,79,0.57,81,3.516,89,1.044,93,3.52,95,0.911,96,1.044,102,0.974,105,0.678,106,1.069,111,1.359,114,2.447,117,2.662,121,1.411,123,1.612,127,3.145,132,3.182,143,3.121,151,2.892,158,0.868,174,0.777,176,1.57,183,0.763,186,2.206,187,1.336,188,1.558,207,0.763,208,0.425,209,1.424,211,4.36,212,1.044,213,1.424,227,1.492,228,2.389,229,2.788,230,3.613,231,2.531,232,4.266,235,2.531,236,4.266,241,1.508,279,1.353,292,2.709,293,3.613,310,1.975,322,2.455,326,4.142,343,1.508,354,0.81,358,3.56,376,2.389,381,1.359,426,2.868,530,1.248,604,0.889,609,1.866,619,1.056,620,2.709,741,3.506,777,1.476,839,0.613,845,1.405,849,3.706,850,3.991,868,0.911,873,1.866,880,0.714,881,1.13,891,1.077,928,0.956,933,0.624,974,0.776,1044,3.209,1046,0.66,1047,0.613,1057,0.76,1066,1.302,1067,1.302,1068,2.578,1069,1.302,1073,1.223,1077,1.33,1079,1.33,1087,2.578,1088,2.242,1093,2.42,1098,1.359,1100,0.714,1308,2.169,1309,2.531,1334,3.27,1388,4.856,1396,1.615,1397,1.424,1399,1.424,1400,3.086,1403,5.043,1406,5.086,1439,2.27,1441,1.353,1451,3.27,1452,3.5,1454,3.5,1455,2.709,1456,2.709,1457,3.5,1458,3.5,1591,2.531,1614,1.973,1615,5.578,1616,5.578,1617,4.276,1618,5.578,1619,4.276,1620,4.276,1621,4.276,1622,4.276,1623,4.276,1624,4.276,1625,4.276,1626,3.31,1627,1.615,1628,1.973,1629,3.31,1630,7,1631,1.973,1632,4.459,1633,3.31,1634,6.038,1635,1.973,1636,3.31,1637,1.973,1638,1.973,1639,3.31,1640,1.973,1641,1.973,1642,2.389,1643,3.31,1644,1.973,1645,1.973,1646,1.973,1647,4.276,1648,6.912,1649,1.973,1650,1.973,1651,3.31,1652,1.973,1653,1.973,1654,2.933,1655,2.948,1656,3.31,1657,3.31,1658,1.973,1659,2.948,1660,3.31,1661,2.948,1662,1.973,1663,1.973,1664,1.973,1665,1.973,1666,3.31,1667,2.948,1668,1.973,1669,1.973,1670,1.757,1671,1.615,1672,1.757,1673,1.757,1674,1.757,1675,0.848,1676,1.353,1677,1.757,1678,1.973,1679,4.276,1680,1.973,1681,1.973,1682,4.276,1683,3.31,1684,3.31,1685,1.973,1686,5.006,1687,5.006,1688,1.757,1689,7.431,1690,3.31,1691,5.578,1692,3.31,1693,5.006,1694,4.276,1695,4.276,1696,4.459,1697,3.31,1698,2.948,1699,4.098,1700,2.948,1701,3.31,1702,3.31,1703,2.948,1704,3.31,1705,2.27,1706,3.31,1707,3.31,1708,1.973,1709,3.31,1710,1.973,1711,4.276,1712,1.973,1713,2.948,1714,3.31,1715,1.973,1716,1.973,1717,1.973,1718,1.973,1719,5.578,1720,1.973,1721,1.973,1722,3.31,1723,2.948,1724,1.757,1725,1.973,1726,3.31,1727,1.973,1728,1.973,1729,1.973,1730,5.378,1731,5.578,1732,5.578,1733,1.973,1734,1.757,1735,1.757,1736,1.973,1737,1.973,1738,1.973,1739,1.757,1740,1.973,1741,1.757,1742,1.973,1743,1.973,1744,1.973,1745,1.973,1746,1.757,1747,1.757,1748,2.948,1749,1.973,1750,1.973,1751,1.757,1752,2.08,1753,1.973,1754,6.038,1755,3.31]],["title/injectables/ContentTypePipe.html",[207,1.116,887,2.927]],["body/injectables/ContentTypePipe.html",[3,0.063,4,0.048,5,0.055,7,0.093,9,0.803,14,0.38,15,0.284,16,0.007,19,0.102,32,0.004,33,0.005,34,0.004,35,0.438,53,0.225,75,0.149,87,1.544,98,1.77,105,1.825,106,0.827,121,1.472,179,2.757,183,1.625,186,1.636,187,0.991,188,1.801,207,1.928,208,1.155,271,2.305,310,2.477,358,3.548,426,2.757,555,1.697,786,3.428,839,2.445,843,3.128,849,3.636,860,3.243,881,1.83,884,3.731,885,3.731,886,3.731,887,4.261,891,4.297,932,2.189,933,2.23,934,3.731,974,2.109,1094,2.203,1099,1.981,1306,3.514,1642,6.433,1756,3.87,1757,4.776,1758,5.363,1759,5.363,1760,5.363,1761,4.101,1762,6.393,1763,3.87,1764,4.101,1765,4.101,1766,6.019,1767,4.101,1768,4.101,1769,4.947,1770,5.389,1771,4.101,1772,4.101,1773,4.101,1774,5.389,1775,4.101,1776,4.101,1777,5.389,1778,4.101,1779,4.101,1780,4.101,1781,5.389,1782,4.101,1783,4.101,1784,4.101,1785,4.101,1786,5.389,1787,4.101,1788,4.101,1789,4.101]],["title/injectables/ContentsInterceptor.html",[207,1.116,877,3.042]],["body/injectables/ContentsInterceptor.html",[3,0.056,4,0.042,5,0.049,7,0.145,9,0.715,15,0.162,16,0.007,19,0.076,23,1.258,32,0.003,33,0.004,34,0.003,35,0.363,53,0.201,62,1.666,69,1.801,75,0.158,87,1.429,106,1.081,114,2.433,117,2.525,121,1.522,130,3.319,174,1.184,176,1.696,183,1.504,186,1.457,187,0.882,188,1.029,207,1.712,208,1.029,310,2.206,354,1.961,410,2.607,411,3.09,421,3.352,568,3.957,777,1.725,786,2.323,839,1.484,877,4.098,880,2.361,890,2.409,974,1.878,1058,2.688,1060,1.818,1062,1.839,1065,2.51,1085,2.678,1093,2.459,1096,2.183,1100,2.361,1115,2.692,1493,3.276,1527,4.253,1528,3.943,1529,3.931,1530,4.421,1531,4.421,1533,3.909,1534,3.129,1535,3.129,1536,3.001,1537,4.253,1538,4.253,1539,7.676,1540,4.253,1541,5.806,1542,7.104,1543,3.446,1544,4.253,1545,4.253,1546,4.253,1547,4.253,1548,4.253,1549,4.253,1550,4.273,1551,3.943,1552,4.706,1553,4.706,1554,4.986,1555,4.253,1556,4.253,1557,4.666,1558,2.607,1559,3.652,1560,4.253,1561,4.253,1562,4.253,1563,4.253,1564,4.273,1565,5.806,1566,6.612,1567,2.206,1568,5.337,1569,3.446,1570,4.253,1571,4.253,1572,4.253,1573,4.253,1574,3.909,1575,4.253,1576,4.253,1577,4.253,1578,4.253,1579,4.253,1580,4.253,1581,6.612,1582,4.253,1583,5.806,1584,3.652,1585,3.652,1586,4.253,1790,4.775]],["title/classes/ContentsResponse.html",[35,0.269,890,1.788]],["body/classes/ContentsResponse.html",[3,0.05,4,0.062,5,0.044,7,0.075,8,0.682,11,1.726,14,0.383,15,0.31,16,0.007,19,0.108,23,0.726,24,0.971,25,0.907,27,1.133,32,0.003,33,0.004,34,0.003,35,0.536,37,0.63,48,1.195,51,0.811,53,0.254,60,1.385,75,0.132,98,1.076,105,1.435,106,0.503,123,1.238,174,1.514,187,1.117,204,1.133,280,2.405,584,0.907,619,1.73,777,1.133,839,1.878,842,1.615,845,2.501,846,1.583,878,2.313,880,2.907,881,1.462,890,2.234,924,2.189,928,2.408,932,1.331,933,1.356,1044,2.812,1045,1.799,1046,1.434,1047,1.331,1053,2.698,1056,1.949,1057,2.328,1058,3.017,1059,2.54,1060,1.195,1061,3.372,1062,2.698,1063,3.451,1064,2.54,1065,2.698,1066,2.378,1067,2.378,1068,2.43,1069,2.378,1070,2.537,1071,1.649,1072,2.43,1073,1.583,1074,1.759,1075,3.198,1076,2.099,1077,2.43,1078,1.799,1079,2.816,1080,2.146,1081,2.484,1082,2.931,1083,2.599,1084,2.599,1085,1.759,1086,1.841,1087,1.721,1088,1.721,1089,1.841,1090,1.283,1091,1.307,1092,2.54,1093,1.615,1094,2.878,1095,2.944,1096,2.346,1097,2.378,1098,2.484,1099,1.583,1100,1.551,1791,4.283,1792,4.283]],["title/classes/Counter.html",[35,0.269,1793,2.355]],["body/classes/Counter.html",[3,0.063,4,0.048,5,0.056,7,0.094,8,0.799,11,1.227,14,0.402,15,0.184,16,0.007,19,0.108,24,1.792,25,1.674,26,1.62,27,2.22,32,0.004,33,0.005,34,0.004,35,0.528,37,0.796,51,0.726,53,0.227,60,1.222,75,0.134,105,1.451,123,2.284,174,1.436,195,2.499,196,2.499,280,2.368,584,1.146,868,2.499,878,2.321,882,2.564,883,3.118,928,2.516,949,2.564,1046,1.811,1047,1.681,1056,1.744,1060,2.339,1076,2.368,1090,1.62,1091,1.65,1567,3.274,1675,2.325,1793,4.081,1794,3.05,1795,5.41,1796,4.315,1797,2.632,1798,2.564,1799,2.632,1800,3.359,1801,3.543,1802,3.543,1803,2.564,1804,3.652,1805,2.781,1806,2.781,1807,2.499]],["title/classes/CreateAccountDto.html",[35,0.269,219,2.927]],["body/classes/CreateAccountDto.html",[3,0.072,4,0.055,5,0.063,7,0.107,8,0.869,14,0.391,15,0.308,16,0.007,19,0.098,32,0.004,33,0.005,34,0.004,35,0.468,36,2.439,37,0.907,42,5.288,45,4.904,46,2.79,49,3.17,50,2.79,53,0.381,60,1.519,64,2.233,73,1.881,75,0.145,79,2.227,100,2.967,132,3.391,203,4.345,218,4.23,219,4.66,223,3.852,243,3.166,246,3.031,250,4.041,262,4.844,265,4.844,849,2.849,850,3.17,1056,1.988,1808,5.047,1809,6.068,1810,6.068,1811,6.166,1812,6.166,1813,6.166,1814,6.166,1815,6.166,1816,4.715,1817,6.308]],["title/classes/CreateAccountDto-1.html",[35,0.226,219,2.452,777,1.073]],["body/classes/CreateAccountDto-1.html",[0,1.416,3,0.081,4,0.061,5,0.071,7,0.12,8,0.932,14,0.334,15,0.319,16,0.007,19,0.097,32,0.005,33,0.006,34,0.005,35,0.385,37,1.017,42,5.157,45,5.157,50,2.695,53,0.385,60,1.426,64,2.503,219,4.998,250,4.531,1809,6.381,1810,6.381,1818,6.158,1819,6.914,1820,6.914,1821,6.914,1822,6.914,1823,5.66,1824,6.158]],["title/classes/CreateCredentialDto.html",[35,0.269,218,3.32]],["body/classes/CreateCredentialDto.html",[3,0.07,4,0.053,5,0.061,7,0.104,8,0.85,9,1.128,14,0.397,15,0.323,16,0.007,19,0.097,32,0.004,33,0.005,34,0.004,35,0.46,36,2.751,37,0.875,42,4.823,45,3.469,46,2.728,49,2.243,50,2.771,53,0.396,60,1.426,64,2.154,73,1.815,75,0.142,79,2.177,100,3.347,132,2.617,203,4.901,218,5.168,219,3.597,223,4.346,243,3.571,246,3.419,250,3.898,262,5.464,265,5.464,1056,1.918,1808,4.869,1809,4.293,1810,4.293,1816,4.549,1817,6.167,1825,5.948,1826,5.948,1827,5.948,1828,5.948,1829,5.948,1830,5.948,1831,5.948,1832,5.948]],["title/classes/Credential.html",[35,0.269,259,2.563]],["body/classes/Credential.html",[0,1.098,1,4.979,3,0.042,4,0.032,5,0.037,7,0.063,8,0.605,9,1.252,14,0.364,15,0.311,16,0.007,19,0.092,22,4.75,23,1.195,28,4.75,32,0.004,33,0.004,34,0.002,35,0.202,36,2.491,37,0.534,39,2.727,46,1.942,47,2.36,48,1.496,49,2.022,50,2.622,51,1.182,52,3.006,53,0.374,55,3.371,56,1.597,60,0.925,61,3.862,62,2.371,65,2.253,69,2.658,70,1.636,71,1.636,72,1.636,73,1.636,74,1.636,75,0.161,76,1.762,77,1.288,78,1.087,79,1.844,80,1.762,82,1.263,85,1.72,86,1.72,87,0.795,89,1.921,90,4.618,92,1.814,95,1.676,100,2.456,101,1.288,102,2.46,106,1.057,111,2.203,114,1.636,115,3.029,117,1.697,121,1.447,122,3.679,127,4.24,128,1.814,132,2.36,158,1.597,159,2.281,160,1.921,168,3.679,174,1.43,175,3.024,176,1.833,177,3.679,179,2.758,182,3.679,203,3.597,223,3.189,243,3.345,246,3.203,254,2.619,257,2.619,259,3.981,261,3.871,262,4.947,263,2.619,264,3.871,265,4.947,266,2.619,322,2.36,354,2.203,1431,3.858,1833,2.775,1834,3.629,1835,3.629,1836,3.629,1837,3.629,1838,3.629,1839,3.629,1840,3.629,1841,3.629,1842,2.97,1843,2.97,1844,2.97,1845,2.97,1846,4.39,1847,2.97,1848,2.97,1849,5.222,1850,2.97,1851,4.39,1852,2.97,1853,2.97,1854,2.97,1855,2.97,1856,2.97,1857,2.97,1858,2.97,1859,2.97,1860,2.97,1861,2.97,1862,5.769,1863,4.39,1864,2.97,1865,2.97,1866,2.97,1867,2.97,1868,4.39,1869,2.97,1870,2.97,1871,4.39,1872,2.97,1873,2.775]],["title/injectables/CredentialInterceptor.html",[207,1.116,568,2.294]],["body/injectables/CredentialInterceptor.html",[0,1.228,3,0.07,4,0.053,5,0.062,7,0.104,9,1.134,15,0.258,16,0.007,19,0.089,23,1.016,32,0.004,33,0.005,34,0.004,35,0.334,53,0.318,75,0.173,87,1.819,89,4.01,106,0.889,114,2.532,117,1.898,121,1.016,130,3.196,176,1.559,183,1.746,186,2.31,187,1.4,188,1.292,207,1.746,208,1.292,226,4.483,227,2.703,246,2.978,259,3.175,354,2.463,384,3.381,411,2.842,454,4.963,483,3.626,568,3.589,574,2.703,575,3.413,576,2.997,577,3.175,606,4.417,614,2.997,799,4.586,889,3.769,908,4.113,974,2.358,1115,3.381,1528,4.579,1529,4.01,1530,4.616,1531,4.616,1558,3.274,1769,3.769,1874,5.34,1875,5.996,1876,5.996,1877,5.996,1878,5.791,1879,5.195,1880,4.908,1881,5.195,1882,4.586,1883,4.586,1884,5.791,1885,6.744,1886,5.34,1887,5.34,1888,4.586]],["title/interfaces/CredentialModel.html",[0,0.991,127,2.729]],["body/interfaces/CredentialModel.html",[0,1.19,1,5.259,2,1.561,3,0.047,4,0.036,5,0.042,7,0.071,9,0.871,14,0.34,15,0.278,16,0.007,19,0.096,22,5.12,23,1.152,28,5.12,32,0.004,33,0.004,34,0.003,35,0.226,36,2.151,39,1.947,50,2.536,52,2.996,53,0.244,55,3.654,60,1.003,62,2.243,64,2.105,65,1.703,73,1.237,75,0.166,76,1.91,77,1.439,78,1.214,79,1.964,80,1.91,82,1.411,85,1.921,86,1.921,87,0.888,89,2.146,90,4.866,92,2.026,95,1.873,100,1.561,101,1.439,102,2.536,106,1.078,111,2.388,114,1.773,115,3.191,117,1.84,121,1.488,122,3.988,127,4.613,128,2.026,132,2.558,158,1.784,159,2.548,160,2.146,168,3.988,174,1.566,175,3.278,176,1.931,177,3.988,179,2.989,182,3.988,183,1.341,186,1.773,187,1.074,188,1.253,203,2.286,223,2.026,243,3.229,246,3.092,254,2.926,257,2.926,259,3.931,261,4.196,262,4.667,263,2.926,264,4.196,265,4.667,266,2.926,322,2.558,354,2.388,1431,4.11,1833,3.1,1842,3.318,1843,4.759,1844,4.759,1845,3.318,1846,4.759,1847,3.318,1848,3.318,1849,5.564,1850,3.318,1851,4.759,1852,3.318,1853,3.318,1854,3.318,1855,3.318,1856,3.318,1857,3.318,1858,3.318,1859,3.318,1860,3.318,1861,3.318,1862,6.078,1863,4.759,1864,3.318,1865,3.318,1866,3.318,1867,3.318,1868,4.759,1869,3.318,1870,3.318,1871,4.759,1872,3.318,1873,3.1,1889,5.813,1890,5.813,1891,4.054,1892,4.054]],["title/interfaces/CredentialRequest.html",[0,0.991,411,2.294]],["body/interfaces/CredentialRequest.html",[0,1.28,2,2.406,3,0.073,4,0.056,5,0.064,7,0.109,8,0.876,15,0.213,16,0.007,19,0.091,23,1.317,32,0.004,33,0.005,34,0.004,35,0.348,75,0.175,87,1.854,89,4.685,106,0.912,114,1.906,117,1.978,121,1.059,130,2.406,176,1.625,207,1.792,208,1.346,226,3.996,246,3.056,259,4.685,384,3.523,411,3.683,454,5.543,483,3.779,568,2.962,574,2.817,575,3.503,576,3.124,577,3.309,606,3.645,614,3.124,799,4.779,889,3.928,908,4.287,1529,3.309,1530,4.115,1531,4.115,1558,3.412,1769,3.928,1874,5.566,1878,5.943,1879,5.331,1880,5.115,1881,5.331,1882,4.779,1883,4.779,1884,5.943,1885,6.921,1886,5.566,1887,5.566,1888,4.779]],["title/modules/DatabaseModule.html",[957,2.489,964,3.32]],["body/modules/DatabaseModule.html",[3,0.049,4,0.037,5,0.071,16,0.007,19,0.088,32,0.003,33,0.004,34,0.003,35,0.233,36,1.323,75,0.179,76,2.272,78,1.253,85,1.982,86,1.982,87,1.303,90,2.741,93,1.61,106,0.698,107,2.869,126,4.546,144,2.628,158,1.84,164,4.546,187,1.657,204,1.107,206,6.164,208,0.901,210,3.423,213,3.018,217,3.423,221,3.423,226,4.75,229,2.316,259,2.214,281,1.484,372,2.628,395,1.645,486,2.389,487,1.68,488,1.718,489,2.389,490,1.718,491,1.645,492,1.718,493,1.718,494,1.68,495,2.555,496,2.72,497,2.779,498,1.68,499,1.68,500,1.645,501,1.645,502,2.72,503,2.72,504,2.9,505,2.779,506,2.608,507,1.645,508,2.389,509,1.68,510,1.68,511,1.68,512,2.338,513,2.389,514,1.68,515,1.68,516,1.68,517,1.68,518,1.68,519,1.68,520,1.645,521,1.577,522,1.514,523,2.389,524,1.68,525,1.68,526,1.68,527,1.68,528,1.68,529,1.68,530,1.577,531,1.718,532,1.718,533,1.718,534,1.718,535,1.718,536,1.718,537,1.718,538,1.718,539,1.718,540,1.718,541,1.68,542,1.68,543,1.718,544,1.718,545,1.718,546,1.718,547,1.718,548,1.718,549,1.718,550,1.718,551,1.718,552,1.718,553,1.718,554,1.718,555,1.323,556,1.68,557,1.68,558,1.718,787,6.668,802,5.209,873,5.209,957,3.056,959,2.439,960,3.895,964,6.459,965,4.29,966,3.018,967,2.741,969,3.895,971,3.198,1388,2.15,1406,2.741,1408,3.423,1428,4.866,1439,2.869,1671,3.423,1672,3.724,1677,3.724,1873,4.546,1893,3.724,1894,3.724,1895,3.724,1896,4.182,1897,4.078,1898,5.944,1899,4.182,1900,4.182,1901,4.182,1902,4.182,1903,4.182,1904,4.182,1905,4.182,1906,3.018,1907,4.29,1908,5.294,1909,3.724,1910,5.294,1911,5.294,1912,5.294,1913,3.724,1914,4.546,1915,5.944,1916,4.182,1917,3.198,1918,5.944,1919,4.182,1920,8.504,1921,2.628,1922,4.182,1923,4.182,1924,4.182,1925,4.182,1926,4.182,1927,4.182]],["title/interfaces/EmailVerifyToken.html",[0,0.991,30,2.823]],["body/interfaces/EmailVerifyToken.html",[0,1.847,1,4.69,2,2.544,3,0.077,4,0.059,5,0.068,6,5.052,7,0.115,8,0.907,9,1.204,10,5.052,11,2.132,12,4.329,13,5.449,14,0.4,15,0.274,16,0.007,17,5.455,18,4.888,19,0.105,20,4.768,21,3.995,22,3.853,23,1.12,24,1.498,25,1.399,26,1.979,27,1.748,28,3.853,29,5.052,30,4.69,31,6.899,32,0.004,33,0.005,34,0.004]],["title/classes/Engagement.html",[35,0.269,1406,3.172]],["body/classes/Engagement.html",[3,0.052,4,0.039,5,0.046,7,0.077,8,0.699,9,1.322,11,1.007,14,0.34,15,0.321,16,0.007,19,0.095,23,1.051,32,0.004,33,0.004,34,0.003,35,0.247,37,0.654,39,2.897,46,2.946,47,2.729,48,1.73,49,2.339,50,1.825,51,1.131,52,2.877,53,0.363,56,1.955,61,3.302,62,2.211,65,2.606,69,2.917,70,2.002,71,2.002,72,2.002,73,1.892,74,2.002,75,0.167,76,2.038,77,1.577,78,1.331,79,2.065,80,2.038,81,2.548,82,1.546,93,3.398,94,3.048,95,2.053,98,1.116,101,1.577,102,2.103,105,1.463,106,1.015,114,1.892,115,1.91,117,2.448,121,0.753,128,2.221,130,2.978,132,2.729,134,5.935,143,3.763,150,2.505,151,2.796,163,2.161,271,1.91,530,2.695,741,2.792,777,1.891,1073,2.64,1080,2.537,1082,2.388,1097,2.439,1388,3.189,1399,3.207,1400,3.207,1403,2.792,1406,4.684,1430,6.661,1596,3.397,1696,7.705,1705,4.903,1730,6.365,1910,3.957,1928,3.637,1929,4.443,1930,4.443,1931,4.443,1932,3.637,1933,6.203,1934,4.443,1935,4.443,1936,6.203,1937,7.147,1938,7.735,1939,4.443,1940,6.203,1941,4.443,1942,4.443,1943,4.443,1944,4.443,1945,4.443,1946,4.443,1947,3.957,1948,4.443,1949,4.443,1950,6.203,1951,4.443]],["title/interfaces/ErrorStatus.html",[0,0.991,1204,3.962]],["body/interfaces/ErrorStatus.html",[0,1.206,2,2.268,3,0.069,4,0.052,5,0.061,7,0.103,8,0.844,14,0.383,15,0.28,16,0.007,19,0.088,23,0.999,32,0.004,33,0.005,34,0.004,35,0.328,75,0.141,98,1.48,106,0.691,208,1.269,495,3.2,574,3.375,575,2.655,619,2.139,622,4.041,753,3.861,1146,4.822,1147,6.669,1148,5.247,1150,5.247,1151,5.247,1152,4.822,1153,4.822,1154,4.822,1155,4.822,1156,4.822,1157,4.822,1158,4.822,1159,4.822,1160,4.822,1161,4.822,1162,4.822,1163,4.822,1164,4.822,1165,4.822,1166,4.822,1167,4.822,1168,4.822,1169,4.822,1170,4.822,1171,4.822,1172,4.822,1173,4.822,1174,4.822,1175,4.822,1176,4.822,1177,4.822,1178,4.822,1179,4.822,1180,4.822,1181,4.822,1182,4.822,1183,4.822,1184,4.822,1185,4.822,1186,4.822,1187,4.822,1188,4.822,1189,4.822,1190,4.822,1191,4.822,1192,4.822,1193,4.822,1194,4.822,1195,4.822,1196,4.822,1197,4.822,1198,4.822,1199,4.822,1200,4.822,1201,4.822,1202,4.822,1203,4.822,1204,6.739,1205,7.715,1206,4.822,1207,5.247,1208,5.247,1209,5.247]],["title/classes/Feature.html",[35,0.269,1070,1.753]],["body/classes/Feature.html",[3,0.05,4,0.062,5,0.044,7,0.075,8,0.681,11,1.725,14,0.383,15,0.302,16,0.007,19,0.108,23,0.725,24,0.97,25,0.906,27,1.132,32,0.003,33,0.004,34,0.003,35,0.536,37,0.629,48,1.193,51,0.94,53,0.294,60,1.384,75,0.132,98,1.075,105,1.434,106,0.502,123,1.236,174,1.382,187,1.406,204,1.132,280,2.404,584,0.906,619,1.729,777,1.132,839,1.877,842,1.613,845,2.5,846,1.581,878,2.313,880,2.755,881,1.46,890,1.581,924,2.187,928,2.024,932,1.329,933,1.354,1044,2.811,1045,1.797,1046,1.433,1047,1.329,1053,2.696,1056,1.948,1057,2.326,1058,3.016,1059,2.538,1060,1.193,1061,3.371,1062,2.696,1063,3.449,1064,2.538,1065,2.696,1066,2.376,1067,2.376,1068,2.428,1069,2.376,1070,2.755,1071,2.696,1072,2.428,1073,2.587,1074,1.757,1075,3.196,1076,2.098,1077,2.428,1078,1.797,1079,2.814,1080,2.144,1081,2.481,1082,2.929,1083,2.597,1084,2.597,1085,1.757,1086,1.839,1087,1.719,1088,1.719,1089,1.839,1090,1.282,1091,1.305,1092,2.538,1093,1.613,1094,2.876,1095,2.942,1096,2.345,1097,2.376,1098,2.481,1099,1.581,1100,1.549,1952,4.278,1953,4.278,1954,4.278]],["title/classes/Feature-1.html",[35,0.226,777,1.073,1070,1.468]],["body/classes/Feature-1.html",[3,0.071,4,0.054,5,0.062,7,0.105,8,0.858,9,1.415,14,0.364,15,0.318,16,0.007,19,0.097,23,1.29,32,0.004,33,0.005,34,0.004,35,0.336,37,0.889,39,3.127,46,2.756,47,3.349,48,2.123,49,2.87,50,2.239,51,1.209,52,3.076,53,0.387,56,2.66,61,3.517,62,2.304,69,3.298,70,2.725,71,2.725,72,2.725,73,1.844,74,2.725,75,0.157,76,2.501,77,2.146,78,1.811,79,1.747,80,2.501,82,2.104,101,2.146,102,2.239,106,0.709,187,1.54,1070,3.016,1071,3.208,1955,5.384,1956,6.045,1957,6.045,1958,4.948,1959,5.384,1960,5.384]],["title/classes/Feature-2.html",[35,0.226,796,2.927,1070,1.468]],["body/classes/Feature-2.html",[3,0.069,4,0.052,5,0.06,7,0.102,8,0.842,9,1.406,14,0.361,15,0.325,16,0.007,19,0.096,23,1.266,32,0.004,33,0.005,34,0.004,35,0.326,37,0.863,39,3.106,46,2.703,47,3.285,48,2.082,49,2.815,50,2.197,51,1.225,52,3.116,53,0.39,56,2.58,61,3.795,62,2.371,65,3.136,69,3.261,70,2.643,71,2.643,72,2.643,73,1.789,74,2.643,75,0.155,76,2.453,77,2.081,78,1.756,79,1.694,80,2.453,82,2.041,101,2.081,102,2.417,106,0.688,850,4.223,1070,2.974,1441,5.635,1958,4.8,1959,5.222,1960,5.222,1961,5.222,1962,7.315,1963,5.863,1964,5.863,1965,5.863]],["title/injectables/FollowInterceptor.html",[207,1.116,875,3.494]],["body/injectables/FollowInterceptor.html",[3,0.063,4,0.047,5,0.055,7,0.093,9,0.801,15,0.182,16,0.007,19,0.082,23,1.332,27,1.861,32,0.004,33,0.005,34,0.004,35,0.391,53,0.225,69,2.016,75,0.164,87,1.722,106,1.045,114,2.547,117,2.643,121,1.471,130,3.429,176,2.172,183,1.622,186,1.631,187,0.988,188,1.152,207,1.813,208,1.152,354,2.196,410,2.919,411,3.333,421,2.749,568,4.111,569,2.831,786,2.601,793,5.076,868,3.249,874,3.668,875,5.076,882,3.333,883,3.095,916,3.361,974,2.103,1060,1.962,1096,2.632,1115,3.015,1528,4.253,1529,4.161,1530,4.593,1531,4.593,1534,3.504,1535,3.504,1536,3.361,1543,5.076,1550,4.609,1551,4.253,1552,5.076,1553,5.076,1554,4.089,1557,4.94,1558,2.919,1559,4.089,1564,4.609,1584,4.089,1585,4.089,1966,4.762,1967,5.347,1968,6.264,1969,4.762,1970,4.762,1971,4.762,1972,4.762,1973,4.762,1974,4.762,1975,4.762,1976,6.264,1977,6.264,1978,4.762,1979,6.264,1980,4.762,1981,4.762,1982,6.264,1983,7,1984,7]],["title/classes/FollowResponse.html",[35,0.269,882,2.294]],["body/classes/FollowResponse.html",[3,0.062,4,0.047,5,0.055,7,0.093,8,0.792,11,1.209,14,0.401,15,0.239,16,0.007,19,0.108,24,1.78,25,1.663,26,1.597,27,2.207,32,0.004,33,0.005,34,0.004,35,0.527,37,0.784,51,0.942,53,0.295,60,1.211,75,0.133,105,1.092,123,2.268,174,1.574,195,2.463,196,2.463,280,2.351,584,1.129,868,2.463,878,2.32,882,3.327,883,3.453,928,2.661,949,2.527,1046,1.785,1047,1.656,1056,1.719,1060,2.326,1076,1.597,1090,1.597,1091,1.626,1567,3.243,1675,2.292,1793,3.818,1794,3.006,1796,4.285,1797,2.594,1798,2.527,1799,2.594,1800,3.327,1801,3.509,1802,3.509,1803,2.527,1804,3.626,1805,2.741,1806,2.741,1807,2.463,1985,5.332,1986,5.332]],["title/injectables/GuestInterceptor.html",[207,1.116,594,3.702]],["body/injectables/GuestInterceptor.html",[0,1.28,3,0.073,4,0.056,5,0.064,7,0.109,9,0.936,14,0.314,15,0.213,16,0.007,19,0.091,23,1.434,32,0.004,33,0.005,34,0.004,35,0.348,53,0.263,69,2.357,75,0.16,87,1.703,106,0.912,121,1.059,130,3.407,150,4.381,176,1.625,183,1.792,186,1.906,187,1.155,188,1.346,203,3.523,207,1.792,208,1.346,223,3.124,423,4.699,436,4.779,483,3.779,566,5.351,569,3.309,574,2.817,575,3.503,576,3.124,594,5.943,614,3.124,974,2.458,1115,3.523,1528,4.699,1529,4.115,1530,4.685,1531,4.685,1550,5.093,1551,3.779,1558,3.412,1881,4.287,1987,5.566,1988,5.566,1989,6.921,1990,6.921,1991,6.921,1992,5.566,1993,6.921,1994,5.566]],["title/classes/GuestLoginDto.html",[35,0.269,437,2.355]],["body/classes/GuestLoginDto.html",[3,0.068,4,0.052,5,0.06,7,0.101,8,0.836,14,0.399,15,0.197,16,0.007,19,0.113,24,1.681,25,1.228,26,2.448,32,0.004,33,0.005,34,0.004,35,0.542,37,0.853,44,3.146,51,0.778,53,0.244,60,1,75,0.109,100,3.146,174,1.485,243,2.382,246,2.916,362,2.382,363,2.679,371,3.262,386,2.748,417,2.821,437,3.607,447,2.821,462,2.821,584,1.228,585,2.821,586,2.821,587,2.821,588,2.821,589,2.821,590,2.821,591,2.821,592,2.821,619,1.432,720,2.899,878,2.298,996,2.899,1310,2.982,1313,3.706,1314,2.982,1315,3.706,1995,5.799]],["title/interfaces/GuestRequest.html",[0,0.991,436,3.702]],["body/interfaces/GuestRequest.html",[0,1.295,2,2.435,3,0.074,4,0.056,5,0.065,7,0.11,8,0.883,14,0.376,15,0.266,16,0.007,19,0.092,23,1.441,32,0.004,33,0.005,34,0.004,35,0.352,75,0.161,87,1.716,106,0.919,121,1.072,130,3.014,150,4.414,176,1.645,203,5.01,207,1.806,208,1.363,223,4.442,423,5.142,436,5.987,483,3.824,566,4.734,569,3.348,574,2.85,575,3.529,576,3.161,594,4.836,614,3.161,1529,3.348,1530,4.145,1531,4.145,1550,5.131,1551,3.824,1558,3.453,1881,4.338,1987,5.632,1989,6.972,1990,6.972,1991,6.972,1992,5.632,1993,6.972,1994,5.632]],["title/classes/Hashtag.html",[35,0.269,1037,3.702]],["body/classes/Hashtag.html",[3,0.069,4,0.052,5,0.06,7,0.102,8,0.842,9,1.406,14,0.332,15,0.325,16,0.007,19,0.096,23,1.266,32,0.004,33,0.005,34,0.004,35,0.326,37,0.863,39,3.106,46,2.703,47,3.285,48,2.082,49,2.815,50,2.197,51,1.225,52,3.116,53,0.39,56,2.58,61,3.795,62,2.371,65,3.136,69,3.261,70,2.643,71,2.643,72,2.643,73,1.789,74,2.643,75,0.155,76,2.453,77,2.081,78,1.756,79,1.694,80,2.453,82,2.041,101,2.081,102,2.417,105,1.529,106,0.688,1037,6.282,1591,6.282,1962,7.315,1996,5.222,1997,8.214,1998,5.863,1999,5.863,2000,5.863,2001,5.222,2002,5.863,2003,5.863]],["title/classes/HashtagItem.html",[35,0.269,2004,4.311]],["body/classes/HashtagItem.html",[3,0.065,4,0.049,5,0.057,7,0.097,8,0.815,9,1.392,14,0.225,15,0.327,16,0.007,19,0.094,23,1.225,32,0.004,33,0.005,34,0.004,35,0.31,37,0.82,39,3.07,46,2.616,47,3.179,48,2.015,49,2.725,50,2.126,51,1.209,52,3.074,53,0.385,56,2.452,61,3.705,62,2.343,65,3.035,69,3.199,70,2.512,71,2.512,72,2.512,73,1.7,74,2.512,75,0.173,76,2.374,77,1.978,78,1.669,79,2.317,80,2.374,82,1.939,101,1.978,102,2.359,106,0.654,150,3.142,151,3.257,163,2.711,174,1.457,1037,7.107,1040,4.963,1080,2.846,1388,4.123,1441,5.501,1596,4.261,1932,4.561,2004,7.141,2005,4.963,2006,5.572,2007,5.572,2008,5.572,2009,4.963,2010,5.572,2011,5.572]],["title/injectables/HeadersInterceptor.html",[207,1.116,566,2.927]],["body/injectables/HeadersInterceptor.html",[0,1.338,3,0.076,4,0.058,5,0.067,7,0.114,9,0.979,14,0.264,15,0.222,16,0.007,19,0.093,23,1.108,32,0.004,33,0.005,34,0.004,35,0.364,53,0.275,75,0.17,87,1.432,106,0.767,121,1.108,130,3.322,176,1.7,183,1.843,186,1.994,187,1.208,188,1.408,207,1.843,208,1.408,423,3.952,483,5.218,566,4.831,570,4.717,574,2.946,575,2.946,576,3.267,614,3.267,753,4.283,974,2.57,1115,3.685,1528,4.831,1529,4.23,1530,4.759,1531,4.759,1558,3.568,1769,4.108,1878,6.11,1879,5.48,1881,5.48,1882,4.998,1888,4.998,2012,5.821,2013,6.536,2014,5.821]],["title/interfaces/HeadersRequest.html",[0,0.991,423,2.927]],["body/interfaces/HeadersRequest.html",[0,1.362,2,2.562,3,0.078,4,0.059,5,0.068,7,0.116,8,0.911,14,0.351,15,0.226,16,0.007,19,0.094,23,1.369,32,0.004,33,0.005,34,0.004,35,0.37,75,0.171,87,1.458,106,0.781,121,1.128,130,2.562,176,1.73,207,1.863,208,1.434,423,4.884,483,5.469,566,4.023,570,4.802,574,2.999,575,2.999,576,3.326,614,3.326,753,5.926,1529,3.523,1530,4.276,1531,4.276,1558,3.632,1769,4.182,1878,6.176,1879,5.54,1881,5.54,1882,5.088,1888,5.088,2012,5.926,2014,5.926]],["title/controllers/HealthyController.html",[393,1.532,970,2.563]],["body/controllers/HealthyController.html",[3,0.066,4,0.05,5,0.083,7,0.098,14,0.228,16,0.007,19,0.066,32,0.004,33,0.005,34,0.004,35,0.314,51,0.757,53,0.237,75,0.137,87,1.767,121,0.956,176,1.467,183,1.68,188,1.215,204,1.493,208,1.215,229,2.701,281,2.002,381,2.317,393,1.785,395,2.218,400,3.75,486,2.926,487,2.266,488,2.317,489,2.926,490,2.317,491,2.218,492,2.317,493,2.317,494,2.266,495,2.98,496,3.172,497,3.241,498,2.266,499,2.266,500,2.218,501,2.218,502,3.172,503,3.172,504,3.282,505,3.241,506,3.041,507,2.218,508,2.926,509,2.266,510,2.266,511,2.266,512,2.864,513,2.926,514,2.266,515,2.266,516,2.266,517,2.266,518,2.266,519,2.266,520,2.218,521,2.127,522,2.042,523,2.926,524,2.266,525,2.266,526,2.266,527,2.266,528,2.266,529,2.266,530,2.127,531,2.317,532,2.317,533,2.317,534,2.317,535,2.317,536,2.317,537,2.317,538,2.317,539,2.317,540,2.317,541,2.266,542,2.266,543,2.317,544,2.317,545,2.317,546,2.317,547,2.317,548,2.317,549,2.317,550,2.317,551,2.317,552,2.317,553,2.317,554,2.317,555,1.785,556,2.266,557,2.266,558,2.317,571,3.451,572,3.543,573,2.819,604,2.542,605,2.673,607,2.819,970,3.856,2015,5.64,2016,3.869,2017,3.869,2018,5.64,2019,3.869,2020,3.869,2021,3.869]],["title/controllers/HealthyController-1.html",[393,1.283,777,1.073,970,2.147]],["body/controllers/HealthyController-1.html",[3,0.066,4,0.05,5,0.083,7,0.098,14,0.228,16,0.007,19,0.066,32,0.004,33,0.005,34,0.004,35,0.314,51,0.757,53,0.237,75,0.137,87,1.767,121,0.956,176,1.467,183,1.68,188,1.215,204,1.493,208,1.215,229,2.701,281,2.002,381,2.317,393,1.785,395,2.218,400,3.75,486,2.926,487,2.266,488,2.317,489,2.926,490,2.317,491,2.218,492,2.317,493,2.317,494,2.266,495,2.98,496,3.172,497,3.241,498,2.266,499,2.266,500,2.218,501,2.218,502,3.172,503,3.172,504,3.282,505,3.241,506,3.041,507,2.218,508,2.926,509,2.266,510,2.266,511,2.266,512,2.864,513,2.926,514,2.266,515,2.266,516,2.266,517,2.266,518,2.266,519,2.266,520,2.218,521,2.127,522,2.042,523,2.926,524,2.266,525,2.266,526,2.266,527,2.266,528,2.266,529,2.266,530,2.127,531,2.317,532,2.317,533,2.317,534,2.317,535,2.317,536,2.317,537,2.317,538,2.317,539,2.317,540,2.317,541,2.266,542,2.266,543,2.317,544,2.317,545,2.317,546,2.317,547,2.317,548,2.317,549,2.317,550,2.317,551,2.317,552,2.317,553,2.317,554,2.317,555,1.785,556,2.266,557,2.266,558,2.317,571,3.451,572,3.543,573,2.819,604,2.542,605,2.673,607,2.819,970,3.856,2016,3.869,2017,3.869,2019,3.869,2020,3.869,2021,3.869,2022,5.64,2023,5.64]],["title/controllers/HealthyController-2.html",[393,1.283,796,2.927,970,2.147]],["body/controllers/HealthyController-2.html",[3,0.066,4,0.05,5,0.083,7,0.098,14,0.228,16,0.007,19,0.066,32,0.004,33,0.005,34,0.004,35,0.314,51,0.757,53,0.237,75,0.137,87,1.767,121,0.956,176,1.467,183,1.68,188,1.215,204,1.493,208,1.215,229,2.701,281,2.002,381,2.317,393,1.785,395,2.218,400,3.75,486,2.926,487,2.266,488,2.317,489,2.926,490,2.317,491,2.218,492,2.317,493,2.317,494,2.266,495,2.98,496,3.172,497,3.241,498,2.266,499,2.266,500,2.218,501,2.218,502,3.172,503,3.172,504,3.282,505,3.241,506,3.041,507,2.218,508,2.926,509,2.266,510,2.266,511,2.266,512,2.864,513,2.926,514,2.266,515,2.266,516,2.266,517,2.266,518,2.266,519,2.266,520,2.218,521,2.127,522,2.042,523,2.926,524,2.266,525,2.266,526,2.266,527,2.266,528,2.266,529,2.266,530,2.127,531,2.317,532,2.317,533,2.317,534,2.317,535,2.317,536,2.317,537,2.317,538,2.317,539,2.317,540,2.317,541,2.266,542,2.266,543,2.317,544,2.317,545,2.317,546,2.317,547,2.317,548,2.317,549,2.317,550,2.317,551,2.317,552,2.317,553,2.317,554,2.317,555,1.785,556,2.266,557,2.266,558,2.317,571,3.451,572,3.543,573,2.819,604,2.542,605,2.673,607,2.819,970,3.856,2016,3.869,2017,3.869,2019,3.869,2020,3.869,2021,3.869,2024,5.64,2025,5.64]],["title/controllers/HealthyController-3.html",[393,1.283,506,1.529,970,2.147]],["body/controllers/HealthyController-3.html",[3,0.066,4,0.05,5,0.083,7,0.098,14,0.228,16,0.007,19,0.066,32,0.004,33,0.005,34,0.004,35,0.314,51,0.757,53,0.237,75,0.137,87,1.767,121,0.956,176,1.467,183,1.68,188,1.215,204,1.493,208,1.215,229,2.701,281,2.002,381,2.317,393,1.785,395,2.218,400,3.75,486,2.926,487,2.266,488,2.317,489,2.926,490,2.317,491,2.218,492,2.317,493,2.317,494,2.266,495,2.98,496,3.172,497,3.241,498,2.266,499,2.266,500,2.218,501,2.218,502,3.172,503,3.172,504,3.282,505,3.241,506,3.041,507,2.218,508,2.926,509,2.266,510,2.266,511,2.266,512,2.864,513,2.926,514,2.266,515,2.266,516,2.266,517,2.266,518,2.266,519,2.266,520,2.218,521,2.127,522,2.042,523,2.926,524,2.266,525,2.266,526,2.266,527,2.266,528,2.266,529,2.266,530,2.127,531,2.317,532,2.317,533,2.317,534,2.317,535,2.317,536,2.317,537,2.317,538,2.317,539,2.317,540,2.317,541,2.266,542,2.266,543,2.317,544,2.317,545,2.317,546,2.317,547,2.317,548,2.317,549,2.317,550,2.317,551,2.317,552,2.317,553,2.317,554,2.317,555,1.785,556,2.266,557,2.266,558,2.317,571,3.451,572,3.543,573,2.819,604,2.542,605,2.673,607,2.819,970,3.856,2016,3.869,2017,3.869,2019,3.869,2020,3.869,2021,3.869,2026,5.64,2027,5.64]],["title/controllers/HealthyController-4.html",[393,1.283,803,3.101,970,2.147]],["body/controllers/HealthyController-4.html",[3,0.066,4,0.05,5,0.083,7,0.098,14,0.228,16,0.007,19,0.066,32,0.004,33,0.005,34,0.004,35,0.314,51,0.757,53,0.237,75,0.137,87,1.767,121,0.956,176,1.467,183,1.68,188,1.215,204,1.493,208,1.215,229,2.701,281,2.002,381,2.317,393,1.785,395,2.218,400,3.75,486,2.926,487,2.266,488,2.317,489,2.926,490,2.317,491,2.218,492,2.317,493,2.317,494,2.266,495,2.98,496,3.172,497,3.241,498,2.266,499,2.266,500,2.218,501,2.218,502,3.172,503,3.172,504,3.282,505,3.241,506,3.041,507,2.218,508,2.926,509,2.266,510,2.266,511,2.266,512,2.864,513,2.926,514,2.266,515,2.266,516,2.266,517,2.266,518,2.266,519,2.266,520,2.218,521,2.127,522,2.042,523,2.926,524,2.266,525,2.266,526,2.266,527,2.266,528,2.266,529,2.266,530,2.127,531,2.317,532,2.317,533,2.317,534,2.317,535,2.317,536,2.317,537,2.317,538,2.317,539,2.317,540,2.317,541,2.266,542,2.266,543,2.317,544,2.317,545,2.317,546,2.317,547,2.317,548,2.317,549,2.317,550,2.317,551,2.317,552,2.317,553,2.317,554,2.317,555,1.785,556,2.266,557,2.266,558,2.317,571,3.451,572,3.543,573,2.819,604,2.542,605,2.673,607,2.819,970,3.856,2016,3.869,2017,3.869,2019,3.869,2020,3.869,2021,3.869,2028,5.64,2029,5.64]],["title/controllers/HealthyController-5.html",[393,1.283,722,2.927,970,2.147]],["body/controllers/HealthyController-5.html",[3,0.066,4,0.05,5,0.083,7,0.098,14,0.228,16,0.007,19,0.066,32,0.004,33,0.005,34,0.004,35,0.314,51,0.757,53,0.237,75,0.137,87,1.767,121,0.956,176,1.467,183,1.68,188,1.215,204,1.493,208,1.215,229,2.701,281,2.002,381,2.317,393,1.785,395,2.218,400,3.75,486,2.926,487,2.266,488,2.317,489,2.926,490,2.317,491,2.218,492,2.317,493,2.317,494,2.266,495,2.98,496,3.172,497,3.241,498,2.266,499,2.266,500,2.218,501,2.218,502,3.172,503,3.172,504,3.282,505,3.241,506,3.041,507,2.218,508,2.926,509,2.266,510,2.266,511,2.266,512,2.864,513,2.926,514,2.266,515,2.266,516,2.266,517,2.266,518,2.266,519,2.266,520,2.218,521,2.127,522,2.042,523,2.926,524,2.266,525,2.266,526,2.266,527,2.266,528,2.266,529,2.266,530,2.127,531,2.317,532,2.317,533,2.317,534,2.317,535,2.317,536,2.317,537,2.317,538,2.317,539,2.317,540,2.317,541,2.266,542,2.266,543,2.317,544,2.317,545,2.317,546,2.317,547,2.317,548,2.317,549,2.317,550,2.317,551,2.317,552,2.317,553,2.317,554,2.317,555,1.785,556,2.266,557,2.266,558,2.317,571,3.451,572,3.543,573,2.819,604,2.542,605,2.673,607,2.819,970,3.856,2016,3.869,2017,3.869,2019,3.869,2020,3.869,2021,3.869,2030,5.64,2031,5.64]],["title/interfaces/IAccount.html",[0,0.991,97,3.702]],["body/interfaces/IAccount.html",[0,1.337,2,1.843,3,0.056,4,0.043,5,0.049,7,0.083,9,0.978,14,0.39,15,0.293,16,0.007,17,3.949,18,3.682,19,0.101,23,1.26,26,2.645,32,0.003,33,0.004,34,0.003,35,0.266,36,2.067,38,3.455,39,2.187,40,3.919,41,3.919,42,2.792,43,3.137,44,3.218,45,2.792,46,1.733,50,1.408,52,3.067,53,0.274,55,4.105,57,3.009,60,1.282,62,1.9,65,2.744,73,1.46,75,0.174,76,2.146,77,1.699,78,1.434,79,2.148,80,2.442,81,3.054,82,1.666,83,2.895,84,3.919,85,2.269,86,2.269,87,1.431,88,2.461,89,2.535,90,3.137,91,3.919,92,2.393,93,1.843,94,3.284,95,2.212,96,2.535,97,5.685,98,1.203,99,3.661,100,1.843,101,1.699,102,1.922,103,3.919,104,3.919,105,0.98,106,0.872,107,4.48,108,3.919,109,4.495,110,5.346,111,2.683,112,5.346,113,3.919,114,1.992,115,3.432,116,6.085,117,2.067,118,3.919,119,5.346,120,3.919,121,1.354,122,3.284,123,1.383,124,3.919,125,3.919,126,3.661,127,3.682,128,2.393,129,3.919,130,3.075,131,6.085,132,2.106,133,3.919,134,5.478,135,3.919,136,3.009,137,3.919,138,3.284,139,3.919,140,3.284,141,3.919,142,3.919,143,2.329,183,1.506,186,1.992,187,1.207,188,1.407,860,2.895,2032,6.531,2033,4.787,2034,4.787,2035,4.787]],["title/interfaces/IAccountActivation.html",[0,0.991,161,3.702]],["body/interfaces/IAccountActivation.html",[0,1.457,2,2.095,3,0.064,4,0.048,5,0.056,7,0.095,14,0.32,15,0.27,16,0.007,19,0.105,23,1.425,26,2.131,30,4.624,32,0.004,33,0.005,34,0.004,35,0.303,36,2.661,39,2.382,43,4.662,50,2.633,52,3.112,53,0.229,60,1.227,62,2.23,75,0.175,76,2.337,77,1.931,78,1.63,79,2.291,80,2.604,81,2.922,82,1.894,83,3.29,85,2.579,86,2.579,87,1.192,92,2.72,98,1.367,101,1.931,102,2.473,106,0.987,115,3.058,121,1.206,144,4.472,145,3.927,146,4.454,147,4.454,148,6.068,149,6.068,151,2.453,158,2.394,159,3.42,160,2.881,161,6.062,162,4.161,163,2.647,164,4.161,165,4.454,166,6.882,167,4.454,168,3.733,169,4.454,170,5.824,171,3.733,172,4.454,173,4.454,174,1.292,175,3.068,176,1.85,177,3.733,178,5.824,179,2.798,180,4.454,181,4.454,182,3.733,183,1.641,188,1.172,2036,5.441]],["title/interfaces/IContent.html",[0,0.991,1404,3.962]],["body/interfaces/IContent.html",[0,1.387,2,1.551,3,0.047,4,0.06,5,0.041,7,0.07,11,1.312,14,0.274,15,0.286,16,0.007,19,0.095,23,1.148,32,0.004,33,0.004,34,0.003,35,0.224,36,1.275,39,1.937,52,2.871,53,0.169,57,2.531,62,2.004,65,2.845,73,1.229,75,0.165,76,1.901,77,1.429,78,1.206,79,1.957,80,2.225,81,3.041,82,1.402,95,1.861,101,1.429,102,2.178,105,1.185,106,0.987,114,1.765,115,2.911,117,1.831,121,1.255,128,2.013,130,2.85,132,2.546,134,5.078,151,1.815,158,1.772,174,1.528,176,1.047,183,1.334,187,0.744,188,1.247,271,2.911,281,1.429,310,3.771,322,2.546,326,3.969,354,1.654,387,2.531,389,2.531,392,2.531,393,1.831,555,2.482,741,3.637,777,1.531,839,1.251,880,2.839,1016,2.907,1034,3.08,1044,2.735,1062,2.228,1065,2.228,1066,2.911,1069,2.911,1070,1.458,1071,1.551,1072,2.325,1073,1.488,1074,1.654,1076,2.519,1077,2.325,1079,2.325,1080,1.429,1081,2.377,1082,2.228,1087,1.618,1088,2.325,1090,1.206,1091,1.229,1097,2.663,1308,3.792,1334,4.425,1341,3.297,1342,6.418,1388,4.573,1389,3.297,1396,3.297,1397,2.907,1398,3.587,1399,2.907,1400,2.907,1401,3.587,1402,3.587,1403,4.257,1404,5.543,1405,5.343,1406,4.438,1407,6.593,1408,5.543,1409,3.587,1410,3.587,1411,4.736,1412,3.297,1413,5.153,1414,3.587,1415,6.593,1416,3.587,1417,3.587,1418,3.587,1419,3.587,1420,3.587,1421,3.587,1422,3.587,1423,3.587,1424,3.587,1425,3.587,1426,6.031,1427,5.153,1428,3.297,1429,5.153,1430,3.297,1431,2.435,1432,3.587,1433,3.587,1434,6.593,1435,5.153,1436,3.587,1437,3.587,1438,3.587,1439,2.763,1440,3.587,1441,2.763,1442,3.587,1443,3.587,1444,3.297,1445,3.587,2037,4.027]],["title/interfaces/ICredential.html",[0,0.991,55,3.042]],["body/interfaces/ICredential.html",[0,1.37,2,1.91,3,0.058,4,0.044,5,0.051,7,0.086,8,0.754,14,0.385,15,0.297,16,0.007,17,4.046,18,3.772,19,0.102,23,1.134,26,2.535,32,0.003,33,0.004,34,0.003,35,0.276,36,2.117,38,3.58,39,2.24,40,4.06,41,4.06,42,2.893,43,3.251,44,3.12,45,2.893,46,2.934,50,1.459,52,3.093,55,4.758,57,3.118,60,1.154,62,1.935,65,2.81,73,1.513,75,0.175,76,2.198,77,1.761,78,1.486,79,2.188,80,2.198,81,3.11,82,1.726,83,3,84,4.06,85,2.351,86,2.351,87,1.466,88,2.55,89,2.626,90,3.251,91,4.06,92,2.48,93,1.91,94,3.403,95,2.292,96,2.626,97,5.116,98,1.246,99,3.793,100,3.12,101,1.761,102,1.968,103,4.06,104,4.06,105,1.016,106,0.888,107,4.59,108,4.06,109,3,110,4.06,111,2.038,112,4.06,113,4.06,114,2.041,115,3.483,116,6.197,117,2.117,118,4.06,119,5.476,120,4.06,121,1.374,122,3.403,123,1.433,124,4.06,125,4.06,126,3.793,127,3.772,128,2.48,129,4.06,130,3.12,131,6.197,132,2.183,133,4.06,134,5.559,135,4.06,136,3.118,137,4.06,138,3.403,139,4.06,140,3.403,141,4.06,142,4.06,143,2.413]],["title/interfaces/ICredential-1.html",[0,0.83,55,2.549,777,1.073]],["body/interfaces/ICredential-1.html",[0,1.168,1,5.377,2,1.521,3,0.046,4,0.035,5,0.041,7,0.069,9,0.855,14,0.338,15,0.25,16,0.007,19,0.095,22,5.231,23,1.244,28,5.231,32,0.004,33,0.004,34,0.003,35,0.22,36,2.12,39,1.911,50,2.519,52,2.977,53,0.308,55,4.21,60,1.266,62,2.229,65,1.659,73,1.205,75,0.165,76,1.875,77,1.402,78,1.183,79,1.936,80,2.201,82,1.375,85,1.872,86,1.872,87,0.866,89,2.091,90,4.808,92,1.975,95,1.825,100,1.521,101,1.402,102,2.519,106,1.073,111,3.014,114,1.741,115,3.154,117,1.806,121,1.479,122,3.914,127,4.387,128,1.975,132,2.511,158,1.738,159,2.483,160,2.091,168,3.914,174,1.519,175,3.217,176,1.908,177,3.914,179,2.934,182,3.914,183,1.316,186,1.741,187,1.055,188,1.581,203,2.227,223,1.975,243,3.197,246,3.06,254,2.851,257,2.851,259,3.885,261,4.118,262,4.612,263,2.851,264,4.118,265,4.612,266,2.851,322,2.511,354,2.344,1431,4.051,1833,3.021,1842,3.233,1843,3.233,1844,3.233,1845,3.233,1846,4.671,1847,3.233,1848,3.233,1849,5.483,1850,3.233,1851,4.671,1852,3.233,1853,3.233,1854,3.233,1855,5.483,1856,5.483,1857,6.006,1858,6.006,1859,3.233,1860,3.233,1861,3.233,1862,6.006,1863,4.671,1864,3.233,1865,3.233,1866,3.233,1867,3.233,1868,4.671,1869,3.233,1870,3.233,1871,4.671,1872,3.233,1873,3.021,2038,3.95,2039,3.95,2040,3.95,2041,3.95,2042,3.95,2043,3.95]],["title/interfaces/IOtp.html",[0,0.991,2044,3.702]],["body/interfaces/IOtp.html",[0,1.416,2,2.007,3,0.061,4,0.046,5,0.054,7,0.091,14,0.313,15,0.235,16,0.007,19,0.101,23,1.401,32,0.003,33,0.005,34,0.003,35,0.29,36,2.798,39,2.316,44,2.007,50,2.035,52,2.936,53,0.219,60,1.193,62,2.199,75,0.17,76,2.272,77,1.85,78,1.561,79,2.243,80,2.55,81,2.841,82,1.814,85,2.47,86,2.47,87,1.142,92,2.605,98,1.309,101,1.85,102,2.432,106,1.009,109,4.182,111,2.841,114,1.59,115,2.972,117,1.649,121,1.172,143,2.535,151,2.349,163,3.364,175,4.376,176,2.15,179,2.68,183,1.595,188,1.49,214,3.575,215,3.575,216,5.671,310,2.408,358,3.117,362,2.841,370,3.575,371,3.637,372,4.878,381,2.141,718,6.579,791,5.671,1214,6.321,1597,3.762,1914,3.986,2044,5.935,2045,3.762,2046,5.212,2047,6.353,2048,6.766,2049,4.266,2050,4.266,2051,3.986,2052,4.266,2053,3.986,2054,3.986,2055,3.762,2056,4.266,2057,4.266,2058,6.766,2059,6.353,2060,4.266,2061,4.266,2062,4.266,2063,4.266,2064,4.266,2065,4.266,2066,4.266,2067,4.266]],["title/interfaces/IUser.html",[0,0.991,2068,3.494]],["body/interfaces/IUser.html",[0,1.272,2,1.336,3,0.041,4,0.031,5,0.036,7,0.06,9,0.777,11,0.787,14,0.372,15,0.273,16,0.007,19,0.096,23,1.168,24,1.408,25,1.316,27,1.644,32,0.004,33,0.003,34,0.002,35,0.193,36,1.966,39,1.737,52,2.879,53,0.29,60,0.598,62,2.109,65,1.457,73,1.058,75,0.156,76,1.704,77,1.231,78,1.039,79,1.795,80,2.041,81,2.131,82,1.207,93,3.307,95,1.603,96,1.837,98,0.872,101,1.231,102,2.028,105,1.062,106,1.036,111,3.18,114,1.895,115,3.172,117,2.67,121,1.168,123,1.499,128,1.734,130,1.997,132,1.526,143,2.523,151,1.564,158,1.526,163,1.688,183,1.196,186,1.582,187,0.959,188,1.485,195,1.603,196,1.603,211,4.726,212,1.837,225,2.18,271,2.229,310,3.185,322,2.282,340,2.273,377,2.098,381,1.425,383,1.956,387,3.26,389,3.26,392,3.26,522,1.256,555,1.098,688,2.273,777,0.918,808,3.744,815,3.966,845,1.704,883,2.733,916,3.26,932,1.611,940,4.866,949,1.644,1047,1.611,1053,1.997,1058,1.256,1060,1.733,1076,1.554,1090,1.039,1091,1.058,1215,2.38,1305,4.261,1431,2.098,1567,2.396,1675,1.491,1676,2.38,1705,2.38,1752,2.18,1793,1.688,1797,1.688,1798,1.644,1799,1.688,1800,2.458,1801,1.734,1802,1.734,1803,1.644,1804,3.185,1807,1.603,1906,3.744,1907,2.504,1921,2.18,2068,4.484,2069,2.38,2070,5.271,2071,5.271,2072,3.966,2073,3.469,2074,3.469,2075,3.469,2076,3.966,2077,3.469,2078,2.273,2079,2.653,2080,3.744,2081,3.744,2082,2.653,2083,2.38,2084,2.653,2085,2.653,2086,2.653,2087,2.38,2088,2.653,2089,2.504,2090,2.504,2091,2.653,2092,2.653,2093,2.38,2094,2.653,2095,2.653,2096,4.75,2097,6.137,2098,5.271,2099,2.653,2100,2.653,2101,2.653,2102,2.653,2103,2.653,2104,2.653,2105,3.966,2106,2.653,2107,2.653,2108,3.966,2109,3.966,2110,2.653,2111,2.504,2112,3.966,2113,2.653,2114,3.966,2115,2.653,2116,2.653,2117,3.966,2118,2.653,2119,2.653,2120,2.653,2121,2.653,2122,2.653,2123,2.653,2124,2.653,2125,2.653,2126,2.653,2127,2.653,2128,2.653,2129,2.653,2130,4.75,2131,2.504,2132,2.504,2133,2.504,2134,2.653,2135,3.966,2136,5.271,2137,3.966,2138,2.653,2139,3.966,2140,3.966,2141,3.966,2142,4.75,2143,2.38,2144,2.653,2145,2.653,2146,2.653,2147,2.653,2148,2.653,2149,3.966,2150,3.966,2151,3.966,2152,2.653,2153,2.653,2154,2.653,2155,2.653]],["title/classes/Image.html",[35,0.269,1096,1.621]],["body/classes/Image.html",[3,0.066,4,0.05,5,0.058,7,0.098,8,0.822,9,1.277,14,0.371,15,0.29,16,0.007,19,0.066,32,0.004,33,0.005,34,0.004,35,0.314,37,0.831,53,0.371,75,0.161,85,2.677,86,2.677,87,1.238,88,2.904,105,1.746,106,1.001,121,1.236,176,2.099,179,2.904,183,1.681,186,2.224,187,1.347,188,1.571,227,2.546,229,2.956,565,3.416,860,4.408,1058,2.045,1096,2.441,1215,5.537,1251,5.031,1260,4.624,1543,6.155,1569,6.372,1654,5.85,2156,5.649,2157,6.981,2158,6.492,2159,5.649,2160,5.649,2161,7.289,2162,5.649,2163,7.289,2164,5.85,2165,5.649,2166,5.575,2167,5.967,2168,4.624,2169,6.751,2170,5.649,2171,5.649,2172,7.289,2173,5.649,2174,5.649,2175,5.649,2176,7.289,2177,5.649,2178,5.649,2179,7.289,2180,5.649,2181,5.649,2182,5.649,2183,5.649,2184,5.649,2185,5.649,2186,7.289,2187,5.649,2188,5.649,2189,5.649,2190,5.649,2191,5.649,2192,5.649]],["title/injectables/ImageInterceptor.html",[207,1.116,874,3.32]],["body/injectables/ImageInterceptor.html",[3,0.063,4,0.047,5,0.055,7,0.093,9,0.801,15,0.182,16,0.007,19,0.082,23,1.332,27,1.861,32,0.004,33,0.005,34,0.004,35,0.391,53,0.225,69,2.016,75,0.164,87,1.722,106,1.045,114,2.547,117,2.643,121,1.471,130,3.429,176,2.172,183,1.622,186,1.631,187,0.988,188,1.152,207,1.813,208,1.152,354,2.196,410,2.919,411,3.333,421,2.749,568,4.111,569,2.831,786,2.601,793,5.076,868,3.249,874,4.825,875,3.859,882,3.333,883,3.095,916,3.361,974,2.103,1060,1.962,1096,2.632,1115,3.015,1528,4.253,1529,4.161,1530,4.593,1531,4.593,1534,3.504,1535,3.504,1536,3.361,1543,5.076,1550,4.609,1551,4.253,1552,5.076,1553,5.076,1554,4.089,1557,4.94,1558,2.919,1559,4.089,1564,4.609,1584,4.089,1585,4.089,1966,4.762,1968,6.264,1969,4.762,1970,4.762,1971,4.762,1972,4.762,1973,4.762,1974,4.762,1975,4.762,1976,6.264,1977,6.264,1978,4.762,1979,6.264,1980,4.762,1981,4.762,1982,6.264,1983,7,1984,7,2193,5.347]],["title/classes/ImagePayload.html",[35,0.269,1064,2.033]],["body/classes/ImagePayload.html",[3,0.051,4,0.063,5,0.044,7,0.075,8,0.686,9,0.912,11,1.733,14,0.384,15,0.307,16,0.007,19,0.109,23,0.733,24,0.98,25,0.916,27,1.144,32,0.003,33,0.004,34,0.003,35,0.536,37,0.636,48,1.206,51,0.58,53,0.182,60,1.39,75,0.133,98,1.086,105,1.442,106,0.507,123,1.249,174,1.389,187,1.125,204,1.144,280,2.413,584,0.916,619,1.739,777,1.144,839,1.891,842,1.63,845,2.511,846,1.597,878,2.313,880,2.768,881,1.476,890,1.597,924,2.203,928,2.035,932,1.343,933,1.368,1044,2.824,1045,1.816,1046,1.448,1047,1.343,1053,2.712,1056,1.962,1057,2.343,1058,3.026,1059,2.557,1060,1.206,1061,3.51,1062,2.712,1063,3.69,1064,2.958,1065,2.712,1066,2.393,1067,2.393,1068,2.446,1069,2.393,1070,2.55,1071,1.665,1072,2.446,1073,1.597,1074,1.776,1075,3.211,1076,2.11,1077,2.446,1078,1.816,1079,2.83,1080,2.16,1081,2.5,1082,2.943,1083,2.616,1084,2.616,1085,1.776,1086,1.858,1087,1.737,1088,1.737,1089,1.858,1090,1.295,1091,1.319,1092,2.557,1093,1.63,1094,2.893,1095,2.958,1096,2.358,1097,2.393,1098,2.5,1099,1.597,1100,1.565,2194,4.323]],["title/classes/Like.html",[35,0.334]],["body/classes/Like.html",[3,0.05,4,0.062,5,0.044,7,0.074,8,0.677,11,1.718,14,0.383,15,0.312,16,0.007,19,0.108,23,0.719,24,0.961,25,0.898,27,1.122,32,0.003,33,0.004,34,0.003,35,0.535,37,0.624,48,1.182,51,0.935,53,0.293,60,1.432,75,0.132,98,1.065,105,1.551,106,0.497,123,1.225,174,1.377,187,1.109,204,1.122,280,2.396,584,0.898,619,1.721,777,1.122,839,1.865,842,1.599,845,2.489,846,1.566,878,2.313,880,2.743,881,1.447,890,1.566,924,2.173,928,2.014,932,1.317,933,1.342,1044,2.799,1045,1.781,1046,1.42,1047,1.317,1053,2.683,1056,1.935,1057,2.311,1058,3.006,1059,2.521,1060,1.182,1061,3.359,1062,2.683,1063,3.437,1064,2.521,1065,2.683,1066,2.36,1067,2.36,1068,2.412,1069,2.36,1070,2.523,1071,1.632,1072,2.412,1073,1.566,1074,1.741,1075,3.359,1076,2.396,1077,3.045,1078,1.781,1079,3.214,1080,2.13,1081,2.465,1082,2.917,1083,2.58,1084,2.58,1085,1.741,1086,1.822,1087,1.704,1088,1.704,1089,1.822,1090,1.27,1091,1.293,1092,2.521,1093,1.599,1094,2.862,1095,2.927,1096,2.333,1097,2.36,1098,2.465,1099,1.566,1100,1.535,2195,4.239,2196,4.239,2197,4.239]],["title/injectables/LimitPipe.html",[207,1.116,886,2.563]],["body/injectables/LimitPipe.html",[3,0.063,4,0.048,5,0.055,7,0.094,9,0.804,14,0.38,15,0.268,16,0.007,19,0.102,32,0.004,33,0.005,34,0.004,35,0.438,53,0.226,75,0.149,87,1.546,98,1.349,105,1.888,106,0.828,121,1.473,179,2.761,183,1.627,186,1.638,187,0.993,188,1.802,207,1.929,208,1.157,271,2.308,310,2.481,358,3.55,426,2.761,555,1.7,786,3.432,839,1.668,843,3.132,849,3.639,860,3.248,881,1.833,884,3.735,885,3.735,886,4.429,891,4.566,932,2.191,933,2.232,934,3.735,974,2.112,1099,2.606,1306,3.519,1642,6.436,1756,3.876,1761,4.107,1762,6.396,1763,3.876,1764,4.107,1765,4.107,1766,6.396,1767,4.107,1768,4.107,1769,4.951,1770,5.394,1771,4.107,1772,4.107,1773,4.107,1774,5.394,1775,4.107,1776,4.107,1777,5.394,1778,4.107,1779,4.107,1780,4.107,1781,5.394,1782,4.107,1783,4.107,1784,4.107,1785,4.107,1786,6.023,1787,5.394,1788,4.107,1789,4.107,2198,5.37]],["title/classes/Link.html",[35,0.269,280,1.45]],["body/classes/Link.html",[3,0.05,4,0.062,5,0.044,7,0.075,8,0.682,11,1.726,14,0.386,15,0.316,16,0.007,19,0.108,23,0.726,24,0.971,25,0.907,27,1.133,32,0.003,33,0.004,34,0.003,35,0.536,37,0.63,48,1.195,51,0.811,53,0.254,60,1.385,75,0.132,98,1.076,105,1.435,106,0.503,123,1.238,174,1.383,187,1.117,204,1.133,280,2.496,584,0.907,619,1.73,777,1.133,839,1.878,842,1.615,845,2.501,846,1.583,878,2.313,880,2.756,881,1.462,890,1.583,924,2.189,928,2.025,932,1.331,933,1.356,1044,2.812,1045,1.799,1046,1.434,1047,1.331,1053,2.698,1056,1.949,1057,2.328,1058,3.166,1059,2.54,1060,1.195,1061,3.372,1062,2.698,1063,3.451,1064,2.54,1065,2.698,1066,2.378,1067,2.378,1068,2.43,1069,2.378,1070,2.537,1071,1.649,1072,2.43,1073,1.583,1074,1.759,1075,3.198,1076,2.099,1077,2.43,1078,1.799,1079,2.816,1080,2.146,1081,2.484,1082,2.931,1083,2.599,1084,2.599,1085,1.759,1086,1.841,1087,1.721,1088,1.721,1089,1.841,1090,1.283,1091,1.307,1092,2.54,1093,1.615,1094,2.878,1095,2.944,1096,2.346,1097,2.378,1098,2.484,1099,1.583,1100,1.551,2199,4.283,2200,4.283]],["title/classes/Link-1.html",[35,0.226,280,1.215,777,1.073]],["body/classes/Link-1.html",[3,0.059,4,0.045,5,0.052,7,0.088,8,0.761,9,1.393,11,1.14,14,0.402,15,0.289,16,0.007,19,0.106,24,1.728,25,1.615,26,1.506,27,2.156,32,0.003,33,0.005,34,0.003,35,0.522,37,0.74,51,1.141,53,0.357,60,1.165,75,0.127,105,1.029,123,2.355,174,1.385,195,3.522,196,3.522,280,2.441,584,1.065,868,2.323,878,2.318,882,2.383,883,2.971,928,2.456,949,2.383,1046,1.683,1047,1.562,1056,1.621,1060,2.273,1076,1.506,1090,1.506,1091,1.534,1567,3.119,1675,2.161,1793,3.708,1794,2.835,1796,4.161,1797,3.708,1798,3.612,1799,3.708,1800,3.199,1801,3.375,1802,3.375,1803,2.383,1804,3.522,1805,2.585,1806,2.585,1807,2.323,2201,5.028,2202,5.028,2203,5.028,2204,5.028,2205,5.028]],["title/classes/LoginDto.html",[35,0.269,447,2.355]],["body/classes/LoginDto.html",[3,0.067,4,0.051,5,0.059,7,0.099,8,0.828,14,0.4,15,0.25,16,0.007,19,0.113,24,1.664,25,1.21,26,2.43,32,0.004,33,0.005,34,0.004,35,0.541,37,0.84,44,3.41,51,0.985,53,0.308,60,0.985,75,0.108,100,2.198,174,1.474,243,2.345,246,2.887,362,2.345,363,2.638,371,3.23,386,2.706,417,2.778,437,2.778,447,3.571,462,2.778,584,1.21,585,2.778,586,2.778,587,2.778,588,2.778,589,2.778,590,2.778,591,2.778,592,2.778,619,1.41,720,2.854,878,2.299,996,4.055,1310,2.936,1313,3.669,1314,2.936,1315,3.669,2206,5.71,2207,5.71]],["title/interfaces/MemberAccessTokenPayload.html",[0,0.991,22,2.823]],["body/interfaces/MemberAccessTokenPayload.html",[0,1.824,1,4.975,2,2.452,3,0.074,4,0.057,5,0.065,6,4.869,7,0.111,8,0.887,9,1.334,10,4.869,11,1.934,12,4.173,13,5.858,14,0.402,15,0.303,16,0.007,17,5.386,18,4.809,19,0.104,20,4.596,21,3.851,22,4.586,23,1.333,24,2.02,25,1.887,26,2.668,27,2.357,28,3.714,29,4.869,30,3.714,31,4.869,32,0.004,33,0.005,34,0.004]],["title/classes/Otp.html",[35,0.269,372,3.042]],["body/classes/Otp.html",[0,1.303,3,0.054,4,0.041,5,0.047,7,0.08,8,0.717,9,1.334,14,0.344,15,0.314,16,0.007,19,0.096,23,1.332,32,0.003,33,0.004,34,0.003,35,0.256,36,2.895,37,0.678,39,2.926,44,1.774,46,2.304,47,2.8,48,1.775,49,2.399,50,2.426,51,1.173,52,2.983,53,0.374,56,2.028,60,0.795,61,3.631,62,2.31,69,2.963,70,2.077,71,2.077,72,2.077,73,1.406,74,2.077,75,0.165,76,2.09,77,1.636,78,1.381,79,2.106,80,2.09,81,2.614,82,1.604,85,2.184,86,2.184,87,1.01,92,2.304,98,1.158,101,1.636,102,2.312,106,0.968,109,3.848,111,2.614,114,1.406,115,2.735,117,1.459,121,1.079,143,2.242,150,2.598,151,2.868,163,3.095,175,4.109,176,2.044,179,2.37,188,0.993,214,3.161,215,3.161,216,5.391,310,2.129,358,2.868,362,2.614,370,3.161,371,3.752,372,4.939,381,1.893,718,6.306,791,5.391,1214,3.524,1597,3.326,1914,3.524,2044,4.866,2045,3.326,2047,6.75,2048,6.979,2049,3.772,2050,3.772,2051,3.524,2052,3.772,2053,3.524,2054,3.524,2055,3.326,2056,3.772,2057,3.772,2058,6.433,2059,5.965,2060,3.772,2061,3.772,2062,3.772,2063,3.772,2064,3.772,2065,3.772,2066,3.772,2067,3.772,2208,4.609,2209,4.609,2210,4.609,2211,4.609]],["title/interfaces/OtpModel.html",[0,0.991,215,3.32]],["body/interfaces/OtpModel.html",[0,1.389,2,1.949,3,0.059,4,0.045,5,0.052,7,0.088,9,0.758,14,0.309,15,0.26,16,0.007,19,0.1,23,1.385,32,0.003,33,0.005,34,0.003,35,0.282,36,2.775,39,2.271,44,1.949,50,1.995,52,2.908,53,0.213,60,0.873,62,2.178,75,0.169,76,2.228,77,1.797,78,1.516,79,2.21,80,2.228,81,3.142,82,1.762,85,2.399,86,2.399,87,1.109,92,2.53,98,1.272,101,1.797,102,2.404,106,1,109,4.101,111,3.142,114,1.544,115,2.915,117,1.602,121,1.15,143,2.463,151,2.282,163,3.3,175,4.312,176,2.125,179,2.603,183,1.564,186,1.544,187,0.936,188,1.461,214,3.473,215,4.653,216,6.015,310,2.339,358,3.057,362,3.356,370,5.605,371,3.749,372,4.807,381,2.786,718,6.849,791,5.844,1214,3.871,1597,3.654,1914,3.871,2044,5.187,2045,3.654,2047,6.261,2048,6.688,2049,4.144,2050,5.552,2051,5.187,2052,5.552,2053,5.187,2054,5.187,2055,4.895,2056,5.552,2057,4.144,2058,6.688,2059,6.261,2060,4.144,2061,4.144,2062,4.144,2063,4.144,2064,4.144,2065,4.144,2066,4.144,2067,4.144,2212,5.062]],["title/controllers/PageController.html",[393,1.532,2213,3.702]],["body/controllers/PageController.html",[3,0.029,4,0.022,5,0.052,7,0.043,9,1.01,11,1.876,14,0.353,15,0.314,16,0.007,19,0.029,27,1.057,32,0.002,33,0.003,34,0.002,35,0.138,51,0.905,53,0.283,62,1.021,64,2.083,75,0.158,76,0.815,87,1.751,88,1.275,93,1.932,98,1.445,102,2.3,105,1.758,106,0.938,111,2.912,114,2.689,117,2.717,121,1.25,174,0.726,176,1.496,183,0.921,186,2.057,187,1.57,188,1.589,204,0.656,208,0.861,211,2.115,212,1.313,226,2.054,227,1.118,229,1.68,259,2.115,271,1.717,281,0.88,293,2.883,322,2.531,354,2.061,358,2.843,362,2.061,381,2.061,384,1.398,393,1.588,395,0.975,410,4.908,411,4.177,421,4.019,426,2.58,428,4.152,439,2.33,448,2.883,463,1.79,486,1.605,487,0.996,488,1.019,489,1.605,490,1.019,491,0.975,492,1.019,493,1.019,494,0.996,495,1.854,496,1.973,497,2.016,498,0.996,499,0.996,500,0.975,501,0.975,502,1.973,503,1.973,504,2.215,505,2.312,506,1.892,507,0.975,508,1.605,509,0.996,510,0.996,511,0.996,512,1.571,513,1.605,514,0.996,515,0.996,516,0.996,517,0.996,518,0.996,519,0.996,520,0.975,521,0.935,522,0.898,523,1.605,524,0.996,525,0.996,526,0.996,527,0.996,528,0.996,529,0.996,530,0.935,531,1.019,532,1.019,533,1.019,534,1.019,535,1.019,536,1.019,537,1.019,538,1.019,539,1.019,540,1.019,541,0.996,542,0.996,543,1.019,544,1.019,545,1.019,546,1.019,547,1.019,548,1.019,549,1.019,550,1.019,551,1.019,552,1.019,553,1.019,554,1.019,555,0.785,556,0.996,557,0.996,558,1.019,559,1.701,560,1.559,561,1.892,562,1.354,565,1.499,568,1.175,569,1.313,571,1.893,572,1.944,573,1.24,574,1.118,575,2.261,576,1.24,577,1.313,579,3.616,580,3.77,581,3.153,582,3.153,583,4.646,584,0.525,596,1.701,597,1.559,598,1.559,599,1.559,600,1.559,601,1.559,602,1.559,603,1.625,604,2.843,605,1.893,606,1.446,607,1.24,609,2.829,614,2.508,616,3.288,623,1.559,633,1.79,690,2.883,698,1.559,700,1.701,786,1.206,802,2.829,835,4.864,836,5.06,837,5.06,838,3.946,839,2.095,842,2.169,843,2.926,844,3.837,845,2.849,846,2.125,849,1.846,850,2.054,851,3.946,852,3.946,853,3.946,854,2.741,872,1.625,873,2.829,877,1.559,879,4.824,881,0.846,884,2.656,885,2.656,886,2.656,887,2.416,888,1.701,889,1.559,890,0.916,891,1.354,893,4.399,894,1.896,895,1.896,897,1.701,899,1.896,901,3.055,908,1.701,911,3.946,922,1.896,924,1.817,928,1.155,929,1.896,931,2.741,932,1.241,933,1.264,934,2.115,935,2.741,936,2.741,937,1.701,1060,1.114,1067,1.571,1096,0.83,1100,1.446,1471,3.837,1534,1.625,1535,2.618,1564,3.77,1654,2.741,1675,2.898,1752,2.511,1804,1.846,1805,3.243,1806,2.054,1807,1.846,2157,4.709,2164,2.741,2166,1.896,2213,3.055,2214,2.208,2215,3.558,2216,3.558,2217,4.107,2218,4.468,2219,4.468,2220,4.468,2221,2.208,2222,2.208,2223,2.208,2224,2.208,2225,2.208,2226,2.208,2227,2.208,2228,2.208,2229,2.208,2230,2.208,2231,2.208,2232,2.208,2233,2.208,2234,2.208,2235,3.558,2236,2.208,2237,2.208,2238,2.208,2239,2.208,2240,2.208,2241,2.208,2242,2.208,2243,1.896,2244,2.208,2245,2.208,2246,2.208,2247,2.208,2248,2.208,2249,4.468,2250,2.208,2251,4.468,2252,2.208,2253,2.208,2254,2.208,2255,3.558,2256,4.468,2257,2.208,2258,3.558,2259,3.558,2260,3.558,2261,3.558,2262,3.558,2263,2.208,2264,3.558,2265,2.208,2266,4.468,2267,2.208,2268,5.124,2269,2.208,2270,2.208,2271,3.558,2272,2.208,2273,2.208,2274,2.208,2275,2.208,2276,2.208,2277,2.208,2278,2.03,2279,2.208,2280,2.208,2281,2.208,2282,2.208,2283,2.208,2284,2.208,2285,2.208,2286,2.208,2287,2.208,2288,2.208,2289,2.208,2290,2.208,2291,2.208]],["title/controllers/PageController-1.html",[393,1.283,777,1.073,2213,3.101]],["body/controllers/PageController-1.html",[3,0.029,4,0.022,5,0.052,7,0.043,9,1.01,11,1.876,14,0.353,15,0.314,16,0.007,19,0.029,27,1.057,32,0.002,33,0.003,34,0.002,35,0.138,51,0.905,53,0.283,62,1.021,64,2.083,75,0.158,76,0.815,87,1.751,88,1.275,93,1.932,98,1.445,102,2.3,105,1.758,106,0.938,111,2.912,114,2.689,117,2.717,121,1.25,174,0.726,176,1.496,183,0.921,186,2.057,187,1.57,188,1.589,204,0.656,208,0.861,211,2.115,212,1.313,226,2.054,227,1.118,229,1.68,259,2.115,271,1.717,281,0.88,293,2.883,322,2.531,354,2.061,358,2.843,362,2.061,381,2.061,384,1.398,393,1.588,395,0.975,410,4.908,411,4.177,421,4.019,426,2.58,428,4.152,439,2.33,448,2.883,463,1.79,486,1.605,487,0.996,488,1.019,489,1.605,490,1.019,491,0.975,492,1.019,493,1.019,494,0.996,495,1.854,496,1.973,497,2.016,498,0.996,499,0.996,500,0.975,501,0.975,502,1.973,503,1.973,504,2.215,505,2.312,506,1.892,507,0.975,508,1.605,509,0.996,510,0.996,511,0.996,512,1.571,513,1.605,514,0.996,515,0.996,516,0.996,517,0.996,518,0.996,519,0.996,520,0.975,521,0.935,522,0.898,523,1.605,524,0.996,525,0.996,526,0.996,527,0.996,528,0.996,529,0.996,530,0.935,531,1.019,532,1.019,533,1.019,534,1.019,535,1.019,536,1.019,537,1.019,538,1.019,539,1.019,540,1.019,541,0.996,542,0.996,543,1.019,544,1.019,545,1.019,546,1.019,547,1.019,548,1.019,549,1.019,550,1.019,551,1.019,552,1.019,553,1.019,554,1.019,555,0.785,556,0.996,557,0.996,558,1.019,559,1.701,560,1.559,561,1.892,562,1.354,565,1.499,568,1.175,569,1.313,571,1.893,572,1.944,573,1.24,574,1.118,575,2.261,576,1.24,577,1.313,579,3.616,580,3.77,581,3.153,582,3.153,583,4.646,584,0.525,596,1.701,597,1.559,598,1.559,599,1.559,600,1.559,601,1.559,602,1.559,603,1.625,604,2.843,605,1.893,606,1.446,607,1.24,609,2.829,614,2.508,616,3.288,623,1.559,633,1.79,690,2.883,698,1.559,700,1.701,786,1.206,802,2.829,835,4.864,836,5.06,837,5.06,838,3.946,839,2.095,842,2.169,843,2.926,844,3.837,845,2.849,846,2.125,849,1.846,850,2.054,851,3.946,852,3.946,853,3.946,854,2.741,872,1.625,873,2.829,877,1.559,879,4.824,881,0.846,884,2.656,885,2.656,886,2.656,887,2.416,888,1.701,889,1.559,890,0.916,891,1.354,893,4.399,894,1.896,895,1.896,897,1.701,899,1.896,901,3.055,908,1.701,911,3.946,922,1.896,924,1.817,928,1.155,929,1.896,931,2.741,932,1.241,933,1.264,934,2.115,935,2.741,936,2.741,937,1.701,1060,1.114,1067,1.571,1096,0.83,1100,1.446,1471,3.837,1534,1.625,1535,2.618,1564,3.77,1654,2.741,1675,2.898,1752,2.511,1804,1.846,1805,3.243,1806,2.054,1807,1.846,2157,4.709,2164,2.741,2166,1.896,2213,3.055,2214,2.208,2215,3.558,2216,3.558,2217,4.107,2218,4.468,2219,4.468,2220,4.468,2221,2.208,2222,2.208,2223,2.208,2224,2.208,2225,2.208,2226,2.208,2227,2.208,2228,2.208,2229,2.208,2230,2.208,2231,2.208,2232,2.208,2233,2.208,2234,2.208,2235,3.558,2236,2.208,2237,2.208,2238,2.208,2239,2.208,2240,2.208,2241,2.208,2242,2.208,2243,1.896,2244,2.208,2245,2.208,2246,2.208,2247,2.208,2248,2.208,2249,4.468,2250,2.208,2251,4.468,2252,2.208,2253,2.208,2254,2.208,2255,3.558,2256,4.468,2257,2.208,2258,3.558,2259,3.558,2260,3.558,2261,3.558,2262,3.558,2263,2.208,2264,3.558,2265,2.208,2266,4.468,2267,2.208,2268,5.124,2269,2.208,2270,2.208,2271,3.558,2272,2.208,2273,2.208,2274,2.208,2275,2.208,2276,2.208,2277,2.208,2278,2.03,2279,2.208,2280,2.208,2281,2.208,2282,2.208,2283,2.208,2284,2.208,2285,2.208,2286,2.208,2287,2.208,2288,2.208,2289,2.208,2290,2.208,2291,2.208]],["title/classes/PageDto.html",[35,0.269,1675,2.08]],["body/classes/PageDto.html",[3,0.061,4,0.046,5,0.053,7,0.09,8,0.777,11,1.175,14,0.402,15,0.281,16,0.007,19,0.107,24,1.947,25,1.819,26,1.552,27,2.336,32,0.003,33,0.005,34,0.003,35,0.525,37,0.762,51,1.107,53,0.346,60,1.188,75,0.13,105,1.061,123,2.237,174,1.406,195,2.394,196,2.394,280,2.318,584,1.098,868,2.394,878,2.32,882,2.456,883,3.031,928,2.481,949,2.456,1046,1.735,1047,1.61,1056,1.671,1060,2.462,1076,1.552,1090,1.552,1091,1.581,1567,3.183,1675,2.961,1793,3.765,1794,2.922,1796,4.225,1797,2.521,1798,2.456,1799,2.521,1800,3.265,1801,3.444,1802,3.444,1803,2.456,1804,3.576,1805,2.665,1806,2.665,1807,2.394,2292,5.182,2293,5.182,2294,5.182,2295,5.182]],["title/injectables/PageInterceptor.html",[207,1.116,2243,3.702]],["body/injectables/PageInterceptor.html",[3,0.075,4,0.057,5,0.066,7,0.111,9,0.957,15,0.217,16,0.007,19,0.075,23,1.336,32,0.004,33,0.005,34,0.004,35,0.356,53,0.268,69,2.409,75,0.173,87,1.872,106,0.75,114,2.606,117,2.022,121,1.336,130,3.434,176,2.049,183,1.817,186,1.949,187,1.181,188,1.377,207,1.817,208,1.377,354,2.625,411,3.028,568,4.226,569,3.383,786,3.108,974,2.513,1096,2.139,1115,3.602,1528,4.764,1529,4.172,1530,4.722,1531,4.722,1534,4.187,1535,4.187,1536,4.016,1550,4.187,1551,3.864,1552,4.612,1553,4.612,1557,4.016,1675,3.386,2243,6.025,2296,6.389,2297,6.389,2298,6.389,2299,6.389,2300,6.389,2301,6.389]],["title/injectables/PagePipe.html",[207,1.116,885,2.563]],["body/injectables/PagePipe.html",[3,0.063,4,0.048,5,0.055,7,0.094,9,0.804,14,0.38,15,0.268,16,0.007,19,0.102,32,0.004,33,0.005,34,0.004,35,0.438,53,0.226,75,0.149,87,1.546,98,1.349,105,1.888,106,0.828,121,1.473,179,2.761,183,1.627,186,1.638,187,0.993,188,1.802,207,1.929,208,1.157,271,2.308,310,3.259,358,3.55,426,2.761,555,1.7,786,3.432,839,1.668,843,3.132,849,3.639,860,3.248,881,1.833,884,3.735,885,4.429,886,3.735,891,4.566,932,2.191,933,2.232,934,3.735,974,2.112,1099,1.984,1306,3.519,1642,6.436,1756,3.876,1761,4.107,1762,6.396,1763,3.876,1764,4.107,1765,4.107,1766,6.396,1767,4.107,1768,4.107,1769,4.951,1770,5.394,1771,4.107,1772,4.107,1773,4.107,1774,5.394,1775,4.107,1776,4.107,1777,5.394,1778,4.107,1779,4.107,1780,4.107,1781,6.023,1782,5.394,1783,4.107,1784,4.107,1785,4.107,1786,5.394,1787,4.107,1788,4.107,1789,4.107,2302,5.37]],["title/classes/PageResponse.html",[35,0.269,1807,2.236]],["body/classes/PageResponse.html",[3,0.063,4,0.048,5,0.056,7,0.094,8,0.799,11,1.227,14,0.402,15,0.184,16,0.007,19,0.108,24,1.792,25,1.674,26,1.62,27,2.22,32,0.004,33,0.005,34,0.004,35,0.528,37,0.796,51,0.726,53,0.227,60,1.222,75,0.134,105,1.108,123,2.284,174,1.582,195,2.499,196,2.499,280,2.368,584,1.146,868,2.499,878,2.321,882,2.564,883,3.118,928,2.516,949,2.564,1046,1.811,1047,1.681,1056,1.744,1060,2.339,1076,1.62,1090,1.62,1091,1.65,1567,3.274,1675,2.325,1793,3.845,1794,3.05,1796,4.315,1797,2.632,1798,2.564,1799,2.632,1800,3.359,1801,3.543,1802,3.543,1803,2.564,1804,3.875,1805,2.781,1806,2.781,1807,3.274,2303,5.41]],["title/classes/PageResponseDto.html",[35,0.269,1804,2.236]],["body/classes/PageResponseDto.html",[3,0.059,4,0.045,5,0.052,7,0.088,8,0.763,11,1.143,14,0.402,15,0.298,16,0.007,19,0.106,24,1.929,25,1.802,26,1.51,27,2.318,32,0.003,33,0.005,34,0.003,35,0.522,37,0.742,51,1.175,53,0.368,60,1.167,75,0.128,105,1.032,123,2.206,174,1.387,195,2.329,196,2.329,280,2.287,584,1.068,868,2.329,878,2.319,882,2.389,883,2.976,928,2.459,949,2.389,1046,1.688,1047,1.566,1056,1.625,1060,2.443,1076,1.51,1090,2.287,1091,2.328,1567,3.125,1675,2.167,1793,3.713,1794,2.842,1796,4.167,1797,2.453,1798,2.389,1799,2.453,1800,3.205,1801,3.381,1802,3.381,1803,2.389,1804,3.769,1805,2.592,1806,2.592,1807,2.329,2304,5.041,2305,5.041,2306,5.041,2307,5.041,2308,5.041,2309,5.041]],["title/classes/PagesResponse.html",[35,0.269,1806,2.489]],["body/classes/PagesResponse.html",[3,0.062,4,0.047,5,0.055,7,0.093,8,0.792,11,1.209,14,0.401,15,0.239,16,0.007,19,0.108,24,1.78,25,1.663,26,1.597,27,2.207,32,0.004,33,0.005,34,0.004,35,0.527,37,0.784,51,0.942,53,0.295,60,1.211,75,0.133,105,1.092,123,2.268,174,1.574,195,2.463,196,2.463,280,2.351,584,1.129,868,2.463,878,2.32,882,2.527,883,3.089,928,2.661,949,2.527,1046,1.785,1047,1.656,1056,1.719,1060,2.326,1076,1.597,1090,1.597,1091,1.626,1567,3.243,1675,2.292,1793,3.818,1794,3.006,1796,4.285,1797,2.594,1798,2.527,1799,2.594,1800,3.327,1801,3.509,1802,3.509,1803,2.527,1804,3.853,1805,2.741,1806,3.609,1807,2.463,2310,5.332,2311,5.332]],["title/classes/Pagination.html",[35,0.269,928,1.399]],["body/classes/Pagination.html",[3,0.07,4,0.053,5,0.062,7,0.105,8,0.855,9,1.413,14,0.306,15,0.321,16,0.007,19,0.102,32,0.004,33,0.005,34,0.004,35,0.422,37,0.883,48,2.114,51,1.171,53,0.366,73,1.832,75,0.113,98,1.509,105,1.964,106,0.705,130,3.198,584,1.272,777,2.006,842,2.859,845,2.491,846,3.323,878,2.196,928,2.191,932,2.581,933,2.629,934,3.18,1057,2.919,1099,2.801,1299,4.916,1304,6.799,1305,5.698,1306,3.936,1307,6.205,1308,4.968,1309,5.797,2312,6.006,2313,6.006,2314,6.006,2315,6.006]],["title/classes/Participant.html",[35,0.269,1075,2.033]],["body/classes/Participant.html",[3,0.049,4,0.062,5,0.043,7,0.074,8,0.675,11,1.881,14,0.386,15,0.317,16,0.007,19,0.108,23,0.716,24,0.958,25,0.895,27,1.118,32,0.003,33,0.004,34,0.003,35,0.535,37,0.621,48,1.178,51,0.933,53,0.292,60,1.378,75,0.131,98,1.061,105,1.424,106,0.496,123,1.221,174,1.374,187,1.398,204,1.118,280,2.392,584,0.895,619,1.717,777,1.118,839,1.86,842,1.593,845,2.624,846,1.561,878,2.312,880,2.739,881,1.442,890,1.561,924,2.168,928,2.01,932,1.313,933,1.337,1044,2.795,1045,1.775,1046,1.415,1047,1.313,1053,2.913,1056,1.93,1057,2.305,1058,3.003,1059,2.515,1060,1.178,1061,3.355,1062,2.678,1063,3.433,1064,2.515,1065,2.678,1066,2.355,1067,2.355,1068,2.406,1069,2.355,1070,2.518,1071,1.627,1072,2.406,1073,1.561,1074,1.735,1075,3.355,1076,2.083,1077,2.406,1078,1.775,1079,2.795,1080,2.125,1081,2.459,1082,2.913,1083,2.573,1084,2.573,1085,1.735,1086,1.816,1087,1.698,1088,1.698,1089,1.816,1090,1.266,1091,1.289,1092,2.515,1093,1.593,1094,2.857,1095,2.921,1096,2.329,1097,2.355,1098,2.459,1099,1.561,1100,1.53,2316,4.225,2317,4.225,2318,4.225]],["title/classes/QuotePayload.html",[35,0.269,1066,1.904]],["body/classes/QuotePayload.html",[3,0.05,4,0.071,5,0.044,7,0.074,8,0.68,9,1.138,11,1.722,14,0.385,15,0.313,16,0.007,19,0.108,23,0.723,24,0.967,25,0.903,27,1.128,32,0.003,33,0.004,34,0.003,35,0.536,37,0.627,48,1.189,53,0.294,60,1.382,75,0.132,98,1.071,105,1.431,106,0.5,123,1.232,174,1.38,187,1.114,204,1.128,280,2.401,584,0.903,619,1.979,777,1.128,839,1.872,842,1.608,845,2.496,846,1.575,878,2.31,880,2.751,881,1.455,890,1.575,924,2.182,928,2.02,932,1.325,933,1.349,1044,2.807,1045,1.791,1046,1.428,1047,1.325,1053,2.691,1056,1.943,1057,2.32,1058,3.012,1059,2.532,1060,1.189,1061,3.495,1062,2.691,1063,3.676,1064,2.532,1065,2.691,1066,2.749,1067,2.37,1068,2.422,1069,2.37,1070,2.531,1071,1.642,1072,2.422,1073,1.575,1074,1.751,1075,3.191,1076,2.094,1077,2.422,1078,1.791,1079,2.809,1080,2.139,1081,2.475,1082,2.925,1083,2.59,1084,2.59,1085,1.751,1086,1.833,1087,1.713,1088,1.713,1089,1.833,1090,1.277,1091,1.301,1092,2.532,1093,1.608,1094,2.871,1095,2.936,1096,2.34,1097,2.37,1098,2.475,1099,1.575,1100,1.544,2319,4.264,2320,4.264,2321,4.264]],["title/classes/Recast.html",[35,0.269,1082,1.864]],["body/classes/Recast.html",[3,0.05,4,0.062,5,0.044,7,0.074,8,0.676,11,1.717,14,0.383,15,0.312,16,0.007,19,0.108,23,0.718,24,0.96,25,0.897,27,1.121,32,0.003,33,0.004,34,0.003,35,0.535,37,0.623,48,1.181,51,0.934,53,0.293,60,1.432,75,0.131,98,1.064,105,1.551,106,0.497,123,1.224,174,1.376,187,1.108,204,1.121,280,2.395,584,0.897,619,1.72,777,1.121,839,1.863,842,1.597,845,2.488,846,1.564,878,2.312,880,2.742,881,1.445,890,1.564,924,2.171,928,2.012,932,1.316,933,1.34,1044,2.798,1045,1.779,1046,1.418,1047,1.316,1053,2.681,1056,1.934,1057,2.309,1058,3.005,1059,2.519,1060,1.181,1061,3.358,1062,2.681,1063,3.436,1064,2.519,1065,2.681,1066,2.359,1067,2.359,1068,2.41,1069,2.359,1070,2.521,1071,1.63,1072,2.41,1073,1.564,1074,1.739,1075,3.358,1076,2.395,1077,2.41,1078,1.779,1079,3.212,1080,2.129,1081,2.463,1082,3.078,1083,3.255,1084,2.578,1085,1.739,1086,1.82,1087,1.702,1088,1.702,1089,1.82,1090,1.268,1091,1.292,1092,2.519,1093,1.597,1094,2.86,1095,2.925,1096,2.332,1097,2.359,1098,2.463,1099,1.564,1100,1.533,2322,4.234,2323,4.234,2324,4.234]],["title/classes/RecastPayload.html",[35,0.269,1069,1.904]],["body/classes/RecastPayload.html",[3,0.05,4,0.071,5,0.044,7,0.075,8,0.685,9,0.909,11,1.73,14,0.384,15,0.31,16,0.007,19,0.109,23,0.73,24,0.977,25,0.913,27,1.14,32,0.003,33,0.004,34,0.003,35,0.536,37,0.634,48,1.202,53,0.255,60,1.388,75,0.133,98,1.082,105,1.439,106,0.506,123,1.245,174,1.386,187,1.122,204,1.14,280,2.41,584,0.913,619,1.736,777,1.14,839,1.886,842,1.625,845,2.507,846,1.592,878,2.311,880,2.763,881,1.471,890,1.592,924,2.198,928,2.031,932,1.339,933,1.363,1044,2.82,1045,1.81,1046,1.443,1047,1.339,1053,2.707,1056,1.957,1057,2.337,1058,3.022,1059,2.55,1060,1.202,1061,3.507,1062,2.707,1063,3.687,1064,2.55,1065,2.707,1066,2.388,1067,2.388,1068,2.44,1069,2.764,1070,2.545,1071,1.659,1072,2.44,1073,1.592,1074,1.77,1075,3.206,1076,2.106,1077,2.44,1078,1.81,1079,2.825,1080,2.155,1081,2.494,1082,2.939,1083,2.609,1084,2.609,1085,1.77,1086,1.852,1087,1.731,1088,1.731,1089,1.852,1090,1.291,1091,1.314,1092,2.55,1093,1.625,1094,2.887,1095,2.953,1096,2.354,1097,2.388,1098,2.494,1099,1.592,1100,1.56,2325,4.308,2326,4.308]],["title/interfaces/RefreshTokenPayload.html",[0,0.991,28,2.823]],["body/interfaces/RefreshTokenPayload.html",[0,1.835,1,4.635,2,2.495,3,0.076,4,0.058,5,0.067,6,4.955,7,0.113,8,0.896,9,1.19,10,4.955,11,2.122,12,4.246,13,5.883,14,0.399,15,0.292,16,0.007,17,5.66,18,5.185,19,0.105,20,4.676,21,3.918,22,3.779,23,1.098,24,1.469,25,1.372,26,1.941,27,1.714,28,4.635,29,6.853,30,3.779,31,4.955,32,0.004,33,0.005,34,0.004]],["title/classes/RefreshTokenResponse.html",[35,0.269,588,2.355]],["body/classes/RefreshTokenResponse.html",[3,0.068,4,0.052,5,0.06,7,0.101,8,0.836,14,0.399,15,0.197,16,0.007,19,0.113,24,1.681,25,1.228,26,2.448,32,0.004,33,0.005,34,0.004,35,0.542,37,0.853,44,3.146,51,0.778,53,0.244,60,1,75,0.109,100,2.233,174,1.485,243,2.382,246,3.387,362,2.382,363,2.679,371,3.262,386,2.748,417,2.821,437,2.821,447,2.821,462,2.821,584,1.228,585,2.821,586,2.821,587,2.821,588,3.607,589,2.821,590,2.821,591,2.821,592,2.821,619,1.432,720,2.899,878,2.298,996,2.899,1310,2.982,1313,3.706,1314,2.982,1315,3.706,2327,5.799]],["title/classes/RegisterByEmailDto.html",[35,0.269,462,2.355]],["body/classes/RegisterByEmailDto.html",[3,0.067,4,0.051,5,0.059,7,0.1,8,0.83,14,0.398,15,0.195,16,0.007,19,0.113,24,1.669,25,1.215,26,2.435,32,0.004,33,0.005,34,0.004,35,0.541,37,0.844,44,3.13,51,0.988,53,0.309,60,0.989,75,0.108,100,2.209,174,1.611,243,2.356,246,2.895,362,2.356,363,2.65,371,3.239,386,2.718,417,2.791,437,2.791,447,2.791,462,3.582,584,1.215,585,2.791,586,2.791,587,2.791,588,2.791,589,2.791,590,2.791,591,2.791,592,2.791,619,1.417,720,2.867,878,2.299,996,2.867,1310,2.949,1313,4.064,1314,4.18,1315,3.68,2328,5.736,2329,5.736]],["title/classes/RegisterPayload.html",[35,0.269,1313,2.42]],["body/classes/RegisterPayload.html",[3,0.065,4,0.049,5,0.057,7,0.096,8,0.812,14,0.4,15,0.288,16,0.007,19,0.112,24,1.919,25,1.694,26,2.628,32,0.004,33,0.005,34,0.004,35,0.539,37,0.815,44,3.378,51,1.136,53,0.356,60,0.955,75,0.105,100,2.133,174,1.453,243,2.275,246,2.831,362,2.275,363,2.559,371,3.167,386,2.625,417,2.695,437,2.695,447,2.695,462,2.695,584,1.173,585,2.695,586,2.695,587,2.695,588,2.695,589,2.695,590,2.695,591,2.695,592,2.695,619,1.368,720,2.769,878,2.299,996,2.769,1310,2.848,1313,3.997,1314,2.848,1315,3.598,2330,5.539,2331,5.539,2332,5.539,2333,5.539]],["title/classes/Relationship.html",[35,0.269,1921,3.042]],["body/classes/Relationship.html",[3,0.065,4,0.049,5,0.057,7,0.096,8,0.81,9,1.389,14,0.223,15,0.326,16,0.007,19,0.099,23,1.218,32,0.004,33,0.005,34,0.004,35,0.307,37,0.812,39,3.063,46,2.601,47,3.161,48,2.004,49,2.709,50,2.113,51,1.206,52,3.123,53,0.384,56,2.43,60,1.239,61,3.319,62,2.24,69,3.188,70,2.489,71,2.489,72,2.489,73,1.685,74,2.489,75,0.165,76,2.36,77,1.96,78,1.654,79,2.307,80,2.36,81,2.268,82,1.922,93,3.71,94,3.788,101,1.96,102,2.113,106,0.843,121,0.936,128,2.761,150,4.05,151,3.811,163,3.495,271,2.374,383,3.114,555,1.748,688,3.619,940,5.314,1908,4.918,1921,5.018,2078,3.619,2143,5.477,2334,4.918,2335,5.522,2336,5.522,2337,5.522,2338,4.918,2339,7.183,2340,5.522]],["title/classes/Revision.html",[35,0.269,1439,3.32]],["body/classes/Revision.html",[3,0.067,4,0.051,5,0.059,7,0.1,8,0.829,9,1.399,14,0.231,15,0.326,16,0.007,19,0.1,23,1.245,32,0.004,33,0.005,34,0.004,35,0.318,37,0.841,39,3.089,46,2.66,47,3.233,48,2.049,49,2.771,50,2.162,51,1.189,52,3.025,53,0.381,56,2.516,61,3.394,62,2.265,65,3.599,69,3.231,70,2.577,71,2.577,72,2.577,73,1.744,74,2.577,75,0.171,76,2.414,77,2.03,78,1.713,79,2.346,80,2.414,82,1.99,101,2.03,102,2.162,106,0.862,121,0.969,128,2.859,174,1.475,1080,2.881,1388,4.174,1397,4.127,1439,5.569,1441,5.569,1596,4.373,1911,5.093,1932,4.681,2341,5.093,2342,5.719,2343,5.719,2344,7.347,2345,5.719]],["title/classes/SaveContentDto.html",[35,0.269,1093,1.825]],["body/classes/SaveContentDto.html",[3,0.049,4,0.061,5,0.043,7,0.073,8,0.671,9,0.891,11,1.708,14,0.382,15,0.317,16,0.007,19,0.108,23,0.71,24,0.949,25,0.887,27,1.108,32,0.003,33,0.004,34,0.003,35,0.535,37,0.616,48,1.168,51,0.929,53,0.291,60,1.373,75,0.131,98,1.052,105,1.417,106,0.491,123,1.21,174,1.502,187,1.099,204,1.108,280,2.384,584,0.887,619,1.709,777,1.108,839,1.848,842,1.579,845,2.476,846,1.547,878,2.311,880,2.728,881,1.429,890,1.547,924,2.154,928,2,932,1.301,933,1.325,1044,3.055,1045,1.759,1046,1.402,1047,1.301,1053,2.664,1056,1.918,1057,2.291,1058,2.994,1059,2.499,1060,1.168,1061,3.343,1062,2.901,1063,3.421,1064,2.907,1065,2.901,1066,2.34,1067,2.34,1068,2.391,1069,2.34,1070,2.505,1071,1.612,1072,2.391,1073,1.547,1074,1.72,1075,3.165,1076,2.073,1077,2.391,1078,1.759,1079,2.781,1080,2.111,1081,2.444,1082,2.901,1083,2.557,1084,2.557,1085,1.72,1086,1.799,1087,1.682,1088,1.682,1089,1.799,1090,1.254,1091,1.277,1092,2.907,1093,2.243,1094,3.095,1095,3.165,1096,2.523,1097,2.34,1098,2.444,1099,1.547,1100,1.516,2346,4.187,2347,4.187,2348,4.187]],["title/classes/SaveCredentialDto.html",[35,0.269,1816,3.702]],["body/classes/SaveCredentialDto.html",[3,0.068,4,0.052,5,0.06,7,0.102,8,0.841,9,1.448,14,0.396,15,0.322,16,0.007,19,0.096,32,0.004,33,0.005,34,0.004,35,0.457,36,2.735,37,0.861,42,4.788,45,3.415,46,2.7,49,2.208,50,2.762,53,0.394,60,1.416,64,2.12,73,1.786,75,0.141,79,2.155,100,3.328,132,2.576,203,4.873,218,4.016,219,3.54,223,4.32,243,3.55,246,3.399,250,3.836,262,5.432,265,5.432,1056,1.888,1808,4.792,1809,4.225,1810,4.225,1816,5.704,1817,6.105,2349,5.854,2350,5.854,2351,5.854,2352,5.854,2353,5.854,2354,5.854,2355,5.854,2356,5.854]],["title/classes/ShortPayload.html",[35,0.269,1062,1.864]],["body/classes/ShortPayload.html",[3,0.049,4,0.062,5,0.043,7,0.073,8,0.673,9,1.24,11,1.712,14,0.384,15,0.312,16,0.007,19,0.108,23,0.713,24,0.954,25,0.891,27,1.113,32,0.003,33,0.004,34,0.003,35,0.535,37,0.619,48,1.173,51,0.931,53,0.291,60,1.375,75,0.131,98,1.057,105,1.42,106,0.494,123,1.215,174,1.372,187,1.103,204,1.113,280,2.607,584,0.891,619,1.969,777,1.113,839,1.854,842,1.586,845,2.481,846,1.554,878,2.312,880,2.734,881,1.436,890,1.554,924,2.161,928,2.005,932,1.307,933,1.331,1044,2.789,1045,1.767,1046,1.408,1047,1.307,1053,2.671,1056,1.924,1057,2.298,1058,2.999,1059,2.507,1060,1.173,1061,3.479,1062,2.907,1063,3.661,1064,2.507,1065,2.671,1066,2.347,1067,2.347,1068,2.398,1069,2.347,1070,2.512,1071,1.619,1072,2.398,1073,1.554,1074,1.728,1075,3.172,1076,2.078,1077,2.398,1078,1.767,1079,2.788,1080,2.118,1081,2.451,1082,2.907,1083,2.565,1084,2.565,1085,1.728,1086,1.808,1087,1.69,1088,1.69,1089,1.808,1090,1.26,1091,1.283,1092,2.507,1093,1.586,1094,2.85,1095,2.914,1096,2.323,1097,2.347,1098,2.451,1099,1.554,1100,1.523,2357,4.206,2358,4.206,2359,4.206]],["title/classes/ShortPhoto.html",[35,0.269,1061,2.033]],["body/classes/ShortPhoto.html",[3,0.051,4,0.063,5,0.045,7,0.075,8,0.687,11,1.735,14,0.384,15,0.307,16,0.007,19,0.109,23,0.735,24,0.983,25,0.918,27,1.147,32,0.003,33,0.004,34,0.003,35,0.537,37,0.637,48,1.209,51,0.582,53,0.182,60,1.391,75,0.133,98,1.089,105,1.444,106,0.509,123,1.252,174,1.39,187,1.127,204,1.147,280,2.415,584,0.918,619,1.741,777,1.147,839,1.894,842,1.634,845,2.514,846,1.601,878,2.313,880,2.77,881,1.479,890,1.601,924,2.77,928,2.038,932,1.346,933,1.371,1044,2.827,1045,1.82,1046,1.451,1047,1.346,1053,2.715,1056,1.965,1057,2.347,1058,3.111,1059,2.561,1060,1.209,1061,3.513,1062,2.715,1063,3.466,1064,2.561,1065,2.715,1066,2.397,1067,2.397,1068,2.45,1069,2.397,1070,2.553,1071,1.669,1072,2.45,1073,1.601,1074,1.78,1075,3.214,1076,2.112,1077,2.45,1078,1.82,1079,2.834,1080,2.164,1081,2.504,1082,2.946,1083,2.62,1084,2.62,1085,1.78,1086,1.863,1087,1.741,1088,1.741,1089,1.863,1090,1.298,1091,1.322,1092,2.561,1093,1.634,1094,2.897,1095,2.962,1096,2.361,1097,2.397,1098,2.504,1099,1.601,1100,1.569,2360,4.334]],["title/interfaces/SignupRequirements.html",[0,0.991,224,3.962]],["body/interfaces/SignupRequirements.html",[0,0.932,1,2.655,2,1.126,3,0.034,4,0.026,5,0.03,7,0.051,8,0.513,11,1.642,12,1.916,13,2.861,14,0.386,15,0.266,16,0.007,18,2.567,19,0.065,21,2.753,22,1.706,25,1.534,26,2.459,28,2.655,30,2.655,32,0.004,33,0.003,34,0.002,35,0.163,36,2.81,42,2.655,44,2.788,45,1.706,46,2.024,49,1.717,50,1.339,62,1.613,73,0.892,75,0.163,78,0.876,79,1.615,80,0.961,81,2.296,83,3.38,87,0.641,89,4.139,92,1.462,93,1.753,95,1.351,96,4.558,100,2.911,106,1.077,107,2.006,109,1.768,111,1.87,114,2.45,115,1.257,117,2.853,121,1.517,127,2.567,132,2.46,136,4.751,138,3.835,140,2.006,143,3.994,144,1.838,148,3.286,149,2.11,158,1.287,159,1.838,160,2.96,171,3.123,174,1.016,175,3.152,176,2.033,187,0.54,188,1.359,201,3.726,202,2.604,203,2.567,204,0.774,205,2.393,206,2.393,207,1.05,208,0.63,209,2.11,210,2.393,211,1.548,212,1.548,213,2.11,214,4.69,215,3.123,216,2.006,217,2.393,218,3.123,219,2.753,220,2.604,221,2.393,222,2.11,223,2.276,224,4.576,225,4.551,226,1.503,227,1.318,228,2.11,229,2.289,230,2.11,231,2.236,232,2.236,233,2.604,234,2.604,235,2.236,236,2.236,237,2.604,238,2.604,239,2.604,240,4.978,241,5.228,242,2.604,243,2.592,244,4.054,245,2.604,246,2.847,247,2.604,248,5.619,249,4.978,250,1.916,251,4.054,252,2.604,253,4.054,254,2.11,255,2.604,256,4.054,257,2.11,258,2.604,259,3.834,260,2.604,261,2.11,262,1.838,263,2.11,264,2.11,265,1.838,266,2.11,267,2.604,268,2.604,269,2.604,270,4.054,271,1.257,272,2.604,273,4.054,274,2.604,275,2.604,276,2.604,277,2.604,278,4.576,279,3.835,280,0.876,281,1.038,282,2.604,283,2.604,284,2.604,285,4.054,286,2.604,287,4.054,288,2.604,289,2.604,290,2.604,291,2.604,292,2.393,293,3.286,294,2.604,295,2.604,296,2.604,297,2.604,298,2.604,299,2.604,300,2.604,301,2.604,302,4.054,303,2.604,304,2.604,305,2.604,306,4.978,307,2.604,308,4.054,309,2.604,310,1.351,311,2.604,312,2.604,313,2.604,314,2.604,315,2.604,316,2.604,317,2.604,318,2.604,319,2.604,320,2.604,321,2.604,322,2.46,323,2.604,324,2.604,325,4.978,326,2.006,327,2.604,328,2.604,329,4.054,330,2.604,331,2.604,332,2.393,333,2.393,334,4.054,335,2.604,336,2.604,337,2.604,338,2.393,339,2.393,340,1.916,341,2.604,342,2.604,343,2.236,344,2.393,345,2.604,346,2.604,347,2.604,348,4.054,349,4.054,350,4.054,351,4.054,352,2.604,353,2.604,354,1.201,355,2.604,356,2.393,357,2.604,358,3.407,359,2.393,360,4.054,361,2.604,362,1.201,363,1.351,364,2.393,365,2.604,366,2.604,367,4.054,368,2.604,369,4.054,370,2.006,371,3.326,372,4.751,373,2.604,374,2.604,375,2.604,376,2.11,377,1.768,378,2.604,379,2.604,380,2.393,381,1.201,382,2.11,383,2.567,384,1.649,385,2.604,386,2.157,387,1.838,388,2.604,389,1.838,390,2.604,391,2.604,392,1.838]],["title/injectables/SortByPipe.html",[207,1.116,884,2.563]],["body/injectables/SortByPipe.html",[3,0.063,4,0.048,5,0.055,7,0.093,9,0.802,14,0.383,15,0.284,16,0.007,19,0.101,32,0.004,33,0.005,34,0.004,35,0.438,53,0.225,64,1.939,75,0.148,87,1.543,98,1.345,105,1.824,106,0.826,121,1.471,179,2.753,183,1.624,186,1.633,187,0.99,188,1.8,207,1.927,208,1.154,271,2.302,310,2.474,358,3.545,426,2.753,555,1.695,786,3.425,839,1.664,843,3.123,849,3.253,860,3.238,881,1.828,884,4.424,885,3.728,886,3.728,891,4.561,932,2.187,933,2.228,934,3.728,974,2.106,1099,1.978,1306,3.509,1642,6.43,1756,3.865,1761,4.095,1762,6.389,1763,3.865,1764,4.095,1765,4.095,1766,6.389,1767,4.095,1768,4.095,1769,4.944,1770,6.015,1771,4.095,1772,5.384,1773,5.384,1774,5.384,1775,4.095,1776,4.095,1777,5.384,1778,4.095,1779,4.095,1780,4.095,1781,5.384,1782,4.095,1783,4.095,1784,4.095,1785,4.095,1786,5.384,1787,4.095,1788,4.095,1789,4.095,2361,5.355,2362,5.355,2363,5.355]],["title/classes/SuggestCastcleIdReponse.html",[35,0.269,589,2.355]],["body/classes/SuggestCastcleIdReponse.html",[3,0.068,4,0.052,5,0.06,7,0.101,8,0.836,14,0.399,15,0.197,16,0.007,19,0.113,24,1.681,25,1.228,26,2.448,32,0.004,33,0.005,34,0.004,35,0.542,37,0.853,44,3.146,51,0.778,53,0.244,60,1,75,0.109,100,2.233,174,1.617,243,2.382,246,2.916,362,2.382,363,2.679,371,3.262,386,2.748,417,2.821,437,2.821,447,2.821,462,2.821,584,1.228,585,2.821,586,2.821,587,2.821,588,2.821,589,3.607,590,2.821,591,2.821,592,2.821,619,1.432,720,2.899,878,2.298,996,2.899,1310,2.982,1313,3.706,1314,2.982,1315,4.085,2364,5.799]],["title/interfaces/TokenHeader.html",[0,0.991,1823,3.962]],["body/interfaces/TokenHeader.html",[0,1.476,2,2.776,3,0.084,4,0.064,5,0.074,7,0.126,8,0.956,14,0.375,15,0.245,16,0.007,19,0.099,32,0.005,33,0.006,34,0.005,35,0.401,42,4.206,45,4.206,50,2.493,60,1.244,219,4.36,250,4.725,1809,5.204,1810,5.204,1818,6.422,1823,6.936,1824,8.271]],["title/injectables/TokenInterceptor.html",[207,1.116,567,3.494]],["body/injectables/TokenInterceptor.html",[0,1.336,3,0.076,4,0.058,5,0.067,7,0.114,9,0.977,14,0.263,15,0.222,16,0.007,19,0.093,23,1.462,32,0.004,33,0.005,34,0.004,35,0.363,53,0.274,69,2.46,75,0.17,106,0.936,121,1.106,130,3.459,160,3.455,183,1.841,186,1.99,187,1.206,188,1.406,207,1.841,208,1.406,423,4.826,454,4.276,483,3.945,566,5.432,567,5.76,974,2.566,1115,3.679,1528,4.826,1529,4.225,1530,4.756,1531,4.756,1536,4.101,1551,3.945,1558,3.562,1879,5.475,1883,4.989,1884,4.989,1988,5.811,2365,5.811,2366,7.679,2367,5.341,2368,7.108]],["title/interfaces/TokenRequest.html",[0,0.991,454,3.172]],["body/interfaces/TokenRequest.html",[0,1.372,2,2.58,3,0.078,4,0.06,5,0.069,7,0.117,8,0.915,14,0.352,15,0.228,16,0.007,19,0.095,23,1.479,32,0.004,33,0.005,34,0.004,35,0.373,75,0.171,106,0.952,121,1.136,130,3.123,160,4.8,207,1.871,208,1.444,423,5.275,454,5.316,483,4.053,566,4.905,567,4.837,1529,3.548,1530,4.295,1531,4.295,1536,4.212,1551,4.053,1558,3.659,1879,5.564,1883,5.125,1884,5.125,2365,5.968,2366,7.224,2367,5.486,2368,7.224]],["title/classes/TokenResponse.html",[35,0.269,585,2.355]],["body/classes/TokenResponse.html",[3,0.067,4,0.051,5,0.059,7,0.099,8,0.828,14,0.4,15,0.25,16,0.007,19,0.113,24,1.664,25,1.21,26,2.43,32,0.004,33,0.005,34,0.004,35,0.541,37,0.84,44,3.123,51,0.985,53,0.308,60,0.985,75,0.108,100,2.198,174,1.474,243,3.332,246,3.367,362,2.345,363,2.638,371,3.23,386,2.706,417,2.778,437,2.778,447,2.778,462,2.778,584,1.21,585,3.571,586,2.778,587,2.778,588,2.778,589,2.778,590,2.778,591,2.778,592,2.778,619,1.41,720,2.854,878,2.299,996,2.854,1310,2.936,1313,3.669,1314,2.936,1315,3.669,2369,5.71,2370,5.71]],["title/classes/UpdatePageDto.html",[35,0.269,1805,2.489]],["body/classes/UpdatePageDto.html",[3,0.061,4,0.046,5,0.054,7,0.091,8,0.78,9,1.324,11,1.182,14,0.402,15,0.264,16,0.007,19,0.107,24,1.76,25,1.822,26,1.561,27,2.34,32,0.003,33,0.005,34,0.003,35,0.525,37,0.767,51,1.041,53,0.326,60,1.193,75,0.131,105,1.067,123,2.243,174,1.41,195,2.408,196,2.408,280,2.325,584,1.104,868,2.408,878,2.319,882,2.47,883,3.043,928,2.486,949,2.47,1046,1.745,1047,1.619,1056,1.68,1060,2.466,1076,1.561,1090,1.561,1091,1.59,1567,3.195,1675,2.24,1793,3.776,1794,2.938,1796,4.237,1797,2.535,1798,2.47,1799,2.535,1800,3.277,1801,3.457,1802,3.457,1803,2.47,1804,3.585,1805,3.556,1806,2.68,1807,2.408,2371,5.212,2372,5.212,2373,5.212]],["title/classes/UpdateUserDto.html",[35,0.269,868,2.236]],["body/classes/UpdateUserDto.html",[3,0.06,4,0.046,5,0.053,7,0.089,8,0.771,9,1.367,11,1.162,14,0.401,15,0.279,16,0.007,19,0.107,24,1.745,25,1.63,26,1.535,27,2.173,32,0.003,33,0.005,34,0.003,35,0.524,37,0.754,51,1.102,53,0.345,60,1.18,75,0.129,105,1.049,123,2.224,174,1.398,195,2.368,196,2.368,280,2.46,584,1.086,868,3.159,878,2.319,882,2.429,883,3.009,928,2.472,949,2.429,1046,1.716,1047,1.592,1056,1.652,1060,2.29,1076,1.535,1090,1.535,1091,1.563,1567,3.794,1675,2.203,1793,3.744,1794,2.89,1796,4.483,1797,2.493,1798,2.429,1799,2.493,1800,3.891,1801,4.105,1802,4.105,1803,2.429,1804,3.556,1805,2.635,1806,2.635,1807,2.368,2374,5.125,2375,5.125,2376,5.125,2377,5.125]],["title/classes/Uploader.html",[35,0.269,2169,3.702]],["body/classes/Uploader.html",[3,0.065,4,0.05,5,0.057,7,0.097,8,0.816,9,0.837,14,0.386,15,0.299,16,0.007,19,0.085,32,0.004,33,0.005,34,0.004,35,0.311,37,0.822,53,0.37,60,0.964,75,0.137,87,1.225,105,1.144,106,0.997,111,2.296,114,1.705,121,0.947,176,1.883,186,1.705,187,1.033,227,2.519,229,2.946,421,3.722,574,2.519,575,2.519,576,2.794,614,2.794,617,4.274,621,4.575,622,3.834,653,4.575,753,3.663,849,2.582,850,2.874,1073,2.675,1206,4.575,1260,4.575,1564,3.663,1568,4.575,1569,4.034,1654,5.827,2111,5.796,2158,4.978,2164,4.966,2166,6.495,2167,5.926,2168,4.575,2169,5.536,2378,4.978,2379,9.014,2380,8.799,2381,8.03,2382,5.589,2383,7.24,2384,7.24,2385,8.03,2386,5.589,2387,7.24,2388,8.03,2389,5.589,2390,5.589,2391,5.589,2392,5.589,2393,7.24,2394,5.589,2395,5.589,2396,5.589,2397,7.24,2398,7.24,2399,7.24,2400,7.24,2401,7.24,2402,5.589]],["title/classes/Url.html",[35,0.269,1058,1.753]],["body/classes/Url.html",[3,0.051,4,0.063,5,0.045,7,0.075,8,0.687,11,1.735,14,0.386,15,0.307,16,0.007,19,0.109,23,0.735,24,0.983,25,0.918,27,1.147,32,0.003,33,0.004,34,0.003,35,0.537,37,0.637,48,1.209,51,0.582,53,0.182,60,1.391,75,0.133,98,1.089,105,1.444,106,0.509,123,1.252,174,1.39,187,1.127,204,1.147,280,2.415,584,0.918,619,1.741,777,1.147,839,1.894,842,1.634,845,2.514,846,1.601,878,2.313,880,2.77,881,1.479,890,1.601,924,2.207,928,2.038,932,1.346,933,1.371,1044,2.827,1045,1.82,1046,1.451,1047,1.346,1053,2.715,1056,1.965,1057,2.347,1058,3.228,1059,2.561,1060,1.209,1061,3.387,1062,2.715,1063,3.466,1064,2.561,1065,2.715,1066,2.397,1067,2.397,1068,2.45,1069,2.397,1070,2.553,1071,1.669,1072,2.45,1073,1.601,1074,1.78,1075,3.214,1076,2.112,1077,2.45,1078,1.82,1079,2.834,1080,2.164,1081,2.504,1082,2.946,1083,2.62,1084,2.62,1085,1.78,1086,1.863,1087,1.741,1088,1.741,1089,1.863,1090,1.298,1091,1.322,1092,2.561,1093,1.634,1094,2.897,1095,2.962,1096,2.361,1097,2.397,1098,2.504,1099,1.601,1100,1.569,2403,4.334]],["title/classes/User.html",[35,0.269,93,1.864]],["body/classes/User.html",[0,1.206,3,0.037,4,0.028,5,0.033,7,0.055,8,0.547,9,1.258,11,0.72,14,0.375,15,0.314,16,0.007,19,0.094,23,1.118,24,1.495,25,1.504,27,1.558,32,0.004,33,0.003,34,0.002,35,0.177,36,2.247,37,0.467,39,2.608,46,1.757,47,2.136,48,1.354,49,1.83,50,1.428,51,1.146,52,3.024,53,0.364,56,2.136,60,0.837,61,3.046,62,2.214,65,2.039,69,2.486,70,1.432,71,1.432,72,1.432,73,1.481,74,1.432,75,0.152,76,1.595,77,1.128,78,0.952,79,1.702,80,1.595,81,1.994,82,1.106,93,3.169,95,1.468,96,1.682,98,0.798,101,1.128,102,1.94,105,1.35,106,1.016,111,2.419,114,1.797,115,3.052,117,2.605,121,1.118,123,1.403,128,1.588,130,1.869,132,1.398,143,2.361,150,1.791,151,2.188,158,1.398,163,1.546,195,1.468,196,1.468,211,4.358,212,1.682,225,3.702,271,2.086,310,3.046,322,2.136,340,3.859,377,2.935,381,1.305,383,1.791,387,3.051,389,3.051,392,3.051,522,1.15,555,1.006,688,2.082,777,0.841,845,1.595,883,2.591,916,3.051,932,1.508,940,4.706,949,1.506,1047,2.048,1053,1.869,1058,1.15,1060,1.643,1076,1.454,1090,0.952,1091,0.969,1215,2.18,1305,4.04,1431,1.921,1567,2.242,1675,1.366,1676,2.18,1705,2.18,1752,1.997,1793,1.546,1797,1.546,1798,1.506,1799,1.546,1800,2.3,1801,1.588,1802,1.588,1803,1.506,1804,2.721,1807,1.468,1906,3.503,1907,2.293,1921,1.997,2068,3.503,2069,2.18,2070,2.43,2071,2.43,2072,2.43,2076,2.43,2078,2.082,2079,2.43,2080,3.503,2081,4.251,2082,2.43,2083,2.18,2084,2.43,2085,2.43,2086,2.43,2087,2.18,2088,2.43,2089,4.251,2090,4.251,2091,4.504,2092,2.43,2093,2.18,2094,2.43,2095,2.43,2096,4.504,2097,5.956,2098,5.042,2099,2.43,2100,2.43,2101,2.43,2102,2.43,2103,2.43,2104,2.43,2105,3.712,2106,2.43,2107,2.43,2108,3.712,2109,3.712,2110,2.43,2111,2.293,2112,3.712,2113,2.43,2114,3.712,2115,2.43,2116,2.43,2117,3.712,2118,2.43,2119,2.43,2120,2.43,2121,2.43,2122,2.43,2123,2.43,2124,2.43,2125,2.43,2126,2.43,2127,2.43,2128,2.43,2129,2.43,2130,4.504,2131,2.293,2132,2.293,2133,2.293,2134,2.43,2135,3.712,2136,5.042,2137,3.712,2138,2.43,2139,3.712,2140,3.712,2141,3.712,2142,4.504,2143,2.18,2144,2.43,2145,2.43,2146,2.43,2147,2.43,2148,2.43,2149,3.712,2150,3.712,2151,3.712,2152,2.43,2153,2.43,2154,2.43,2155,2.43,2404,3.177,2405,3.177,2406,3.177,2407,3.177,2408,3.177,2409,3.177,2410,3.177,2411,3.177]],["title/classes/UserImage.html",[35,0.269,1796,2.643]],["body/classes/UserImage.html",[3,0.062,4,0.047,5,0.055,7,0.093,8,0.792,11,1.209,14,0.402,15,0.239,16,0.007,19,0.108,24,1.78,25,1.663,26,1.597,27,2.355,32,0.004,33,0.005,34,0.004,35,0.527,37,0.784,51,0.942,53,0.295,60,1.211,75,0.133,105,1.092,123,2.268,174,1.426,195,2.463,196,2.463,280,2.351,584,1.129,868,2.463,878,2.32,882,2.527,883,3.089,928,2.505,949,2.527,1046,1.785,1047,1.656,1056,1.719,1060,2.482,1076,1.597,1090,1.597,1091,1.626,1567,3.243,1675,2.292,1793,3.818,1794,3.006,1796,4.554,1797,2.594,1798,2.527,1799,2.594,1800,3.327,1801,3.509,1802,3.509,1803,2.527,1804,3.626,1805,2.741,1806,2.741,1807,2.463,2412,5.332,2413,5.332]],["title/interfaces/UserModel.html",[0,0.991,2093,3.32]],["body/interfaces/UserModel.html",[0,1.294,2,1.374,3,0.042,4,0.032,5,0.037,7,0.062,9,0.535,11,0.809,14,0.374,15,0.266,16,0.007,19,0.097,23,1.071,24,1.432,25,1.338,27,1.672,32,0.004,33,0.004,34,0.002,35,0.199,36,1.999,39,1.774,52,2.901,53,0.15,60,0.616,62,2.127,65,1.499,73,1.089,75,0.157,76,1.741,77,1.267,78,1.069,79,1.826,80,1.741,81,2.176,82,1.242,93,3.379,95,1.649,96,1.89,98,0.897,101,1.267,102,2.057,105,1.085,106,1.042,111,2.595,114,1.927,115,3.21,117,2.69,121,1.185,123,1.531,128,1.784,130,2.04,132,1.571,143,2.577,151,1.609,158,1.571,163,1.736,183,1.222,186,1.089,187,0.66,188,0.769,195,1.649,196,1.649,211,4.646,212,1.89,225,2.243,271,2.277,310,3.23,322,2.331,340,2.339,377,2.158,381,1.466,383,2.012,387,3.33,389,3.33,392,3.33,522,1.292,555,1.13,688,2.339,777,0.945,845,1.741,883,3.076,916,3.33,932,1.646,940,4.918,949,1.691,1047,1.646,1053,2.04,1058,1.292,1060,1.762,1076,1.587,1090,1.069,1091,1.089,1215,2.449,1305,4.334,1431,2.158,1567,2.448,1675,1.534,1676,2.449,1705,2.449,1752,2.243,1793,1.736,1797,1.736,1798,1.691,1799,1.736,1800,2.511,1801,1.784,1802,1.784,1803,1.691,1804,2.919,1807,1.649,1906,3.824,1907,2.576,1921,2.243,2068,3.824,2069,2.449,2070,2.73,2071,2.73,2072,2.73,2076,2.73,2078,2.339,2079,2.73,2080,3.824,2081,3.824,2082,2.73,2083,2.449,2084,2.73,2085,2.73,2086,2.73,2087,2.449,2088,2.73,2089,2.576,2090,2.576,2091,2.73,2092,2.73,2093,3.634,2094,4.052,2095,2.73,2096,4.831,2097,6.194,2098,5.346,2099,2.73,2100,2.73,2101,2.73,2102,2.73,2103,2.73,2104,2.73,2105,4.052,2106,2.73,2107,2.73,2108,4.052,2109,4.052,2110,2.73,2111,2.576,2112,4.052,2113,2.73,2114,4.052,2115,2.73,2116,2.73,2117,4.052,2118,2.73,2119,2.73,2120,2.73,2121,2.73,2122,2.73,2123,2.73,2124,2.73,2125,2.73,2126,2.73,2127,2.73,2128,2.73,2129,2.73,2130,4.831,2131,2.576,2132,2.576,2133,2.576,2134,2.73,2135,4.052,2136,5.346,2137,4.052,2138,2.73,2139,4.052,2140,4.052,2141,4.052,2142,4.831,2143,2.449,2144,2.73,2145,2.73,2146,2.73,2147,2.73,2148,2.73,2149,4.052,2150,4.052,2151,4.052,2152,2.73,2153,2.73,2154,2.73,2155,2.73,2414,5.298,2415,3.569]],["title/interfaces/UserProfile.html",[0,0.991,2081,3.494]],["body/interfaces/UserProfile.html",[0,1.247,2,1.293,3,0.039,4,0.03,5,0.035,7,0.059,8,0.571,9,1.381,11,0.762,14,0.387,15,0.314,16,0.007,19,0.096,23,1.033,24,1.381,25,1.291,27,1.612,32,0.004,33,0.003,34,0.002,35,0.187,36,1.928,39,1.695,52,2.854,60,0.579,62,2.089,64,2.456,65,1.411,73,1.025,75,0.154,76,1.663,77,1.192,78,1.006,79,1.761,80,1.663,81,2.08,82,1.169,93,3.146,95,1.552,96,1.778,98,0.844,101,1.192,102,1.996,105,1.037,106,1.029,111,2.503,114,1.859,115,3.128,117,2.646,121,1.15,123,1.463,128,1.679,130,1.949,132,1.478,143,2.463,151,1.514,158,1.478,163,1.634,195,1.552,196,1.552,211,4.427,212,1.778,225,2.111,271,2.176,310,3.134,322,2.228,340,2.201,377,2.031,381,1.38,383,1.894,387,3.182,389,3.182,392,3.182,522,2.456,555,1.063,688,2.201,777,0.889,845,1.663,883,2.681,916,3.182,932,1.573,940,4.808,949,1.592,1047,1.573,1053,1.949,1058,1.216,1060,1.699,1076,1.517,1090,1.006,1091,1.025,1215,2.304,1305,4.18,1431,2.031,1567,3.362,1675,1.444,1676,2.304,1705,2.304,1752,2.111,1793,1.634,1797,1.634,1798,1.592,1799,1.634,1800,3.449,1801,1.679,1802,1.679,1803,1.592,1804,2.815,1807,1.552,1906,3.654,1907,2.424,1921,2.111,2068,3.654,2069,2.304,2070,2.569,2071,2.569,2072,2.569,2076,2.569,2078,2.201,2079,2.569,2080,4.896,2081,4.397,2082,5.187,2083,4.653,2084,5.187,2085,5.187,2086,5.187,2087,2.304,2088,5.187,2089,2.424,2090,2.424,2091,2.569,2092,2.569,2093,2.304,2094,2.569,2095,2.569,2096,4.659,2097,6.071,2098,5.187,2099,2.569,2100,2.569,2101,2.569,2102,2.569,2103,2.569,2104,2.569,2105,3.872,2106,2.569,2107,2.569,2108,3.872,2109,3.872,2110,2.569,2111,2.424,2112,3.872,2113,2.569,2114,3.872,2115,2.569,2116,2.569,2117,3.872,2118,2.569,2119,2.569,2120,2.569,2121,2.569,2122,2.569,2123,2.569,2124,2.569,2125,2.569,2126,2.569,2127,2.569,2128,2.569,2129,2.569,2130,4.659,2131,2.424,2132,2.424,2133,2.424,2134,2.569,2135,3.872,2136,5.187,2137,3.872,2138,2.569,2139,3.872,2140,3.872,2141,3.872,2142,4.659,2143,2.304,2144,2.569,2145,2.569,2146,2.569,2147,2.569,2148,2.569,2149,3.872,2150,3.872,2151,3.872,2152,2.569,2153,2.569,2154,2.569,2155,2.569]],["title/classes/UserResponseDto.html",[35,0.269,883,2.13]],["body/classes/UserResponseDto.html",[3,0.055,4,0.042,5,0.048,7,0.082,8,0.726,9,0.964,11,1.667,14,0.4,15,0.315,16,0.007,19,0.105,24,1.881,25,1.557,26,2.202,27,2.094,32,0.003,33,0.004,34,0.003,35,0.516,37,0.689,51,1.244,53,0.389,60,1.365,75,0.121,105,0.959,123,2.397,174,1.335,195,2.164,196,2.164,280,2.37,584,0.992,868,2.164,878,2.317,882,2.22,883,3.234,928,2.397,949,3.483,1046,2.461,1047,2.284,1056,1.51,1060,2.207,1076,1.403,1090,1.403,1091,1.429,1567,3.656,1675,2.013,1793,4.035,1794,2.641,1796,4.32,1797,2.279,1798,2.22,1799,2.279,1800,3.75,1801,3.956,1802,3.956,1803,3.483,1804,3.396,1805,2.409,1806,2.409,1807,2.164,2416,4.684,2417,4.684,2418,4.684,2419,4.684,2420,4.684,2421,4.684,2422,4.684,2423,4.684,2424,4.684,2425,4.684,2426,4.684]],["title/injectables/UserService.html",[207,1.116,802,2.729]],["body/injectables/UserService.html",[3,0.025,4,0.019,5,0.022,7,0.037,8,0.398,9,0.319,11,1.025,14,0.143,15,0.259,16,0.007,19,0.025,25,0.452,27,0.564,32,0.001,33,0.002,34,0.001,35,0.119,36,1.117,46,1.636,49,2.367,51,0.705,53,0.356,60,0.609,62,0.902,73,0.65,75,0.152,78,0.639,79,1.306,81,2.963,89,2.393,93,3.594,95,0.985,96,1.129,106,1.061,111,2.392,114,2.121,117,2.835,121,1.346,123,1.02,127,3.284,132,2.925,143,3.791,158,0.938,176,0.554,186,2.028,187,1.228,188,1.352,195,0.985,196,0.985,207,0.814,208,0.459,209,1.538,211,4.487,212,1.129,213,1.538,225,1.34,227,1.591,228,2.548,229,2.609,230,3.793,231,2.7,232,4.454,235,2.7,236,4.454,241,2.7,259,1.869,271,3.195,279,2.422,281,1.865,322,1.553,326,2.422,339,5.692,340,3.444,343,3.456,344,3.699,358,3.351,376,5.731,381,1.45,383,1.99,384,3.92,521,1.331,530,1.331,555,2.201,604,0.961,609,1.99,617,1.63,621,1.745,622,1.462,653,1.745,690,3.793,741,2.219,777,1.541,802,1.99,808,3.262,815,3.456,845,2.284,849,3.668,850,4.083,868,2.428,872,2.314,873,3.747,882,1.01,891,3.427,924,1.903,928,1.921,933,1.43,940,4.37,974,0.838,1016,3.793,1057,2.242,1060,0.594,1306,2.962,1388,2.702,1403,1.34,1406,3.444,1451,2.7,1512,2.7,1516,4.767,1567,0.985,1587,2.89,1591,4.019,1627,1.745,1632,1.898,1648,6.193,1661,4.025,1670,1.898,1671,1.745,1673,3.144,1674,1.898,1675,2.698,1676,1.462,1688,3.144,1698,3.144,1699,2.89,1700,3.144,1713,3.144,1723,5.59,1724,3.144,1734,3.144,1735,3.144,1741,1.898,1746,3.144,1747,3.144,1748,1.898,1751,4.68,1752,4.533,1763,3.793,1797,1.037,1798,1.01,1799,1.718,1909,1.898,2078,1.397,2087,1.462,2089,1.538,2090,2.548,2093,3.995,2143,2.422,2217,3.699,2278,4.302,2338,3.144,2427,2.131,2428,5.824,2429,4.519,2430,4.519,2431,5.824,2432,4.519,2433,5.255,2434,4.519,2435,4.519,2436,4.519,2437,4.519,2438,4.519,2439,2.131,2440,2.131,2441,2.131,2442,3.53,2443,2.131,2444,2.131,2445,2.131,2446,2.131,2447,2.131,2448,4.68,2449,3.144,2450,3.53,2451,2.131,2452,2.131,2453,2.131,2454,5.255,2455,2.131,2456,6.277,2457,2.131,2458,2.131,2459,2.131,2460,2.131,2461,2.131,2462,2.131,2463,2.131,2464,2.131,2465,2.131,2466,2.131,2467,3.53,2468,2.131,2469,3.53,2470,2.131,2471,2.131,2472,3.53,2473,2.131,2474,2.131,2475,3.53,2476,2.131,2477,4.519,2478,3.53,2479,2.131,2480,3.53,2481,3.53,2482,2.131,2483,4.519,2484,2.131,2485,2.131,2486,2.131,2487,2.131,2488,2.131,2489,2.131,2490,2.131,2491,2.131,2492,2.131,2493,2.131,2494,2.131,2495,2.131,2496,2.131,2497,2.131,2498,2.131,2499,2.131,2500,2.131,2501,2.131,2502,2.131,2503,2.131,2504,5.255,2505,3.53,2506,5.255,2507,3.53,2508,3.53,2509,3.53,2510,3.53,2511,3.53,2512,3.53,2513,4.519,2514,3.53,2515,5.255,2516,3.53,2517,2.131,2518,2.131,2519,5.255,2520,2.131,2521,3.53,2522,4.519,2523,3.53,2524,2.131,2525,2.89,2526,3.53,2527,2.131,2528,3.53,2529,2.131,2530,2.131,2531,3.53,2532,3.53,2533,3.144,2534,3.53,2535,3.53,2536,3.53,2537,3.53,2538,2.131,2539,3.53,2540,2.131,2541,2.131,2542,3.53,2543,3.53,2544,5.255,2545,3.53,2546,3.144,2547,3.53,2548,2.131,2549,3.53,2550,2.131,2551,2.131,2552,3.53,2553,3.53,2554,3.53,2555,3.53,2556,3.53,2557,3.53,2558,3.53,2559,3.53,2560,3.53,2561,2.131,2562,2.131,2563,2.131,2564,2.131,2565,2.131,2566,2.131,2567,2.131,2568,2.131]],["title/modules/UtilsAwsModule.html",[957,2.489,2569,3.702]],["body/modules/UtilsAwsModule.html",[3,0.084,4,0.064,5,0.074,16,0.007,19,0.099,32,0.005,33,0.006,34,0.005,35,0.4,75,0.17,208,1.548,395,2.825,957,4.347,959,4.189,969,4.707,1096,3.008,1897,4.927,2164,5.799,2169,6.871,2569,6.465,2570,7.182,2571,7.182]],["title/modules/UtilsExceptionModule.html",[957,2.489,2572,3.962]],["body/modules/UtilsExceptionModule.html",[3,0.068,4,0.052,5,0.084,16,0.007,19,0.087,32,0.004,33,0.005,34,0.004,35,0.324,75,0.14,87,1.628,204,1.539,208,1.253,229,2.74,281,2.065,395,2.288,486,2.985,487,2.338,488,2.39,489,2.985,490,2.39,491,2.288,492,2.39,493,2.39,494,2.338,495,3.024,496,3.219,497,3.289,498,2.338,499,2.338,500,2.288,501,2.288,502,3.219,503,3.219,504,3.32,505,3.289,506,3.086,507,2.288,508,2.985,509,2.338,510,2.338,511,2.338,512,2.921,513,2.985,514,2.338,515,2.338,516,2.338,517,2.338,518,2.338,519,2.338,520,2.288,521,2.194,522,2.106,523,2.985,524,2.338,525,2.338,526,2.338,527,2.338,528,2.338,529,2.338,530,2.194,531,2.39,532,2.39,533,2.39,534,2.39,535,2.39,536,2.39,537,2.39,538,2.39,539,2.39,540,2.39,541,2.338,542,2.338,543,2.39,544,2.39,545,2.39,546,2.39,547,2.39,548,2.39,549,2.39,550,2.39,551,2.39,552,2.39,553,2.39,554,2.39,555,1.841,556,2.338,557,2.338,558,2.39,574,3.348,575,3.348,957,3.819,959,3.393,969,3.812,1897,3.991,2572,6.081,2573,5.817,2574,5.817,2575,5.817]],["title/modules/UtilsInterceptorsModule.html",[957,2.489,2576,3.702]],["body/modules/UtilsInterceptorsModule.html",[3,0.063,4,0.048,5,0.081,16,0.007,19,0.083,32,0.004,33,0.005,34,0.004,35,0.3,75,0.169,87,1.73,204,1.427,208,1.162,229,2.643,281,1.914,395,2.121,411,3.352,423,4.278,454,4.636,486,2.843,487,2.167,488,2.216,489,2.843,490,2.216,491,2.121,492,2.216,493,2.216,494,2.167,495,2.916,496,3.104,497,3.172,498,2.167,499,2.167,500,2.121,501,2.121,502,3.104,503,3.104,504,3.226,505,3.172,506,2.977,507,2.121,508,2.843,509,2.167,510,2.167,511,2.167,512,2.782,513,2.843,514,2.167,515,2.167,516,2.167,517,2.167,518,2.167,519,2.167,520,2.121,521,2.034,522,1.953,523,2.843,524,2.167,525,2.167,526,2.167,527,2.167,528,2.167,529,2.167,530,2.034,531,2.216,532,2.216,533,2.216,534,2.216,535,2.216,536,2.216,537,2.216,538,2.216,539,2.216,540,2.216,541,2.167,542,2.167,543,2.216,544,2.216,545,2.216,546,2.216,547,2.216,548,2.216,549,2.216,550,2.216,551,2.216,552,2.216,553,2.216,554,2.216,555,1.707,556,2.167,557,2.167,558,2.216,566,4.278,567,5.106,568,3.352,577,2.856,877,4.446,957,3.637,959,3.146,960,4.636,964,6.124,965,5.106,966,3.893,967,3.535,969,3.535,971,5.409,1493,4.852,1533,4.415,1880,4.415,1897,3.7,2367,4.415,2576,6.827,2577,5.394,2578,5.394,2579,5.394,2580,5.394,2581,5.394]],["title/modules/UtilsModule.html",[957,2.489,2582,3.962]],["body/modules/UtilsModule.html",[3,0.066,4,0.05,5,0.083,16,0.007,19,0.085,32,0.004,33,0.005,34,0.004,35,0.315,44,3.11,75,0.167,87,1.77,160,4.276,187,1.046,204,1.497,208,1.219,222,5.266,229,2.704,281,2.008,395,2.225,486,2.932,487,2.273,488,2.324,489,2.932,490,2.324,491,2.225,492,2.324,493,2.324,494,2.273,495,2.984,496,3.176,497,3.246,498,2.273,499,2.273,500,2.225,501,2.225,502,3.176,503,3.176,504,3.285,505,3.246,506,3.046,507,2.225,508,2.932,509,2.273,510,2.273,511,2.273,512,2.87,513,2.932,514,2.273,515,2.273,516,2.273,517,2.273,518,2.273,519,2.273,520,2.225,521,2.133,522,2.048,523,2.932,524,2.273,525,2.273,526,2.273,527,2.273,528,2.273,529,2.273,530,2.133,531,2.324,532,2.324,533,2.324,534,2.324,535,2.324,536,2.324,537,2.324,538,2.324,539,2.324,540,2.324,541,2.273,542,2.273,543,2.324,544,2.324,545,2.324,546,2.324,547,2.324,548,2.324,549,2.324,550,2.324,551,2.324,552,2.324,553,2.324,554,2.324,555,1.79,556,2.273,557,2.273,558,2.324,578,6.611,957,3.752,959,3.3,969,3.708,971,4.326,1897,3.881,2582,5.973,2583,5.657]],["title/modules/UtilsPipesModule.html",[957,2.489,2584,3.702]],["body/modules/UtilsPipesModule.html",[3,0.064,4,0.048,5,0.082,16,0.007,19,0.083,32,0.004,33,0.005,34,0.004,35,0.304,75,0.135,87,1.562,204,1.444,208,1.176,229,2.658,281,1.937,395,2.146,486,2.864,487,2.193,488,2.242,489,2.864,490,2.242,491,2.146,492,2.242,493,2.242,494,2.193,495,2.933,496,3.122,497,3.19,498,2.193,499,2.193,500,2.146,501,2.146,502,3.122,503,3.122,504,3.241,505,3.19,506,2.994,507,2.146,508,2.864,509,2.193,510,2.193,511,2.193,512,2.803,513,2.864,514,2.193,515,2.193,516,2.193,517,2.193,518,2.193,519,2.193,520,2.146,521,2.058,522,1.976,523,2.864,524,2.193,525,2.193,526,2.193,527,2.193,528,2.193,529,2.193,530,2.058,531,2.242,532,2.242,533,2.242,534,2.242,535,2.242,536,2.242,537,2.242,538,2.242,539,2.242,540,2.242,541,2.193,542,2.193,543,2.242,544,2.242,545,2.242,546,2.242,547,2.242,548,2.242,549,2.242,550,2.242,551,2.242,552,2.242,553,2.242,554,2.242,555,1.727,556,2.193,557,2.193,558,2.242,843,4.158,884,4.899,885,4.899,886,4.899,887,4.311,957,3.665,959,3.183,960,4.671,965,5.145,966,3.939,967,3.576,969,4.671,1897,3.744,2584,7.219,2585,4.86,2586,4.86,2587,5.457,2588,5.457,2589,5.457]],["title/classes/UxEngagement.html",[35,0.269,1917,3.702]],["body/classes/UxEngagement.html",[3,0.058,4,0.044,5,0.051,7,0.087,8,0.757,9,1.359,14,0.388,15,0.331,16,0.007,19,0.089,23,1.138,32,0.003,33,0.005,34,0.003,35,0.277,36,2.871,37,0.734,39,2.988,46,2.431,47,2.955,48,1.873,49,2.532,50,2.389,51,1.282,52,3.345,53,0.403,56,3.573,62,1.275,65,3.412,69,3.063,70,2.248,71,2.248,72,2.248,73,1.521,74,2.248,75,0.16,76,2.206,77,1.77,78,1.494,79,2.194,80,2.206,82,1.736,101,1.77,106,0.585,150,2.812,151,3.026,163,2.426,223,3.795,1136,5.479,1597,3.599,1912,4.442,1917,5.805,2590,4.442,2591,6.214,2592,6.214,2593,6.214,2594,6.214,2595,6.214,2596,6.214,2597,6.214,2598,6.214,2599,4.987,2600,4.987,2601,4.987,2602,4.987,2603,4.987,2604,4.987,2605,4.987,2606,4.987,2607,4.987,2608,4.987,2609,4.987,2610,4.082,2611,4.987]],["title/classes/UxEngagementBody.html",[35,0.269,782,3.494]],["body/classes/UxEngagementBody.html",[3,0.064,4,0.049,5,0.057,7,0.096,8,0.808,14,0.402,15,0.326,16,0.007,19,0.084,32,0.004,33,0.005,34,0.004,35,0.399,36,1.74,37,0.809,50,2.107,51,1.286,53,0.402,75,0.104,223,4.219,584,1.165,782,5.17,791,5.79,878,2.29,1136,6.092,2591,6.909,2592,6.909,2593,6.909,2594,6.909,2595,6.909,2596,6.909,2597,6.909,2598,6.909,2612,4.896,2613,7.095,2614,5.498,2615,5.498,2616,5.498,2617,5.498,2618,5.498,2619,5.498,2620,5.498,2621,5.498,2622,5.498,2623,5.498,2624,5.498,2625,5.498,2626,4.204,2627,4.896,2628,4.204]],["title/classes/UxEngagementDto.html",[35,0.269,2628,3.702]],["body/classes/UxEngagementDto.html",[3,0.069,4,0.052,5,0.06,7,0.102,8,0.844,14,0.402,15,0.327,16,0.007,19,0.087,32,0.004,33,0.005,34,0.004,35,0.416,36,2.603,37,0.865,50,2.42,53,0.404,75,0.111,223,4.328,584,1.246,782,4.245,791,5.132,878,2.241,1136,6.249,2591,7.087,2592,7.087,2593,7.087,2594,7.087,2595,7.087,2596,7.087,2597,7.087,2598,7.087,2612,5.239,2613,5.239,2626,4.498,2627,5.239,2628,5.721,2629,5.882,2630,5.882,2631,5.882,2632,5.882,2633,5.882,2634,5.882,2635,5.882,2636,5.882,2637,5.882,2638,5.882,2639,5.882]],["title/injectables/UxEngagementService.html",[207,1.116,787,3.494]],["body/injectables/UxEngagementService.html",[3,0.105,4,0.05,5,0.058,7,0.098,8,0.817,9,1.085,15,0.289,16,0.007,19,0.065,32,0.004,33,0.005,34,0.004,35,0.311,36,1.772,50,2.132,51,0.972,53,0.357,75,0.173,78,1.677,79,2.322,80,2.381,81,3.862,96,2.964,106,0.85,114,2.451,117,1.772,121,1.362,158,2.463,176,1.885,183,1.671,186,2.211,187,1.339,188,1.561,207,1.671,208,1.206,209,4.04,227,3.266,228,5.23,229,3.02,230,6.134,354,2.299,358,2.523,779,7.569,782,6.353,787,5.23,974,2.201,1136,5.8,1242,7.569,1557,4.555,1627,4.582,1699,5.932,1913,4.985,1917,5.542,2610,5.932,2626,5.542,2628,5.542,2640,5.598,2641,8.803,2642,5.598,2643,7.247,2644,5.598,2645,7.247,2646,7.247,2647,7.247,2648,5.598,2649,7.247,2650,5.598,2651,5.598,2652,5.598,2653,5.598,2654,5.598,2655,7.247,2656,5.598]],["title/classes/VerificationPasswordBody.html",[35,0.269,590,2.355]],["body/classes/VerificationPasswordBody.html",[3,0.068,4,0.052,5,0.06,7,0.101,8,0.836,14,0.399,15,0.197,16,0.007,19,0.113,24,1.681,25,1.228,26,2.448,32,0.004,33,0.005,34,0.004,35,0.542,37,0.853,44,3.427,51,0.778,53,0.244,60,1,75,0.109,100,2.233,174,1.485,243,2.382,246,2.916,362,2.382,363,2.679,371,3.262,386,2.748,417,2.821,437,2.821,447,2.821,462,2.821,584,1.228,585,2.821,586,2.821,587,2.821,588,2.821,589,2.821,590,3.607,591,2.821,592,2.821,619,1.432,720,2.899,878,2.298,996,2.899,1310,2.982,1313,3.706,1314,2.982,1315,3.706,2657,5.799]],["title/classes/VerificationPasswordResponse.html",[35,0.269,591,2.355]],["body/classes/VerificationPasswordResponse.html",[3,0.067,4,0.051,5,0.059,7,0.099,8,0.828,14,0.4,15,0.25,16,0.007,19,0.113,24,1.664,25,1.21,26,2.43,32,0.004,33,0.005,34,0.004,35,0.541,37,0.84,44,3.123,51,0.985,53,0.308,60,0.985,75,0.108,100,2.198,174,1.474,243,2.345,246,2.887,362,2.345,363,2.638,371,3.768,386,2.706,417,2.778,437,2.778,447,2.778,462,2.778,584,1.21,585,2.778,586,2.778,587,2.778,588,2.778,589,2.778,590,2.778,591,3.571,592,2.778,619,1.41,720,4.055,878,2.299,996,2.854,1310,2.936,1313,3.669,1314,2.936,1315,3.669,2658,5.71,2659,5.71]],["title/dependencies.html",[960,3.811,2660,4.055]],["body/dependencies.html",[16,0.007,32,0.005,33,0.006,34,0.005,78,2.111,79,2.036,208,1.518,570,6.033,584,1.493,960,4.617,984,6.275,1027,6.275,1371,6.275,1536,4.429,2167,5.767,2168,5.767,2661,8.912,2662,7.046,2663,7.046,2664,7.046,2665,7.046,2666,7.046,2667,7.046,2668,7.046,2669,7.046,2670,7.046,2671,7.046,2672,7.046,2673,7.046,2674,7.046,2675,7.046,2676,7.046,2677,7.046,2678,7.046,2679,7.046,2680,7.046,2681,7.046]],["title/miscellaneous/enumerations.html",[2682,2.782,2683,5.179]],["body/miscellaneous/enumerations.html",[7,0.088,16,0.007,17,4.101,18,3.824,26,2.032,32,0.003,33,0.005,34,0.003,38,3.654,43,4.445,73,2.069,99,5.187,109,4.101,145,3.654,162,5.187,190,4.144,194,6.04,195,3.133,196,3.133,197,6.04,198,6.04,212,3.591,216,4.653,574,3.057,839,2.107,843,3.956,845,2.228,849,3.133,850,5.182,933,2.146,934,3.591,1045,2.126,1053,2.611,1080,2.407,1082,3.146,1094,2.786,1095,2.849,1096,2.271,1097,3.213,1146,4.144,1152,4.144,1153,4.144,1154,4.144,1155,4.144,1156,4.144,1157,4.144,1158,4.144,1159,4.144,1160,4.144,1161,4.144,1162,4.144,1163,4.144,1164,4.144,1165,4.144,1166,4.144,1167,4.144,1168,4.144,1169,4.144,1170,4.144,1171,4.144,1172,4.144,1173,4.144,1174,4.144,1175,4.144,1176,4.144,1177,4.144,1178,4.144,1179,4.144,1180,4.144,1181,4.144,1182,4.144,1183,4.144,1184,4.144,1185,4.144,1186,4.144,1187,4.144,1188,4.144,1189,4.144,1190,4.144,1191,4.144,1192,4.144,1193,4.144,1194,4.144,1195,4.144,1196,4.144,1197,4.144,1198,4.144,1199,4.144,1200,4.144,1201,4.144,1202,4.144,1203,4.144,1299,4.144,1307,5.552,1308,4.445,1309,5.187,1321,4.144,1325,6.04,1326,6.04,1400,4.895,1756,3.654,1928,4.144,2045,3.654,2069,3.473,2682,3.473,2683,4.508,2684,4.508,2685,4.508,2686,4.508,2687,5.062,2688,4.508,2689,5.062,2690,4.508,2691,5.062,2692,4.508,2693,5.062,2694,4.508]],["title/miscellaneous/functions.html",[2682,2.782,2695,5.179]],["body/miscellaneous/functions.html",[7,0.126,16,0.006,32,0.005,33,0.006,34,0.005,2682,4.956,2695,6.434,2696,10.071,2697,9.689,2698,7.224,2699,7.224,2700,7.224,2701,7.224,2702,7.224,2703,7.224,2704,7.224]],["title/index.html",[7,0.071,2705,3.319,2706,3.319]],["body/index.html",[4,0.055,13,3.866,16,0.006,21,3.72,32,0.003,33,0.004,34,0.003,87,1.776,93,2.734,160,3.76,223,4.399,229,1.47,381,1.803,439,4.489,491,1.727,495,1.622,496,1.727,500,1.727,501,1.727,502,2.419,503,1.727,504,2.734,507,2.419,512,1.727,520,3.186,521,3.055,522,1.59,541,1.764,617,3.357,620,3.593,664,5.479,742,3.91,924,2.786,967,2.877,997,5.479,1002,3.91,1030,6.632,1072,1.764,1073,2.624,1090,2.127,1096,1.47,1388,4.166,1411,5.035,1557,2.759,1667,3.91,1703,5.479,1803,2.08,2055,4.44,2083,3.012,2525,5.813,2705,3.593,2706,3.593,2707,4.39,2708,7.695,2709,7.101,2710,5.479,2711,7.101,2712,4.39,2713,6.151,2714,8.102,2715,7.101,2716,5.479,2717,4.39,2718,3.91,2719,4.39,2720,3.91,2721,7.101,2722,7.695,2723,4.39,2724,4.39,2725,6.324,2726,4.39,2727,6.151,2728,4.39,2729,6.151,2730,3.91,2731,4.39,2732,3.91,2733,4.39,2734,4.39,2735,4.39,2736,3.91,2737,3.91,2738,5.479,2739,3.91,2740,3.91,2741,4.39,2742,4.39,2743,4.39,2744,7.101,2745,3.91,2746,4.39,2747,3.91,2748,4.39,2749,3.91,2750,4.39,2751,3.91,2752,4.39,2753,3.91,2754,4.39,2755,4.39,2756,3.91,2757,4.39,2758,3.91,2759,8.294,2760,5.479,2761,4.39,2762,6.151,2763,4.39,2764,6.151,2765,6.151,2766,4.39,2767,4.39,2768,4.39,2769,7.101,2770,5.479,2771,6.151,2772,6.151,2773,4.39,2774,4.39,2775,4.39,2776,4.39,2777,4.39,2778,3.91,2779,4.39,2780,4.39,2781,4.39,2782,4.39,2783,4.39,2784,4.39,2785,4.39,2786,3.91,2787,6.324,2788,3.91,2789,4.39,2790,4.39,2791,4.39,2792,4.39,2793,4.39,2794,4.39,2795,3.91,2796,3.91,2797,6.151,2798,4.39,2799,4.39,2800,4.39,2801,4.39,2802,4.39,2803,3.91,2804,6.151,2805,4.39,2806,4.39,2807,3.91,2808,3.91,2809,5.479,2810,4.39,2811,4.39,2812,4.39,2813,6.151,2814,4.39,2815,4.39,2816,4.39,2817,4.39,2818,4.39,2819,4.39,2820,4.39,2821,4.39,2822,6.151,2823,6.853,2824,8.942,2825,4.39,2826,4.39,2827,4.39,2828,4.39,2829,4.39,2830,4.39,2831,4.39,2832,5.479,2833,3.91,2834,4.39,2835,6.324,2836,4.39,2837,4.39,2838,4.39,2839,4.39,2840,4.39,2841,4.39,2842,5.479,2843,5.479,2844,4.39,2845,5.479,2846,6.151,2847,3.91,2848,7.101,2849,4.39,2850,6.151,2851,4.39,2852,4.39,2853,4.39,2854,4.39,2855,6.324,2856,5.035,2857,4.39,2858,6.151,2859,8.102,2860,4.39,2861,4.39,2862,4.39,2863,4.39,2864,4.39,2865,4.39,2866,4.39,2867,8.102,2868,4.39,2869,4.39,2870,4.39,2871,3.91,2872,4.39,2873,4.39,2874,3.91,2875,4.39]],["title/license.html",[504,1.561,2705,3.319,2706,3.319]],["body/license.html",[0,0.951,2,1.033,4,0.078,5,0.02,16,0.001,20,0.782,32,0.002,33,0.001,34,0.001,35,0.06,44,0.417,50,0.319,53,0.046,65,3.074,75,0.02,80,0.882,81,0.445,93,2.527,102,0.969,105,0.401,121,0.184,130,0.417,176,1.297,183,0.25,229,2.682,279,0.743,280,0.587,281,0.696,332,3.119,370,0.743,376,1.415,377,1.991,380,0.887,382,2.376,383,1.856,421,0.557,439,2.222,486,3.194,487,1.531,489,1.531,491,2.581,494,2.331,495,3.103,496,2.64,497,3.05,498,0.788,499,2.419,500,3.387,501,3.172,502,2.695,503,2.952,504,3.657,505,3.323,506,1.752,507,1.295,508,1.531,509,0.435,510,0.435,511,0.435,512,1.961,513,2.498,514,0.788,515,1.323,516,0.788,517,0.788,518,2.234,519,1.323,520,1.295,521,1.605,522,0.392,523,3.082,524,1.079,525,1.079,526,1.866,527,1.531,528,3.793,530,0.409,542,0.435,555,1.042,556,2.571,557,2.004,570,1.415,604,0.488,609,0.611,630,0.965,663,0.965,677,2.39,689,0.965,690,0.782,722,0.782,731,1.746,732,2.39,741,4.599,752,1.746,753,1.285,755,0.965,777,1.008,796,2.75,803,2.053,808,1.937,846,0.724,924,0.392,967,0.71,1007,0.887,1030,4.748,1044,0.724,1067,0.426,1070,0.392,1073,0.4,1115,0.611,1118,0.965,1230,1.746,1304,0.887,1308,1.285,1367,0.965,1381,0.965,1388,0.557,1405,0.782,1412,3.119,1444,0.887,1512,2.518,1557,1.687,1569,1.415,1574,3.484,1654,0.743,1655,2.39,1659,1.746,1739,2.932,1757,0.965,1798,2.017,1803,1.56,1921,0.681,1947,0.965,2051,2.053,2053,0.829,2054,0.829,2055,3.072,2083,4.129,2087,0.743,2131,4.344,2132,1.937,2133,1.937,2448,4.137,2449,4.137,2525,4.55,2533,5.166,2546,0.965,2626,2.518,2710,1.746,2716,2.932,2718,0.965,2720,0.965,2725,0.965,2730,0.965,2732,5.166,2736,1.746,2737,1.746,2738,1.746,2739,2.39,2740,1.746,2745,0.965,2747,0.965,2749,2.39,2751,0.965,2753,0.965,2756,1.746,2758,2.39,2759,4.137,2760,2.932,2770,1.746,2778,2.39,2786,0.965,2787,4.71,2788,0.965,2795,4.441,2796,5.697,2803,0.965,2807,3.393,2808,5.844,2809,2.39,2823,2.39,2832,1.746,2833,0.965,2835,2.932,2842,0.965,2843,2.932,2845,5.166,2847,0.965,2855,1.746,2856,4.748,2871,2.932,2874,5.979,2876,1.083,2877,1.083,2878,2.684,2879,1.083,2880,3.81,2881,2.684,2882,2.684,2883,6.019,2884,1.083,2885,2.684,2886,1.083,2887,1.083,2888,1.96,2889,3.81,2890,4.645,2891,3.292,2892,1.96,2893,3.292,2894,4.986,2895,1.083,2896,1.083,2897,4.256,2898,1.083,2899,1.083,2900,1.083,2901,5.8,2902,8.581,2903,2.684,2904,1.083,2905,1.083,2906,3.292,2907,5.289,2908,1.083,2909,5.289,2910,1.96,2911,1.083,2912,3.81,2913,1.083,2914,3.292,2915,1.083,2916,1.083,2917,1.083,2918,5.558,2919,2.684,2920,5.8,2921,5.558,2922,1.083,2923,1.083,2924,1.083,2925,1.083,2926,1.083,2927,1.083,2928,1.083,2929,1.083,2930,1.083,2931,3.292,2932,6.019,2933,1.083,2934,1.083,2935,1.083,2936,2.684,2937,6.854,2938,1.083,2939,4.986,2940,1.083,2941,7.102,2942,2.684,2943,1.083,2944,1.083,2945,1.083,2946,4.256,2947,2.684,2948,2.684,2949,1.96,2950,1.083,2951,3.292,2952,1.083,2953,2.684,2954,1.083,2955,4.256,2956,1.96,2957,1.96,2958,2.684,2959,1.083,2960,6.217,2961,3.81,2962,3.81,2963,4.256,2964,1.083,2965,2.684,2966,7.102,2967,1.96,2968,6.019,2969,1.083,2970,1.083,2971,1.083,2972,2.684,2973,1.083,2974,1.083,2975,1.96,2976,4.256,2977,1.083,2978,1.96,2979,1.083,2980,5.558,2981,1.083,2982,3.292,2983,1.083,2984,1.96,2985,4.256,2986,8.547,2987,2.684,2988,5.289,2989,3.292,2990,1.96,2991,1.083,2992,1.96,2993,2.684,2994,5.289,2995,5.558,2996,3.292,2997,1.96,2998,3.292,2999,3.292,3000,1.083,3001,2.684,3002,7.746,3003,1.96,3004,1.083,3005,4.986,3006,1.083,3007,2.684,3008,4.256,3009,1.083,3010,6.562,3011,2.684,3012,1.96,3013,4.645,3014,4.256,3015,1.083,3016,1.96,3017,1.083,3018,4.645,3019,1.083,3020,1.96,3021,6.217,3022,1.083,3023,1.083,3024,1.96,3025,1.083,3026,1.083,3027,2.684,3028,1.083,3029,1.083,3030,1.083,3031,2.684,3032,3.292,3033,1.083,3034,1.083,3035,1.083,3036,1.96,3037,1.083,3038,1.083,3039,1.083,3040,3.81,3041,2.684,3042,2.684,3043,4.645,3044,1.083,3045,1.083,3046,3.81,3047,3.81,3048,1.083,3049,1.083,3050,1.96,3051,2.684,3052,1.083,3053,1.083,3054,3.292,3055,1.083,3056,1.083,3057,1.083,3058,1.96,3059,1.083,3060,7.817,3061,1.96,3062,4.986,3063,1.083,3064,4.256,3065,1.96,3066,1.083,3067,1.083,3068,1.96,3069,1.96,3070,1.083,3071,1.083,3072,1.083,3073,1.083,3074,1.96,3075,3.81,3076,1.083,3077,1.96,3078,1.083,3079,1.083,3080,3.81,3081,1.083,3082,3.292,3083,1.083,3084,5.558,3085,4.645,3086,3.292,3087,1.083,3088,1.083,3089,1.96,3090,1.083,3091,1.083,3092,1.96,3093,2.684,3094,1.083,3095,1.083,3096,2.684,3097,4.256,3098,1.083,3099,1.96,3100,1.083,3101,1.96,3102,1.96,3103,1.96,3104,1.083,3105,6.217,3106,1.083,3107,1.083,3108,1.083,3109,1.083,3110,1.083,3111,1.083,3112,2.684,3113,1.083,3114,1.083,3115,1.083,3116,1.083,3117,1.083,3118,3.81,3119,4.256,3120,1.083,3121,2.684,3122,1.083,3123,1.083,3124,3.292,3125,1.083,3126,1.083,3127,1.083,3128,1.083,3129,1.083,3130,1.083,3131,1.083,3132,1.96,3133,1.083,3134,2.684,3135,1.083,3136,1.96,3137,1.083,3138,1.083,3139,1.083,3140,1.083,3141,1.083,3142,1.96,3143,1.96,3144,1.96,3145,5.289,3146,1.083,3147,1.083,3148,1.083,3149,2.684,3150,3.292,3151,3.292,3152,2.684,3153,3.292,3154,2.684,3155,1.083,3156,3.81,3157,2.39,3158,1.083,3159,2.684,3160,1.083,3161,1.96,3162,1.96,3163,3.81,3164,1.96,3165,3.292,3166,1.083,3167,2.684,3168,3.81,3169,1.083,3170,1.083,3171,2.684,3172,2.684,3173,1.96,3174,1.083,3175,1.083,3176,1.083,3177,1.083,3178,2.684,3179,1.083,3180,1.083,3181,1.083,3182,1.083,3183,1.083,3184,1.96,3185,1.083,3186,1.083,3187,1.083,3188,2.684,3189,1.083,3190,1.083,3191,2.684,3192,1.96,3193,4.256,3194,7.318,3195,1.96,3196,1.96,3197,1.96,3198,1.96,3199,3.292,3200,1.96,3201,1.083,3202,1.083,3203,1.083,3204,1.083,3205,4.256,3206,1.96,3207,1.083,3208,1.083,3209,1.083,3210,1.083,3211,1.96,3212,1.083,3213,1.96,3214,1.083,3215,3.81,3216,1.083,3217,4.986,3218,1.083,3219,5.8,3220,1.96,3221,1.083,3222,1.083,3223,1.083,3224,1.083,3225,1.083,3226,1.96,3227,1.083,3228,2.684,3229,1.96,3230,3.292,3231,1.96,3232,1.083,3233,1.083,3234,1.96,3235,1.083,3236,1.083,3237,1.083,3238,1.96,3239,1.083,3240,1.083,3241,1.083,3242,3.292,3243,1.083,3244,1.96,3245,1.083,3246,1.96,3247,1.083,3248,1.083,3249,2.684,3250,1.083,3251,1.083,3252,1.083,3253,1.083,3254,1.083,3255,1.083,3256,1.083,3257,1.96,3258,1.083,3259,1.083,3260,1.083,3261,1.083,3262,1.083,3263,1.083,3264,1.083,3265,1.083,3266,3.81,3267,1.083,3268,1.083,3269,1.083,3270,3.292,3271,1.083,3272,1.083,3273,1.083,3274,1.083,3275,1.083,3276,1.083,3277,1.083,3278,1.083,3279,1.083,3280,2.684,3281,1.083,3282,3.292,3283,1.083,3284,1.083,3285,2.684,3286,1.083,3287,1.083,3288,2.684,3289,1.083,3290,1.96,3291,1.083,3292,1.083,3293,1.083,3294,1.083,3295,1.083,3296,1.083,3297,1.083,3298,1.083,3299,1.083,3300,1.083,3301,1.083,3302,1.96,3303,1.96,3304,1.083,3305,1.083,3306,3.292,3307,1.083,3308,1.083,3309,1.96,3310,2.684,3311,2.684,3312,1.083,3313,1.96,3314,1.083,3315,2.684,3316,4.645,3317,1.083,3318,1.96,3319,1.96,3320,1.083,3321,1.083,3322,1.083,3323,1.083,3324,1.083,3325,1.083,3326,1.083,3327,1.96,3328,1.083,3329,1.96,3330,3.292,3331,2.684,3332,1.083,3333,3.81,3334,1.083,3335,1.083,3336,1.083,3337,1.083,3338,1.083,3339,1.96,3340,1.96,3341,1.96,3342,2.684,3343,1.083,3344,1.96,3345,1.96,3346,1.083,3347,1.96,3348,2.684,3349,1.083,3350,1.96,3351,1.083,3352,1.96,3353,1.083,3354,1.083,3355,1.96,3356,7.505,3357,2.684,3358,1.083,3359,3.81,3360,5.558,3361,2.684,3362,1.083,3363,1.083,3364,1.083,3365,3.292,3366,1.083,3367,1.083,3368,2.684,3369,1.96,3370,1.083,3371,1.083,3372,1.083,3373,1.083,3374,1.083,3375,1.083,3376,1.083,3377,3.292,3378,1.083,3379,1.083,3380,2.684,3381,1.083,3382,1.96,3383,2.684,3384,1.083,3385,1.96,3386,1.083,3387,1.083,3388,1.083,3389,1.083,3390,1.96,3391,2.684,3392,1.083,3393,1.083,3394,1.96,3395,1.083,3396,1.96,3397,1.083,3398,1.083,3399,1.083,3400,1.083,3401,1.083,3402,2.684,3403,1.96,3404,1.083,3405,1.083,3406,3.292,3407,1.083,3408,2.684,3409,1.083,3410,1.083,3411,1.083,3412,1.96,3413,1.083,3414,1.083,3415,1.083,3416,2.684,3417,1.96,3418,1.96,3419,1.083,3420,1.96,3421,4.645,3422,1.96,3423,2.684,3424,3.292,3425,1.083,3426,1.083,3427,1.96,3428,1.083,3429,2.684,3430,1.083,3431,1.96,3432,1.083,3433,1.083,3434,1.083,3435,1.083,3436,2.684,3437,1.96,3438,1.083,3439,1.96,3440,1.083,3441,1.083,3442,1.083,3443,1.96,3444,1.96,3445,1.083,3446,1.96,3447,1.083,3448,1.083,3449,1.083,3450,1.083,3451,2.684,3452,1.083,3453,1.083,3454,1.083,3455,1.96,3456,3.292,3457,2.684,3458,1.083,3459,1.083,3460,1.083,3461,1.083,3462,1.083,3463,1.96,3464,1.083,3465,1.083,3466,1.083,3467,1.083,3468,1.083,3469,1.083,3470,1.083,3471,1.083,3472,1.083,3473,1.083,3474,1.083,3475,1.083,3476,1.083,3477,1.083,3478,1.083,3479,1.083,3480,1.96,3481,1.083,3482,1.083,3483,1.083,3484,1.083,3485,1.083,3486,1.083,3487,1.083,3488,1.083,3489,1.083,3490,1.083,3491,1.083,3492,1.083,3493,1.083,3494,1.96,3495,1.083,3496,1.083,3497,1.083,3498,1.083,3499,1.083,3500,1.083,3501,1.96,3502,1.083,3503,1.083,3504,1.083,3505,1.083,3506,1.083,3507,1.083,3508,1.083,3509,1.96,3510,1.96,3511,1.083,3512,1.083,3513,1.96,3514,1.083,3515,1.083,3516,1.083,3517,1.083,3518,1.083,3519,2.684,3520,1.96,3521,1.083,3522,1.96,3523,1.083,3524,1.083,3525,1.083,3526,1.083,3527,1.96,3528,1.083,3529,1.083,3530,1.083,3531,1.96,3532,1.083,3533,1.083,3534,2.684,3535,1.083,3536,1.083,3537,1.083,3538,1.083,3539,1.083,3540,1.083,3541,1.083,3542,1.083,3543,1.083,3544,1.083,3545,1.083,3546,1.083,3547,1.083,3548,1.083,3549,1.083,3550,1.083,3551,1.083,3552,1.083,3553,1.083,3554,1.083,3555,1.083,3556,1.083,3557,1.083,3558,1.083,3559,1.083,3560,1.083,3561,1.083,3562,1.083,3563,1.083,3564,1.083,3565,1.083,3566,1.96,3567,1.083,3568,1.083,3569,1.083,3570,1.083,3571,1.083,3572,1.083,3573,1.083,3574,1.96,3575,1.083,3576,1.083,3577,1.083,3578,1.083,3579,1.083,3580,1.083,3581,1.083,3582,1.083,3583,1.083,3584,1.083,3585,0.965,3586,1.083,3587,1.083,3588,1.083,3589,1.083]],["title/modules.html",[959,3.838]],["body/modules.html",[16,0.006,32,0.005,33,0.006,34,0.005,958,7.341,959,4.018,964,4.725,2569,5.268,2572,5.639,2576,5.268,2582,5.639,2584,5.268,2856,7.226,3157,8.721,3590,9.792,3591,9.792,3592,9.899,3593,8.827]],["title/overview.html",[1800,3.118]],["body/overview.html",[2,2.175,16,0.007,32,0.004,33,0.005,34,0.004,37,0.831,226,4.729,395,2.222,561,3.551,787,6.639,802,5.186,873,5.186,874,5.537,884,4.273,885,4.273,886,4.273,958,7.691,959,3.295,960,4.777,961,5.031,962,5.031,963,5.031,964,6.77,965,5.261,966,4.077,967,3.702,974,2.222,1099,2.087,1800,2.677,1893,5.031,1894,5.031,1895,5.031,2569,6.172,2576,7.127,2584,7.127,2585,5.031,2586,5.031,3585,5.031,3594,5.649,3595,5.649,3596,5.649]],["title/classes/suggestCastcleIdPayload.html",[35,0.269,1315,2.42]],["body/classes/suggestCastcleIdPayload.html",[3,0.068,4,0.052,5,0.06,7,0.101,8,0.836,14,0.399,15,0.197,16,0.007,19,0.113,24,1.681,25,1.228,26,2.448,32,0.004,33,0.005,34,0.004,35,0.542,37,0.853,44,3.146,51,0.778,53,0.244,60,1,75,0.109,100,2.233,174,1.485,243,2.382,246,2.916,362,2.382,363,3.775,371,3.262,386,2.748,417,2.821,437,2.821,447,2.821,462,2.821,584,1.228,585,2.821,586,2.821,587,2.821,588,2.821,589,2.821,590,2.821,591,2.821,592,2.821,619,1.432,720,2.899,878,2.298,996,2.899,1310,2.982,1313,3.706,1314,2.982,1315,4.085,3597,5.799]],["title/miscellaneous/typealiases.html",[2682,2.782,3598,5.815]],["body/miscellaneous/typealiases.html",[7,0.115,15,0.295,16,0.005,32,0.004,33,0.005,34,0.004,38,4.759,64,2.908,83,4.857,89,4.253,96,4.253,145,4.759,190,5.398,193,7.154,211,4.253,214,5.51,1032,5.873,1041,7.154,1321,5.398,1327,7.154,1333,5.873,1340,7.154,1389,5.398,1397,5.798,1399,5.798,1403,5.049,1833,5.043,1928,5.398,1955,5.873,1958,7.38,1961,5.873,1996,5.873,2001,7.154,2005,5.873,2009,7.154,2045,4.759,2069,4.523,2078,5.264,2080,5.798,2164,5.51,2334,5.873,2341,5.873,2378,5.873,2590,5.873,2610,6.575,2682,4.523,2684,5.873,2685,5.873,2686,5.873,2688,5.873,2690,5.873,2692,5.873,2694,7.154,3599,6.594,3600,6.594,3601,6.594,3602,6.594,3603,6.594,3604,6.594,3605,6.594,3606,6.594,3607,6.594,3608,6.594,3609,6.594,3610,6.594,3611,6.594]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"interfaces/AccessTokenPayload.html":{},"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"injectables/AppService-4.html":{},"injectables/AppService-5.html":{},"injectables/AppService-6.html":{},"classes/ArchiveHashtag.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastLogger.html":{},"classes/CastcleBase.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleException.html":{},"classes/CastcleName.html":{},"classes/CastcleQueryOptions.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/Circle.html":{},"classes/Comment.html":{},"classes/Comment-1.html":{},"injectables/CommonDate.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"classes/ContentItem.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"injectables/ContentsInterceptor.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountDto-1.html":{},"classes/CreateCredentialDto.html":{},"classes/Credential.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialModel.html":{},"interfaces/CredentialRequest.html":{},"modules/DatabaseModule.html":{},"interfaces/EmailVerifyToken.html":{},"classes/Engagement.html":{},"interfaces/ErrorStatus.html":{},"classes/Feature.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"injectables/FollowInterceptor.html":{},"classes/FollowResponse.html":{},"injectables/GuestInterceptor.html":{},"classes/GuestLoginDto.html":{},"interfaces/GuestRequest.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Image.html":{},"injectables/ImageInterceptor.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"injectables/LimitPipe.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"classes/LoginDto.html":{},"interfaces/MemberAccessTokenPayload.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/PageDto.html":{},"injectables/PageInterceptor.html":{},"injectables/PagePipe.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Pagination.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"interfaces/RefreshTokenPayload.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/SaveContentDto.html":{},"classes/SaveCredentialDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"interfaces/SignupRequirements.html":{},"injectables/SortByPipe.html":{},"classes/SuggestCastcleIdReponse.html":{},"interfaces/TokenHeader.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{},"classes/TokenResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Uploader.html":{},"classes/Url.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{},"modules/UtilsAwsModule.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"classes/UxEngagement.html":{},"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{},"injectables/UxEngagementService.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"classes/suggestCastcleIdPayload.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":310,"title":{},"body":{"interfaces/AccountRequirements.html":{},"classes/Content.html":{},"injectables/ContentInterceptor.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"injectables/ContentsInterceptor.html":{},"interfaces/IContent.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"injectables/LimitPipe.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"injectables/PagePipe.html":{},"interfaces/SignupRequirements.html":{},"injectables/SortByPipe.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["0.1.13",{"_index":2675,"title":{},"body":{"dependencies.html":{}}}],["02110",{"_index":538,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{}}}],["07:00",{"_index":1373,"title":{},"body":{"injectables/CommonDate.html":{}}}],["1",{"_index":777,"title":{"controllers/AppController-1.html":{},"injectables/AppService-1.html":{},"classes/Comment-1.html":{},"controllers/ContentController-1.html":{},"classes/CreateAccountDto-1.html":{},"classes/Feature-1.html":{},"controllers/HealthyController-1.html":{},"interfaces/ICredential-1.html":{},"classes/Link-1.html":{},"controllers/PageController-1.html":{}},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleName.html":{},"classes/CastcleQueryOptions.html":{},"classes/Comment.html":{},"classes/Content.html":{},"injectables/ContentInterceptor.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"injectables/ContentsInterceptor.html":{},"classes/ContentsResponse.html":{},"classes/Engagement.html":{},"classes/Feature.html":{},"interfaces/IContent.html":{},"interfaces/IUser.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Pagination.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{},"license.html":{}}}],["1.0",{"_index":603,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["10",{"_index":732,"title":{},"body":{"controllers/AppController.html":{},"license.html":{}}}],["1000",{"_index":179,"title":{},"body":{"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"injectables/ContentTypePipe.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/IAccountActivation.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"classes/Image.html":{},"injectables/LimitPipe.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{}}}],["1001",{"_index":1153,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["1002",{"_index":1155,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["1003",{"_index":1157,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["1004",{"_index":1159,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["1005",{"_index":1161,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["1006",{"_index":1163,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["1007",{"_index":1165,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["10160",{"_index":552,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{}}}],["11",{"_index":731,"title":{},"body":{"controllers/AppController.html":{},"license.html":{}}}],["13",{"_index":3585,"title":{},"body":{"license.html":{},"overview.html":{}}}],["1301",{"_index":539,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{}}}],["1440",{"_index":1380,"title":{},"body":{"injectables/CommonDate.html":{}}}],["15",{"_index":3318,"title":{},"body":{"license.html":{}}}],["16",{"_index":3319,"title":{},"body":{"license.html":{}}}],["17",{"_index":3594,"title":{},"body":{"overview.html":{}}}],["19",{"_index":2876,"title":{},"body":{"license.html":{}}}],["1996",{"_index":3131,"title":{},"body":{"license.html":{}}}],["2",{"_index":796,"title":{"controllers/AppController-2.html":{},"injectables/AppService-2.html":{},"classes/Feature-2.html":{},"controllers/HealthyController-2.html":{}},"body":{"license.html":{}}}],["2.0.0",{"_index":2681,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":2671,"title":{},"body":{"dependencies.html":{}}}],["2.965.0",{"_index":2666,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":3129,"title":{},"body":{"license.html":{}}}],["200",{"_index":450,"title":{},"body":{"controllers/AppController.html":{}}}],["2007",{"_index":2878,"title":{},"body":{"license.html":{}}}],["201",{"_index":428,"title":{},"body":{"controllers/AppController.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["2021",{"_index":488,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{}}}],["2021–06–16t11:22:33z",{"_index":721,"title":{},"body":{"controllers/AppController.html":{}}}],["204",{"_index":698,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["204})@apibearerauth()@useinterceptors(credentialinterceptor)@delete('me",{"_index":818,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["204})@apibearerauth()@useinterceptors(credentialinterceptor)@put(':id/follow",{"_index":822,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["204})@apibearerauth()@useinterceptors(credentialinterceptor)@put(':id/unfollow",{"_index":865,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["204})@apiresponse({status",{"_index":467,"title":{},"body":{"controllers/AppController.html":{}}}],["204})@httpcode(204)@delete('pages/:id",{"_index":2226,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["204})@post('changepasswordsubmit')@httpcode(204",{"_index":414,"title":{},"body":{"controllers/AppController.html":{}}}],["204})@useinterceptors(credentialinterceptor)@httpcode(204)@delete(':id",{"_index":1468,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["204})@useinterceptors(credentialinterceptor)@httpcode(204)@post",{"_index":784,"title":{},"body":{"controllers/AppController-1.html":{}}}],["204})@useinterceptors(credentialinterceptor)@put(':id/liked')@httpcode(204",{"_index":1478,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["204})@useinterceptors(credentialinterceptor)@put(':id/unliked')@httpcode(204",{"_index":1487,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["22",{"_index":543,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{}}}],["25",{"_index":1099,"title":{},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleQueryOptions.html":{},"classes/Comment.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentTypePipe.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"injectables/LimitPipe.html":{},"classes/Link.html":{},"injectables/PagePipe.html":{},"classes/Pagination.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"injectables/SortByPipe.html":{},"classes/Url.html":{},"overview.html":{}}}],["26",{"_index":3596,"title":{},"body":{"overview.html":{}}}],["28",{"_index":3474,"title":{},"body":{"license.html":{}}}],["3",{"_index":506,"title":{"controllers/AppController-3.html":{},"injectables/AppService-3.html":{},"controllers/HealthyController-3.html":{}},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"license.html":{}}}],["30",{"_index":20,"title":{},"body":{"interfaces/AccessTokenPayload.html":{},"interfaces/EmailVerifyToken.html":{},"interfaces/MemberAccessTokenPayload.html":{},"interfaces/RefreshTokenPayload.html":{},"license.html":{}}}],["3001",{"_index":1167,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["3002",{"_index":1169,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["3003",{"_index":1171,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["3004",{"_index":1173,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["3005",{"_index":1175,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["3006",{"_index":1177,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["3007",{"_index":1179,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["3008",{"_index":1181,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["3009",{"_index":1183,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["3010",{"_index":1185,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["3011",{"_index":1187,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["3012",{"_index":1189,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["3013",{"_index":1191,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["3014",{"_index":1193,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["3015",{"_index":1195,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["3016",{"_index":1197,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["3017",{"_index":1199,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["4",{"_index":803,"title":{"controllers/AppController-4.html":{},"injectables/AppService-4.html":{},"controllers/HealthyController-4.html":{}},"body":{"license.html":{}}}],["4.1.6",{"_index":2679,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":425,"title":{},"body":{"controllers/AppController.html":{}}}],["403",{"_index":468,"title":{},"body":{"controllers/AppController.html":{}}}],["465",{"_index":991,"title":{},"body":{"injectables/AppService.html":{}}}],["47/2",{"_index":546,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{}}}],["5",{"_index":722,"title":{"controllers/AppController-5.html":{},"injectables/AppService-5.html":{},"controllers/HealthyController-5.html":{}},"body":{"controllers/AppController.html":{},"license.html":{}}}],["5.0.1",{"_index":2668,"title":{},"body":{"dependencies.html":{}}}],["5.0.4",{"_index":2665,"title":{},"body":{"dependencies.html":{}}}],["5.13.7",{"_index":2672,"title":{},"body":{"dependencies.html":{}}}],["5001",{"_index":1201,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["5002",{"_index":1203,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["51",{"_index":531,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{}}}],["6",{"_index":956,"title":{"controllers/AppController-6.html":{},"injectables/AppService-6.html":{}},"body":{}}],["6.6.3",{"_index":2673,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1381,"title":{},"body":{"injectables/CommonDate.html":{},"license.html":{}}}],["60000",{"_index":1383,"title":{},"body":{"injectables/CommonDate.html":{}}}],["6b",{"_index":3212,"title":{},"body":{"license.html":{}}}],["6d",{"_index":3236,"title":{},"body":{"license.html":{}}}],["7",{"_index":3154,"title":{},"body":{"license.html":{}}}],["7.2.0",{"_index":2676,"title":{},"body":{"dependencies.html":{}}}],["79",{"_index":3595,"title":{},"body":{"overview.html":{}}}],["8",{"_index":717,"title":{},"body":{"controllers/AppController.html":{}}}],["8.0.0",{"_index":2663,"title":{},"body":{"dependencies.html":{}}}],["8.0.4",{"_index":2661,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":2670,"title":{},"body":{"dependencies.html":{}}}],["9]+\\.)+[a",{"_index":311,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["9]{1,3}\\.[0",{"_index":306,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["9]{1,3}\\])|(([a",{"_index":307,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["_",{"_index":1287,"title":{},"body":{"classes/CastcleName.html":{}}}],["_accountactivationmodel",{"_index":234,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["_accountmodel",{"_index":230,"title":{},"body":{"interfaces/AccountRequirements.html":{},"injectables/ContentService.html":{},"interfaces/SignupRequirements.html":{},"injectables/UserService.html":{},"injectables/UxEngagementService.html":{}}}],["_checkpermissionforupdate",{"_index":1448,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["_checkpermissionforupdate(content",{"_index":1459,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["_contentmodel",{"_index":1615,"title":{},"body":{"injectables/ContentService.html":{}}}],["_coverttouserresponse",{"_index":2095,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["_coverttouserresponse(self",{"_index":2117,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["_credentialmodel",{"_index":232,"title":{},"body":{"interfaces/AccountRequirements.html":{},"injectables/ContentService.html":{},"interfaces/SignupRequirements.html":{},"injectables/UserService.html":{}}}],["_engagementmodel",{"_index":1616,"title":{},"body":{"injectables/ContentService.html":{}}}],["_generateaccesstoken",{"_index":314,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["_generateemailverifytoken",{"_index":318,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["_generaterefreshtoken",{"_index":316,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["_getauthorfromuser",{"_index":1617,"title":{},"body":{"injectables/ContentService.html":{}}}],["_getcontentifexist",{"_index":1449,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["_getcontentifexist(id",{"_index":1461,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["_getpagebyidorcastcleid",{"_index":2248,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["_getuserfromidorcastcleid",{"_index":898,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["_id",{"_index":46,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"classes/AccountAuthenId.html":{},"interfaces/AccountRequirements.html":{},"classes/ArchiveHashtag.html":{},"classes/CastcleBase.html":{},"classes/Circle.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"classes/ContentItem.html":{},"injectables/ContentService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateCredentialDto.html":{},"classes/Credential.html":{},"classes/Engagement.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{},"classes/Otp.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/SaveCredentialDto.html":{},"interfaces/SignupRequirements.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/UxEngagement.html":{}}}],["_otpmodel",{"_index":238,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["_presuggest",{"_index":1216,"title":{},"body":{"classes/CastcleName.html":{}}}],["_presuggest(name",{"_index":1228,"title":{},"body":{"classes/CastcleName.html":{}}}],["_relationshipmodel",{"_index":2428,"title":{},"body":{"injectables/UserService.html":{}}}],["_revisionmodel",{"_index":1618,"title":{},"body":{"injectables/ContentService.html":{}}}],["_uploadimage",{"_index":2246,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["_usermodel",{"_index":236,"title":{},"body":{"interfaces/AccountRequirements.html":{},"injectables/ContentService.html":{},"interfaces/SignupRequirements.html":{},"injectables/UserService.html":{}}}],["_uxengagementmodel",{"_index":2641,"title":{},"body":{"injectables/UxEngagementService.html":{}}}],["a.order",{"_index":1575,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["ability",{"_index":3287,"title":{},"body":{"license.html":{}}}],["above",{"_index":2809,"title":{},"body":{"index.html":{},"license.html":{}}}],["absence",{"_index":3155,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":3555,"title":{},"body":{"license.html":{}}}],["ac",{"_index":327,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["accept",{"_index":752,"title":{},"body":{"controllers/AppController.html":{},"license.html":{}}}],["acceptance",{"_index":3377,"title":{},"body":{"license.html":{}}}],["acceptversion",{"_index":1824,"title":{},"body":{"classes/CreateAccountDto-1.html":{},"interfaces/TokenHeader.html":{}}}],["access",{"_index":2939,"title":{},"body":{"license.html":{}}}],["accessible",{"_index":2949,"title":{},"body":{"license.html":{}}}],["accesstoken",{"_index":246,"title":{},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/CreateAccountDto.html":{},"classes/CreateCredentialDto.html":{},"classes/Credential.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialModel.html":{},"interfaces/CredentialRequest.html":{},"classes/GuestLoginDto.html":{},"interfaces/ICredential-1.html":{},"classes/LoginDto.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/SaveCredentialDto.html":{},"interfaces/SignupRequirements.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["accesstokenexpiredate",{"_index":262,"title":{},"body":{"interfaces/AccountRequirements.html":{},"classes/CreateAccountDto.html":{},"classes/CreateCredentialDto.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{},"classes/SaveCredentialDto.html":{},"interfaces/SignupRequirements.html":{}}}],["accesstokenexpiredate.toisostring",{"_index":1848,"title":{},"body":{"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{}}}],["accesstokenexpirestime",{"_index":10,"title":{},"body":{"interfaces/AccessTokenPayload.html":{},"interfaces/EmailVerifyToken.html":{},"interfaces/MemberAccessTokenPayload.html":{},"interfaces/RefreshTokenPayload.html":{}}}],["accesstokenpayload",{"_index":1,"title":{"interfaces/AccessTokenPayload.html":{}},"body":{"interfaces/AccessTokenPayload.html":{},"interfaces/AccountRequirements.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/EmailVerifyToken.html":{},"interfaces/ICredential-1.html":{},"interfaces/MemberAccessTokenPayload.html":{},"interfaces/RefreshTokenPayload.html":{},"interfaces/SignupRequirements.html":{}}}],["accesstokenresult",{"_index":254,"title":{},"body":{"interfaces/AccountRequirements.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{},"interfaces/SignupRequirements.html":{}}}],["accesstokenresult.accesstoken",{"_index":261,"title":{},"body":{"interfaces/AccountRequirements.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{},"interfaces/SignupRequirements.html":{}}}],["accesstokenresult.accesstokenexpiredate",{"_index":263,"title":{},"body":{"interfaces/AccountRequirements.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{},"interfaces/SignupRequirements.html":{}}}],["accompanied",{"_index":525,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"license.html":{}}}],["accompanies",{"_index":3559,"title":{},"body":{"license.html":{}}}],["accomplish",{"_index":2952,"title":{},"body":{"license.html":{}}}],["accord",{"_index":3153,"title":{},"body":{"license.html":{}}}],["according",{"_index":3550,"title":{},"body":{"license.html":{}}}],["account",{"_index":36,"title":{"classes/Account.html":{}},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"classes/ContentItem.html":{},"classes/CreateAccountDto.html":{},"classes/CreateCredentialDto.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"modules/DatabaseModule.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"classes/SaveCredentialDto.html":{},"interfaces/SignupRequirements.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{},"classes/UxEngagement.html":{},"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{},"injectables/UxEngagementService.html":{}}}],["account._id",{"_index":136,"title":{},"body":{"classes/Account.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{},"interfaces/SignupRequirements.html":{}}}],["account.activatedate",{"_index":140,"title":{},"body":{"classes/Account.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{},"interfaces/SignupRequirements.html":{}}}],["account.changepassword(newpassword",{"_index":390,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["account.changepassword(requirements.password",{"_index":337,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["account.credentials.find",{"_index":629,"title":{},"body":{"controllers/AppController.html":{}}}],["account.email",{"_index":333,"title":{},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"interfaces/SignupRequirements.html":{}}}],["account.isguest",{"_index":138,"title":{},"body":{"classes/Account.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{},"interfaces/SignupRequirements.html":{}}}],["account.password",{"_index":335,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["account.preferences.langagues",{"_index":696,"title":{},"body":{"controllers/AppController.html":{}}}],["account.save",{"_index":330,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["account.schema",{"_index":1597,"title":{},"body":{"classes/ContentItem.html":{},"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"classes/UxEngagement.html":{}}}],["account.verifypassword(body.password",{"_index":627,"title":{},"body":{"controllers/AppController.html":{}}}],["account.verifypassword(password",{"_index":765,"title":{},"body":{"controllers/AppController.html":{}}}],["account.visibility",{"_index":142,"title":{},"body":{"classes/Account.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{}}}],["accountactivation",{"_index":144,"title":{"classes/AccountActivation.html":{}},"body":{"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"modules/DatabaseModule.html":{},"interfaces/IAccountActivation.html":{},"interfaces/SignupRequirements.html":{}}}],["accountactivation.account",{"_index":353,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["accountactivation.activationdate",{"_index":324,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["accountactivation.isverifytokenvalid",{"_index":703,"title":{},"body":{"controllers/AppController.html":{}}}],["accountactivation.revocationdate",{"_index":355,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["accountactivation.save",{"_index":325,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["accountactivation.schema",{"_index":84,"title":{},"body":{"classes/Account.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{}}}],["accountactivation.verifytoken",{"_index":356,"title":{},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"interfaces/SignupRequirements.html":{}}}],["accountactivation.verifytokenexpiredate",{"_index":357,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["accountactivationdocument",{"_index":83,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/AccountRequirements.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/ICredential.html":{},"interfaces/SignupRequirements.html":{},"miscellaneous/typealiases.html":{}}}],["accountactivationdocument).verifytoken",{"_index":169,"title":{},"body":{"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/IAccountActivation.html":{}}}],["accountactivationmodel",{"_index":171,"title":{"interfaces/AccountActivationModel.html":{}},"body":{"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/AccountRequirements.html":{},"interfaces/IAccountActivation.html":{},"interfaces/SignupRequirements.html":{}}}],["accountactivationschema",{"_index":164,"title":{},"body":{"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"modules/DatabaseModule.html":{},"interfaces/IAccountActivation.html":{}}}],["accountactivationschema.methods.isverifytokenvalid",{"_index":167,"title":{},"body":{"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/IAccountActivation.html":{}}}],["accountactivationschema.statics.generateverifytoken",{"_index":173,"title":{},"body":{"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/IAccountActivation.html":{}}}],["accountactivationtype",{"_index":162,"title":{},"body":{"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/IAccountActivation.html":{},"miscellaneous/enumerations.html":{}}}],["accountauthenid",{"_index":189,"title":{"classes/AccountAuthenId.html":{}},"body":{"classes/AccountAuthenId.html":{}}}],["accountautheniddocument",{"_index":193,"title":{},"body":{"classes/AccountAuthenId.html":{},"miscellaneous/typealiases.html":{}}}],["accountauthenidschema",{"_index":199,"title":{},"body":{"classes/AccountAuthenId.html":{}}}],["accountauthenidtype",{"_index":194,"title":{},"body":{"classes/AccountAuthenId.html":{},"miscellaneous/enumerations.html":{}}}],["accountdocument",{"_index":96,"title":{},"body":{"classes/Account.html":{},"interfaces/AccountRequirements.html":{},"injectables/ContentService.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{},"interfaces/IUser.html":{},"interfaces/SignupRequirements.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{},"injectables/UxEngagementService.html":{},"miscellaneous/typealiases.html":{}}}],["accountdocument).activatedate",{"_index":141,"title":{},"body":{"classes/Account.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{}}}],["accountdocument).email",{"_index":120,"title":{},"body":{"classes/Account.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{}}}],["accountdocument).isguest",{"_index":139,"title":{},"body":{"classes/Account.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{}}}],["accountdocument).password",{"_index":119,"title":{},"body":{"classes/Account.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{}}}],["accountdocument).visibility",{"_index":131,"title":{},"body":{"classes/Account.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{}}}],["accountdocument._id",{"_index":256,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["accountid",{"_index":791,"title":{},"body":{"controllers/AppController-1.html":{},"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{}}}],["accountrequirements",{"_index":201,"title":{"interfaces/AccountRequirements.html":{}},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["accountrequirements.device",{"_index":267,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["accountrequirements.deviceuuid",{"_index":269,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["accountrequirements.header.platform",{"_index":268,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["accountrequirements.languagespreferences",{"_index":251,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["accountrole",{"_index":99,"title":{},"body":{"classes/Account.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{},"miscellaneous/enumerations.html":{}}}],["accountschema",{"_index":107,"title":{},"body":{"classes/Account.html":{},"interfaces/AccountRequirements.html":{},"modules/DatabaseModule.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{},"interfaces/SignupRequirements.html":{}}}],["accountschema.methods.changepassword",{"_index":113,"title":{},"body":{"classes/Account.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{}}}],["accountschema.methods.verifypassword",{"_index":124,"title":{},"body":{"classes/Account.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{}}}],["accountschema.post('save",{"_index":133,"title":{},"body":{"classes/Account.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{}}}],["accountschema.pre('save",{"_index":129,"title":{},"body":{"classes/Account.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{}}}],["accountschemafactory",{"_index":126,"title":{},"body":{"classes/Account.html":{},"modules/DatabaseModule.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{}}}],["achieve",{"_index":3565,"title":{},"body":{"license.html":{}}}],["acknowledges",{"_index":3095,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":3427,"title":{},"body":{"license.html":{}}}],["action",{"_index":2047,"title":{},"body":{"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{}}}],["actions",{"_index":3384,"title":{},"body":{"license.html":{}}}],["activate",{"_index":670,"title":{},"body":{"controllers/AppController.html":{}}}],["activatedate",{"_index":40,"title":{},"body":{"classes/Account.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{}}}],["activationdate",{"_index":146,"title":{},"body":{"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/IAccountActivation.html":{}}}],["activities",{"_index":3001,"title":{},"body":{"license.html":{}}}],["activity",{"_index":3469,"title":{},"body":{"license.html":{}}}],["actual",{"_index":1757,"title":{},"body":{"injectables/ContentTypePipe.html":{},"license.html":{}}}],["actually",{"_index":3260,"title":{},"body":{"license.html":{}}}],["adapt",{"_index":2979,"title":{},"body":{"license.html":{}}}],["add",{"_index":1512,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/UserService.html":{},"license.html":{}}}],["adddate",{"_index":1346,"title":{},"body":{"injectables/CommonDate.html":{}}}],["adddate(dt",{"_index":1352,"title":{},"body":{"injectables/CommonDate.html":{}}}],["added",{"_index":3152,"title":{},"body":{"license.html":{}}}],["additional",{"_index":556,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"license.html":{}}}],["addmonth",{"_index":1347,"title":{},"body":{"injectables/CommonDate.html":{}}}],["addmonth(dt",{"_index":1357,"title":{},"body":{"injectables/CommonDate.html":{}}}],["address",{"_index":3505,"title":{},"body":{"license.html":{}}}],["addressed",{"_index":2974,"title":{},"body":{"license.html":{}}}],["addtime",{"_index":1568,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{},"classes/Uploader.html":{}}}],["addyear",{"_index":1348,"title":{},"body":{"injectables/CommonDate.html":{}}}],["addyear(dt",{"_index":1360,"title":{},"body":{"injectables/CommonDate.html":{}}}],["adjective",{"_index":1296,"title":{},"body":{"classes/CastcleName.html":{}}}],["admin@castcle.com",{"_index":1011,"title":{},"body":{"injectables/AppService.html":{}}}],["adopted",{"_index":3128,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":3295,"title":{},"body":{"license.html":{}}}],["advised",{"_index":3546,"title":{},"body":{"license.html":{}}}],["affect",{"_index":2780,"title":{},"body":{"index.html":{}}}],["affects",{"_index":3296,"title":{},"body":{"license.html":{}}}],["affero",{"_index":2874,"title":{},"body":{"index.html":{},"license.html":{}}}],["affiliates",{"_index":490,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{}}}],["affirmed",{"_index":3407,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":3090,"title":{},"body":{"license.html":{}}}],["afterpage",{"_index":2273,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["afterpage.topageresponse",{"_index":2275,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["afterupdateuser",{"_index":914,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["afterupdateuser.touserresponse",{"_index":917,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["against",{"_index":3144,"title":{},"body":{"license.html":{}}}],["agg",{"_index":2543,"title":{},"body":{"injectables/UserService.html":{}}}],["aggregate",{"_index":2133,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"license.html":{}}}],["aggregator",{"_index":1591,"title":{},"body":{"classes/ContentItem.html":{},"injectables/ContentService.html":{},"classes/Hashtag.html":{},"injectables/UserService.html":{}}}],["aggregator:any",{"_index":1601,"title":{},"body":{"classes/ContentItem.html":{}}}],["agpl",{"_index":3589,"title":{},"body":{"license.html":{}}}],["agplv3",{"_index":2717,"title":{},"body":{"index.html":{}}}],["agree",{"_index":3486,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":3533,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":3436,"title":{},"body":{"license.html":{}}}],["aka",{"_index":2804,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":3599,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alleging",{"_index":3415,"title":{},"body":{"license.html":{}}}],["alley",{"_index":547,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{}}}],["allowed",{"_index":2885,"title":{},"body":{"license.html":{}}}],["along",{"_index":527,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"license.html":{}}}],["already",{"_index":279,"title":{},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"injectables/ContentService.html":{},"interfaces/SignupRequirements.html":{},"injectables/UserService.html":{},"license.html":{}}}],["alter",{"_index":493,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{}}}],["alternate",{"_index":2925,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":3208,"title":{},"body":{"license.html":{}}}],["ancillary",{"_index":3378,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":489,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"license.html":{}}}],["anti",{"_index":3117,"title":{},"body":{"license.html":{}}}],["anyone",{"_index":2760,"title":{},"body":{"index.html":{},"license.html":{}}}],["anything",{"_index":2989,"title":{},"body":{"license.html":{}}}],["api",{"_index":1703,"title":{},"body":{"injectables/ContentService.html":{},"index.html":{}}}],["api/commondate",{"_index":564,"title":{},"body":{"controllers/AppController.html":{}}}],["api/database",{"_index":577,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-3.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsInterceptorsModule.html":{}}}],["api/database/dtos",{"_index":786,"title":{},"body":{"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"injectables/ContentTypePipe.html":{},"injectables/ContentsInterceptor.html":{},"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{},"injectables/LimitPipe.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PageInterceptor.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{}}}],["api/database/schemas",{"_index":889,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["api/environments",{"_index":88,"title":{},"body":{"classes/Account.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"injectables/AppService.html":{},"classes/CastLogger.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{},"classes/Image.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["api/logger",{"_index":573,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["api/utils",{"_index":92,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"interfaces/SignupRequirements.html":{}}}],["api/utils/aws",{"_index":1534,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{},"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PageInterceptor.html":{}}}],["api/utils/exception",{"_index":576,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{},"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/Uploader.html":{}}}],["api/utils/interceptors",{"_index":569,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/FollowInterceptor.html":{},"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{},"injectables/ImageInterceptor.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PageInterceptor.html":{}}}],["api/utils/pipes",{"_index":888,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["apibearerauth",{"_index":583,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["apibearerauth()@apibody({type",{"_index":448,"title":{},"body":{"controllers/AppController.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["apibearerauth()@apiokresponse({type",{"_index":1471,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["apibearerauth()@apiresponse({status",{"_index":463,"title":{},"body":{"controllers/AppController.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["apibody",{"_index":582,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["apibody({type",{"_index":478,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["apiheader",{"_index":581,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["apiheader({name",{"_index":438,"title":{},"body":{"controllers/AppController.html":{}}}],["apiokresponse",{"_index":580,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["apiokresponse({type",{"_index":418,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["apiproperty",{"_index":878,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleQueryOptions.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/Comment.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"classes/Feature.html":{},"classes/FollowResponse.html":{},"classes/GuestLoginDto.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"classes/LoginDto.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Pagination.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Url.html":{},"classes/UserImage.html":{},"classes/UserResponseDto.html":{},"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["apiquery",{"_index":879,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["apiresponse",{"_index":579,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["apiresponse({status",{"_index":424,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["app",{"_index":2865,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":972,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":562,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["apparently",{"_index":2791,"title":{},"body":{"index.html":{}}}],["appcontroller",{"_index":394,"title":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{}}}],["appcontroller.name",{"_index":608,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{}}}],["applicable",{"_index":2994,"title":{},"body":{"license.html":{}}}],["application",{"_index":3581,"title":{},"body":{"license.html":{}}}],["applies",{"_index":3511,"title":{},"body":{"license.html":{}}}],["apply",{"_index":2968,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":958,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":3013,"title":{},"body":{"license.html":{}}}],["appropriately",{"_index":3148,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":3554,"title":{},"body":{"license.html":{}}}],["apps/.../main.ts",{"_index":2697,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/authentications/src/app/app.controller.ts",{"_index":396,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/authentications/src/app/app.controller.ts:114",{"_index":431,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/authentications/src/app/app.controller.ts:145",{"_index":452,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/authentications/src/app/app.controller.ts:213",{"_index":445,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/authentications/src/app/app.controller.ts:253",{"_index":465,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/authentications/src/app/app.controller.ts:320",{"_index":460,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/authentications/src/app/app.controller.ts:358",{"_index":476,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/authentications/src/app/app.controller.ts:388",{"_index":471,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/authentications/src/app/app.controller.ts:424",{"_index":420,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/authentications/src/app/app.controller.ts:459",{"_index":432,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/authentications/src/app/app.controller.ts:471",{"_index":434,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/authentications/src/app/app.controller.ts:479",{"_index":485,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/authentications/src/app/app.controller.ts:499",{"_index":473,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/authentications/src/app/app.controller.ts:520",{"_index":481,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/authentications/src/app/app.controller.ts:547",{"_index":415,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/authentications/src/app/app.module.ts",{"_index":968,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/authentications/src/app/app.service.ts",{"_index":975,"title":{},"body":{"injectables/AppService.html":{}}}],["apps/authentications/src/app/app.service.ts:43",{"_index":977,"title":{},"body":{"injectables/AppService.html":{}}}],["apps/authentications/src/app/app.service.ts:47",{"_index":980,"title":{},"body":{"injectables/AppService.html":{}}}],["apps/authentications/src/app/controllers/healthy/healthy.controller.ts",{"_index":2022,"title":{},"body":{"controllers/HealthyController-1.html":{}}}],["apps/authentications/src/app/controllers/healthy/healthy.controller.ts:35",{"_index":2023,"title":{},"body":{"controllers/HealthyController-1.html":{}}}],["apps/authentications/src/app/dtos/dto.ts",{"_index":1310,"title":{},"body":{"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/GuestLoginDto.html":{},"classes/LoginDto.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["apps/authentications/src/app/dtos/dto.ts:100",{"_index":1312,"title":{},"body":{"classes/ChangePasswordBody.html":{}}}],["apps/authentications/src/app/dtos/dto.ts:102",{"_index":1311,"title":{},"body":{"classes/ChangePasswordBody.html":{}}}],["apps/authentications/src/app/dtos/dto.ts:107",{"_index":2657,"title":{},"body":{"classes/VerificationPasswordBody.html":{}}}],["apps/authentications/src/app/dtos/dto.ts:112",{"_index":2659,"title":{},"body":{"classes/VerificationPasswordResponse.html":{}}}],["apps/authentications/src/app/dtos/dto.ts:114",{"_index":2658,"title":{},"body":{"classes/VerificationPasswordResponse.html":{}}}],["apps/authentications/src/app/dtos/dto.ts:27",{"_index":1995,"title":{},"body":{"classes/GuestLoginDto.html":{}}}],["apps/authentications/src/app/dtos/dto.ts:32",{"_index":1316,"title":{},"body":{"classes/CheckEmailExistDto.html":{}}}],["apps/authentications/src/app/dtos/dto.ts:37",{"_index":2207,"title":{},"body":{"classes/LoginDto.html":{}}}],["apps/authentications/src/app/dtos/dto.ts:39",{"_index":2206,"title":{},"body":{"classes/LoginDto.html":{}}}],["apps/authentications/src/app/dtos/dto.ts:44",{"_index":2332,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["apps/authentications/src/app/dtos/dto.ts:46",{"_index":2333,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["apps/authentications/src/app/dtos/dto.ts:48",{"_index":2331,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["apps/authentications/src/app/dtos/dto.ts:50",{"_index":2330,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["apps/authentications/src/app/dtos/dto.ts:55",{"_index":2328,"title":{},"body":{"classes/RegisterByEmailDto.html":{}}}],["apps/authentications/src/app/dtos/dto.ts:57",{"_index":2329,"title":{},"body":{"classes/RegisterByEmailDto.html":{}}}],["apps/authentications/src/app/dtos/dto.ts:62",{"_index":1317,"title":{},"body":{"classes/CheckIdExistDto.html":{}}}],["apps/authentications/src/app/dtos/dto.ts:67",{"_index":2369,"title":{},"body":{"classes/TokenResponse.html":{}}}],["apps/authentications/src/app/dtos/dto.ts:70",{"_index":2370,"title":{},"body":{"classes/TokenResponse.html":{}}}],["apps/authentications/src/app/dtos/dto.ts:75",{"_index":1318,"title":{},"body":{"classes/CheckingResponse.html":{}}}],["apps/authentications/src/app/dtos/dto.ts:78",{"_index":1319,"title":{},"body":{"classes/CheckingResponse.html":{}}}],["apps/authentications/src/app/dtos/dto.ts:85",{"_index":2327,"title":{},"body":{"classes/RefreshTokenResponse.html":{}}}],["apps/authentications/src/app/dtos/dto.ts:90",{"_index":3597,"title":{},"body":{"classes/suggestCastcleIdPayload.html":{}}}],["apps/authentications/src/app/dtos/dto.ts:95",{"_index":2364,"title":{},"body":{"classes/SuggestCastcleIdReponse.html":{}}}],["apps/authentications/src/app/interceptors/guest.interceptor.ts",{"_index":1987,"title":{},"body":{"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{}}}],["apps/authentications/src/main.ts",{"_index":2698,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/backgrounds/src/app/app.controller.ts",{"_index":797,"title":{},"body":{"controllers/AppController-2.html":{}}}],["apps/backgrounds/src/app/app.controller.ts:32",{"_index":798,"title":{},"body":{"controllers/AppController-2.html":{}}}],["apps/backgrounds/src/app/app.service.ts",{"_index":1017,"title":{},"body":{"injectables/AppService-2.html":{}}}],["apps/backgrounds/src/app/app.service.ts:28",{"_index":1018,"title":{},"body":{"injectables/AppService-2.html":{}}}],["apps/backgrounds/src/main.ts",{"_index":2700,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/bases/src/app/app.controller.ts",{"_index":800,"title":{},"body":{"controllers/AppController-3.html":{}}}],["apps/bases/src/app/app.controller.ts:42",{"_index":801,"title":{},"body":{"controllers/AppController-3.html":{}}}],["apps/bases/src/app/app.service.ts",{"_index":1022,"title":{},"body":{"injectables/AppService-4.html":{}}}],["apps/bases/src/app/app.service.ts:28",{"_index":1023,"title":{},"body":{"injectables/AppService-4.html":{}}}],["apps/bases/src/app/controllers/healthy/healthy.controller.ts",{"_index":2026,"title":{},"body":{"controllers/HealthyController-3.html":{}}}],["apps/bases/src/app/controllers/healthy/healthy.controller.ts:35",{"_index":2027,"title":{},"body":{"controllers/HealthyController-3.html":{}}}],["apps/bases/src/app/controllers/pages/pages.controller.ts",{"_index":2214,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["apps/bases/src/app/controllers/pages/pages.controller.ts:146",{"_index":2224,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["apps/bases/src/app/controllers/pages/pages.controller.ts:182",{"_index":2242,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["apps/bases/src/app/controllers/pages/pages.controller.ts:213",{"_index":2238,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["apps/bases/src/app/controllers/pages/pages.controller.ts:228",{"_index":2230,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["apps/bases/src/app/controllers/pages/pages.controller.ts:256",{"_index":2227,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["apps/bases/src/app/controllers/pages/pages.controller.ts:300",{"_index":2234,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["apps/bases/src/app/interceptors/page.interceptor.ts",{"_index":2296,"title":{},"body":{"injectables/PageInterceptor.html":{}}}],["apps/bases/src/main.ts",{"_index":2702,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/contents/src/app/app.controller.ts",{"_index":1447,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["apps/contents/src/app/app.controller.ts:111",{"_index":1466,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["apps/contents/src/app/app.controller.ts:136",{"_index":1473,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["apps/contents/src/app/app.controller.ts:146",{"_index":1462,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["apps/contents/src/app/app.controller.ts:156",{"_index":1460,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["apps/contents/src/app/app.controller.ts:190",{"_index":1492,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["apps/contents/src/app/app.controller.ts:212",{"_index":1469,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["apps/contents/src/app/app.controller.ts:228",{"_index":1476,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["apps/contents/src/app/app.controller.ts:256",{"_index":1479,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["apps/contents/src/app/app.controller.ts:284",{"_index":1488,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["apps/contents/src/app/app.controller.ts:312",{"_index":1485,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["apps/contents/src/app/app.controller.ts:345",{"_index":1482,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["apps/contents/src/app/app.service.ts",{"_index":1020,"title":{},"body":{"injectables/AppService-3.html":{}}}],["apps/contents/src/app/app.service.ts:28",{"_index":1021,"title":{},"body":{"injectables/AppService-3.html":{}}}],["apps/contents/src/app/controllers/healthy/healthy.controller.ts",{"_index":2024,"title":{},"body":{"controllers/HealthyController-2.html":{}}}],["apps/contents/src/app/controllers/healthy/healthy.controller.ts:35",{"_index":2025,"title":{},"body":{"controllers/HealthyController-2.html":{}}}],["apps/contents/src/main.ts",{"_index":2701,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/engagements/src/app/app.controller.ts",{"_index":778,"title":{},"body":{"controllers/AppController-1.html":{}}}],["apps/engagements/src/app/app.controller.ts:65",{"_index":780,"title":{},"body":{"controllers/AppController-1.html":{}}}],["apps/engagements/src/app/app.controller.ts:78",{"_index":785,"title":{},"body":{"controllers/AppController-1.html":{}}}],["apps/engagements/src/app/app.service.ts",{"_index":1014,"title":{},"body":{"injectables/AppService-1.html":{}}}],["apps/engagements/src/app/app.service.ts:28",{"_index":1015,"title":{},"body":{"injectables/AppService-1.html":{}}}],["apps/engagements/src/app/controllers/healthy/healthy.controller.ts",{"_index":2015,"title":{},"body":{"controllers/HealthyController.html":{}}}],["apps/engagements/src/app/controllers/healthy/healthy.controller.ts:35",{"_index":2018,"title":{},"body":{"controllers/HealthyController.html":{}}}],["apps/engagements/src/main.ts",{"_index":2699,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/metadata/src/app/app.controller.ts",{"_index":804,"title":{},"body":{"controllers/AppController-4.html":{}}}],["apps/metadata/src/app/app.controller.ts:37",{"_index":805,"title":{},"body":{"controllers/AppController-4.html":{}}}],["apps/metadata/src/app/app.service.ts",{"_index":1025,"title":{},"body":{"injectables/AppService-5.html":{}}}],["apps/metadata/src/app/app.service.ts:28",{"_index":1026,"title":{},"body":{"injectables/AppService-5.html":{}}}],["apps/metadata/src/app/controllers/healthy/healthy.controller.ts",{"_index":2028,"title":{},"body":{"controllers/HealthyController-4.html":{}}}],["apps/metadata/src/app/controllers/healthy/healthy.controller.ts:35",{"_index":2029,"title":{},"body":{"controllers/HealthyController-4.html":{}}}],["apps/metadata/src/main.ts",{"_index":2703,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/users/src/app/app.controller.ts",{"_index":806,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["apps/users/src/app/app.controller.ts:132",{"_index":824,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["apps/users/src/app/app.controller.ts:143",{"_index":830,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["apps/users/src/app/app.controller.ts:160",{"_index":833,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["apps/users/src/app/app.controller.ts:175",{"_index":871,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["apps/users/src/app/app.controller.ts:197",{"_index":819,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["apps/users/src/app/app.controller.ts:217",{"_index":827,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["apps/users/src/app/app.controller.ts:262",{"_index":848,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["apps/users/src/app/app.controller.ts:297",{"_index":823,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["apps/users/src/app/app.controller.ts:319",{"_index":866,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["apps/users/src/app/app.controller.ts:361",{"_index":859,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["apps/users/src/app/app.controller.ts:416",{"_index":863,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["apps/users/src/app/app.service.ts",{"_index":1028,"title":{},"body":{"injectables/AppService-6.html":{}}}],["apps/users/src/app/app.service.ts:27",{"_index":1029,"title":{},"body":{"injectables/AppService-6.html":{}}}],["apps/users/src/app/controllers/healthy/healthy.controller.ts",{"_index":2030,"title":{},"body":{"controllers/HealthyController-5.html":{}}}],["apps/users/src/app/controllers/healthy/healthy.controller.ts:35",{"_index":2031,"title":{},"body":{"controllers/HealthyController-5.html":{}}}],["apps/users/src/app/interceptors/image.interceptor.ts",{"_index":1966,"title":{},"body":{"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{}}}],["apps/users/src/main.ts",{"_index":2704,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appservice",{"_index":561,"title":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"injectables/AppService-4.html":{},"injectables/AppService-5.html":{},"injectables/AppService-6.html":{}},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"injectables/AppService-4.html":{},"injectables/AppService-5.html":{},"injectables/AppService-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"overview.html":{}}}],["archive",{"_index":3583,"title":{},"body":{"license.html":{}}}],["archivehashtag",{"_index":1031,"title":{"classes/ArchiveHashtag.html":{}},"body":{"classes/ArchiveHashtag.html":{}}}],["archivehashtagdocument",{"_index":1041,"title":{},"body":{"classes/ArchiveHashtag.html":{},"miscellaneous/typealiases.html":{}}}],["archivehashtagschema",{"_index":1042,"title":{},"body":{"classes/ArchiveHashtag.html":{}}}],["argarray",{"_index":1125,"title":{},"body":{"classes/CastLogger.html":{}}}],["argarray.push(context",{"_index":1126,"title":{},"body":{"classes/CastLogger.html":{}}}],["argarray.push(stack",{"_index":1128,"title":{},"body":{"classes/CastLogger.html":{}}}],["argumentmetadata",{"_index":1761,"title":{},"body":{"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{}}}],["arising",{"_index":3537,"title":{},"body":{"license.html":{}}}],["arrange",{"_index":3446,"title":{},"body":{"license.html":{}}}],["arrangement",{"_index":3457,"title":{},"body":{"license.html":{}}}],["array",{"_index":57,"title":{},"body":{"classes/Account.html":{},"classes/ArchiveHashtag.html":{},"classes/CastLogger.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"interfaces/IAccount.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{}}}],["article",{"_index":3125,"title":{},"body":{"license.html":{}}}],["asc",{"_index":934,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"classes/CastcleQueryOptions.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PagePipe.html":{},"classes/Pagination.html":{},"injectables/SortByPipe.html":{},"miscellaneous/enumerations.html":{}}}],["assert",{"_index":2917,"title":{},"body":{"license.html":{}}}],["assets",{"_index":2803,"title":{},"body":{"index.html":{},"license.html":{}}}],["associated",{"_index":3070,"title":{},"body":{"license.html":{}}}],["assume",{"_index":380,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{},"license.html":{}}}],["assumption",{"_index":3558,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":3341,"title":{},"body":{"license.html":{}}}],["async",{"_index":114,"title":{},"body":{"classes/Account.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"injectables/AppService.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"injectables/ContentService.html":{},"injectables/ContentsInterceptor.html":{},"classes/Credential.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialModel.html":{},"interfaces/CredentialRequest.html":{},"classes/Engagement.html":{},"injectables/FollowInterceptor.html":{},"interfaces/IAccount.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"injectables/ImageInterceptor.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PageInterceptor.html":{},"interfaces/SignupRequirements.html":{},"classes/Uploader.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{},"injectables/UxEngagementService.html":{}}}],["attach",{"_index":3566,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":3354,"title":{},"body":{"license.html":{}}}],["attributions",{"_index":3321,"title":{},"body":{"license.html":{}}}],["auth",{"_index":994,"title":{},"body":{"injectables/AppService.html":{}}}],["authentications",{"_index":1002,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["authentications/verificationemail",{"_index":747,"title":{},"body":{"controllers/AppController.html":{}}}],["authenticationservice",{"_index":226,"title":{},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-3.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{},"modules/DatabaseModule.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"interfaces/SignupRequirements.html":{},"overview.html":{}}}],["author",{"_index":1044,"title":{"classes/Author.html":{}},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"classes/ContentItem.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"interfaces/IContent.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{},"license.html":{}}}],["author.id",{"_index":1713,"title":{},"body":{"injectables/ContentService.html":{},"injectables/UserService.html":{}}}],["author:user",{"_index":1599,"title":{},"body":{"classes/ContentItem.html":{}}}],["authordto",{"_index":1092,"title":{"classes/AuthorDto.html":{}},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{}}}],["authorid",{"_index":821,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["authorization",{"_index":755,"title":{},"body":{"controllers/AppController.html":{},"license.html":{}}}],["authorized",{"_index":3312,"title":{},"body":{"license.html":{}}}],["authorizes",{"_index":3422,"title":{},"body":{"license.html":{}}}],["authorizing",{"_index":3461,"title":{},"body":{"license.html":{}}}],["authors",{"_index":3331,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":606,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-3.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["authservice.getuserfromcastcleid",{"_index":895,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["automatic",{"_index":3388,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":3082,"title":{},"body":{"license.html":{}}}],["available",{"_index":2856,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{}}}],["avatar",{"_index":27,"title":{},"body":{"interfaces/AccessTokenPayload.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"interfaces/EmailVerifyToken.html":{},"classes/Feature.html":{},"injectables/FollowInterceptor.html":{},"classes/FollowResponse.html":{},"interfaces/IUser.html":{},"injectables/ImageInterceptor.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"interfaces/MemberAccessTokenPayload.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"interfaces/RefreshTokenPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Url.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{}}}],["avatar.uri",{"_index":1972,"title":{},"body":{"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{}}}],["await",{"_index":117,"title":{},"body":{"classes/Account.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"injectables/AppService.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"injectables/ContentService.html":{},"injectables/ContentsInterceptor.html":{},"classes/Credential.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialModel.html":{},"interfaces/CredentialRequest.html":{},"classes/Engagement.html":{},"injectables/FollowInterceptor.html":{},"interfaces/IAccount.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"injectables/ImageInterceptor.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PageInterceptor.html":{},"interfaces/SignupRequirements.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{},"injectables/UxEngagementService.html":{}}}],["away",{"_index":2896,"title":{},"body":{"license.html":{}}}],["aws",{"_index":2167,"title":{},"body":{"classes/Image.html":{},"classes/Uploader.html":{},"dependencies.html":{}}}],["aws.cloudfront.signer",{"_index":2175,"title":{},"body":{"classes/Image.html":{}}}],["aws.module.ts",{"_index":2571,"title":{},"body":{"modules/UtilsAwsModule.html":{}}}],["aws.s3",{"_index":2385,"title":{},"body":{"classes/Uploader.html":{}}}],["b",{"_index":1574,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{},"license.html":{}}}],["b.order",{"_index":1576,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["back",{"_index":1667,"title":{},"body":{"injectables/ContentService.html":{},"index.html":{}}}],["backend",{"_index":2713,"title":{},"body":{"index.html":{}}}],["background",{"_index":2536,"title":{},"body":{"injectables/UserService.html":{}}}],["backgrounds",{"_index":1019,"title":{},"body":{"injectables/AppService-2.html":{}}}],["ban",{"_index":1244,"title":{},"body":{"classes/CastcleName.html":{}}}],["bang",{"_index":548,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{}}}],["bangkok",{"_index":550,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{}}}],["banned_names",{"_index":1254,"title":{},"body":{"classes/CastcleName.html":{}}}],["banned_names.find((str",{"_index":1275,"title":{},"body":{"classes/CastcleName.html":{}}}],["base.schema",{"_index":82,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"classes/ArchiveHashtag.html":{},"classes/Circle.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"classes/ContentItem.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"classes/Engagement.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UxEngagement.html":{}}}],["base64",{"_index":2166,"title":{},"body":{"classes/Image.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/Uploader.html":{}}}],["base64.replace(/^data:image\\/\\w+;base64",{"_index":2390,"title":{},"body":{"classes/Uploader.html":{}}}],["based",{"_index":2985,"title":{},"body":{"license.html":{}}}],["bases",{"_index":1024,"title":{},"body":{"injectables/AppService-4.html":{}}}],["basic",{"_index":3083,"title":{},"body":{"license.html":{}}}],["bcrypt",{"_index":2667,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":756,"title":{},"body":{"controllers/AppController.html":{}}}],["become",{"_index":2927,"title":{},"body":{"license.html":{}}}],["becomes",{"_index":2943,"title":{},"body":{"license.html":{}}}],["behalf",{"_index":3106,"title":{},"body":{"license.html":{}}}],["being",{"_index":3234,"title":{},"body":{"license.html":{}}}],["believe",{"_index":2725,"title":{},"body":{"index.html":{},"license.html":{}}}],["belong",{"_index":2724,"title":{},"body":{"index.html":{}}}],["below",{"_index":3113,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":2754,"title":{},"body":{"index.html":{}}}],["benefit",{"_index":2737,"title":{},"body":{"index.html":{},"license.html":{}}}],["benefits",{"_index":2742,"title":{},"body":{"index.html":{}}}],["best",{"_index":3564,"title":{},"body":{"license.html":{}}}],["better",{"_index":689,"title":{},"body":{"controllers/AppController.html":{},"license.html":{}}}],["between",{"_index":3079,"title":{},"body":{"license.html":{}}}],["beyond",{"_index":3183,"title":{},"body":{"license.html":{}}}],["birthdate",{"_index":2082,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["birthday",{"_index":728,"title":{},"body":{"controllers/AppController.html":{}}}],["blockchain",{"_index":2799,"title":{},"body":{"index.html":{}}}],["blog",{"_index":1095,"title":{},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{},"miscellaneous/enumerations.html":{}}}],["blogpayload",{"_index":1065,"title":{"classes/BlogPayload.html":{}},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/Content.html":{},"injectables/ContentInterceptor.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentsInterceptor.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"interfaces/IContent.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{}}}],["blogpayload).photo",{"_index":1540,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["blogpayload).photo.contents",{"_index":1547,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["blogpayload).photo.cover",{"_index":1541,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["blogpayload).photo.cover.url",{"_index":1542,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["blogphoto",{"_index":1059,"title":{"classes/BlogPhoto.html":{}},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{}}}],["body",{"_index":421,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{},"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/Uploader.html":{},"license.html":{}}}],["body('authorid",{"_index":939,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["body('displayname",{"_index":760,"title":{},"body":{"controllers/AppController.html":{}}}],["body('email",{"_index":612,"title":{},"body":{"controllers/AppController.html":{}}}],["body('message",{"_index":1524,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["body('newpassword",{"_index":772,"title":{},"body":{"controllers/AppController.html":{}}}],["body('password",{"_index":764,"title":{},"body":{"controllers/AppController.html":{}}}],["body('refcode",{"_index":771,"title":{},"body":{"controllers/AppController.html":{}}}],["body.avatar",{"_index":2259,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["body.castcleid",{"_index":2256,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["body.channel",{"_index":662,"title":{},"body":{"controllers/AppController.html":{}}}],["body.cover",{"_index":2261,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["body.deviceuuid",{"_index":651,"title":{},"body":{"controllers/AppController.html":{}}}],["body.displayname",{"_index":2271,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["body.images",{"_index":1968,"title":{},"body":{"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{}}}],["body.images.avatar",{"_index":1969,"title":{},"body":{"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{}}}],["body.images.cover",{"_index":1973,"title":{},"body":{"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{}}}],["body.payload",{"_index":1581,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["body.payload.castcleid",{"_index":674,"title":{},"body":{"controllers/AppController.html":{}}}],["body.payload.displayname",{"_index":675,"title":{},"body":{"controllers/AppController.html":{}}}],["body.payload.email",{"_index":668,"title":{},"body":{"controllers/AppController.html":{}}}],["body.payload.password",{"_index":676,"title":{},"body":{"controllers/AppController.html":{}}}],["body.payload.photo",{"_index":1560,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["body.payload.photo.contents",{"_index":1577,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["body.payload.photo.contents.map",{"_index":1578,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["body.payload.photo.contents.map((url",{"_index":1562,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["body.type",{"_index":1566,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["boolean",{"_index":60,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleName.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/Comment.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountDto-1.html":{},"classes/CreateCredentialDto.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"classes/Feature.html":{},"classes/FollowResponse.html":{},"classes/GuestLoginDto.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"classes/LoginDto.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/Relationship.html":{},"classes/SaveContentDto.html":{},"classes/SaveCredentialDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/SuggestCastcleIdReponse.html":{},"interfaces/TokenHeader.html":{},"classes/TokenResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Uploader.html":{},"classes/Url.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["bootstrap",{"_index":2696,"title":{},"body":{"miscellaneous/functions.html":{}}}],["boston",{"_index":536,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{}}}],["both",{"_index":3489,"title":{},"body":{"license.html":{}}}],["browse",{"_index":3592,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":3590,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":2379,"title":{},"body":{"classes/Uploader.html":{}}}],["buff",{"_index":2170,"title":{},"body":{"classes/Image.html":{}}}],["buff.tostring('ascii",{"_index":2173,"title":{},"body":{"classes/Image.html":{}}}],["buffer",{"_index":2388,"title":{},"body":{"classes/Uploader.html":{}}}],["buffer.from",{"_index":2389,"title":{},"body":{"classes/Uploader.html":{}}}],["buffer.from(env.cloudfront_private_key",{"_index":2171,"title":{},"body":{"classes/Image.html":{}}}],["build",{"_index":2859,"title":{},"body":{"index.html":{}}}],["build:authentications",{"_index":2861,"title":{},"body":{"index.html":{}}}],["build:for",{"_index":2860,"title":{},"body":{"index.html":{}}}],["build:s",{"_index":2862,"title":{},"body":{"index.html":{}}}],["building",{"_index":2744,"title":{},"body":{"index.html":{}}}],["business",{"_index":3467,"title":{},"body":{"license.html":{}}}],["button",{"_index":2734,"title":{},"body":{"index.html":{}}}],["bypass",{"_index":1698,"title":{},"body":{"injectables/ContentService.html":{},"injectables/UserService.html":{}}}],["c",{"_index":487,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"license.html":{}}}],["c.tocontentpayload",{"_index":2291,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["call",{"_index":749,"title":{},"body":{"controllers/AppController.html":{}}}],["called",{"_index":2951,"title":{},"body":{"license.html":{}}}],["callhandler",{"_index":1531,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{},"injectables/FollowInterceptor.html":{},"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"injectables/ImageInterceptor.html":{},"injectables/PageInterceptor.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{}}}],["cant",{"_index":1945,"title":{},"body":{"classes/Engagement.html":{}}}],["carry",{"_index":3161,"title":{},"body":{"license.html":{}}}],["case",{"_index":2893,"title":{},"body":{"license.html":{}}}],["cases",{"_index":2942,"title":{},"body":{"license.html":{}}}],["cast",{"_index":1411,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{},"index.html":{}}}],["castcle",{"_index":87,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CastLogger.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"injectables/ContentTypePipe.html":{},"injectables/ContentsInterceptor.html":{},"classes/Credential.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialModel.html":{},"interfaces/CredentialRequest.html":{},"modules/DatabaseModule.html":{},"injectables/FollowInterceptor.html":{},"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"classes/Image.html":{},"injectables/ImageInterceptor.html":{},"injectables/LimitPipe.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PageInterceptor.html":{},"injectables/PagePipe.html":{},"interfaces/SignupRequirements.html":{},"injectables/SortByPipe.html":{},"classes/Uploader.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"index.html":{}}}],["castcle's",{"_index":2846,"title":{},"body":{"index.html":{}}}],["castcle.exception",{"_index":2575,"title":{},"body":{"modules/UtilsExceptionModule.html":{}}}],["castclebase",{"_index":39,"title":{"classes/CastcleBase.html":{}},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"classes/ArchiveHashtag.html":{},"classes/CastcleBase.html":{},"classes/Circle.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"classes/ContentItem.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"classes/Engagement.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UxEngagement.html":{}}}],["castclebase:28",{"_index":70,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"classes/AccountAuthenId.html":{},"classes/ArchiveHashtag.html":{},"classes/Circle.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"classes/ContentItem.html":{},"classes/Credential.html":{},"classes/Engagement.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"classes/Otp.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/User.html":{},"classes/UxEngagement.html":{}}}],["castclebase:31",{"_index":71,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"classes/AccountAuthenId.html":{},"classes/ArchiveHashtag.html":{},"classes/Circle.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"classes/ContentItem.html":{},"classes/Credential.html":{},"classes/Engagement.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"classes/Otp.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/User.html":{},"classes/UxEngagement.html":{}}}],["castclebase:34",{"_index":72,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"classes/AccountAuthenId.html":{},"classes/ArchiveHashtag.html":{},"classes/Circle.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"classes/ContentItem.html":{},"classes/Credential.html":{},"classes/Engagement.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"classes/Otp.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/User.html":{},"classes/UxEngagement.html":{}}}],["castclebase:37",{"_index":74,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"classes/AccountAuthenId.html":{},"classes/ArchiveHashtag.html":{},"classes/Circle.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"classes/ContentItem.html":{},"classes/Credential.html":{},"classes/Engagement.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"classes/Otp.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/User.html":{},"classes/UxEngagement.html":{}}}],["castclecontentqueryoptions",{"_index":1098,"title":{"classes/CastcleContentQueryOptions.html":{}},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{}}}],["castcleexception",{"_index":575,"title":{"classes/CastcleException.html":{}},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"classes/CastcleException.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{},"interfaces/ErrorStatus.html":{},"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/Uploader.html":{},"modules/UtilsExceptionModule.html":{}}}],["castcleexception(castclestatus.forbidden_request",{"_index":794,"title":{},"body":{"controllers/AppController-1.html":{}}}],["castcleexception(castclestatus.invalid_email",{"_index":615,"title":{},"body":{"controllers/AppController.html":{}}}],["castcleexception(castclestatus.invalid_password",{"_index":769,"title":{},"body":{"controllers/AppController.html":{}}}],["castcleexception(castclestatus.invlaid_refcode",{"_index":776,"title":{},"body":{"controllers/AppController.html":{}}}],["castcleexception(castclestatus.missing_authorization_header",{"_index":2014,"title":{},"body":{"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{}}}],["castcleexception(castclestatus.page_is_exist",{"_index":2257,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["castcleexception(castclestatus.request_url_not_found",{"_index":758,"title":{},"body":{"controllers/AppController.html":{}}}],["castcleexception(castclestatus.upload_failed",{"_index":2402,"title":{},"body":{"classes/Uploader.html":{}}}],["castcleid",{"_index":24,"title":{},"body":{"interfaces/AccessTokenPayload.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/Comment.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"interfaces/EmailVerifyToken.html":{},"classes/Feature.html":{},"classes/FollowResponse.html":{},"classes/GuestLoginDto.html":{},"interfaces/IUser.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"classes/LoginDto.html":{},"interfaces/MemberAccessTokenPayload.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"interfaces/RefreshTokenPayload.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Url.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["castcleidresult",{"_index":2251,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["castcleidresult.type",{"_index":2252,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["castclename",{"_index":222,"title":{"classes/CastcleName.html":{}},"body":{"interfaces/AccountRequirements.html":{},"classes/CastcleName.html":{},"interfaces/SignupRequirements.html":{},"modules/UtilsModule.html":{}}}],["castclename(displayname",{"_index":365,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["castclename.converttoslug(name",{"_index":1262,"title":{},"body":{"classes/CastcleName.html":{}}}],["castclename.isbannedname(name",{"_index":1264,"title":{},"body":{"classes/CastcleName.html":{}}}],["castclename.isreservename(name",{"_index":1266,"title":{},"body":{"classes/CastcleName.html":{}}}],["castclename.isvalidname(name",{"_index":1268,"title":{},"body":{"classes/CastcleName.html":{}}}],["castclename.suggestcastcleid(name",{"_index":1270,"title":{},"body":{"classes/CastcleName.html":{}}}],["castclequeryoptions",{"_index":1057,"title":{"classes/CastcleQueryOptions.html":{}},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleQueryOptions.html":{},"classes/Comment.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Pagination.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{},"injectables/UserService.html":{}}}],["castclequeryoptions:217",{"_index":1142,"title":{},"body":{"classes/CastcleContentQueryOptions.html":{}}}],["castclequeryoptions:37",{"_index":1145,"title":{},"body":{"classes/CastcleContentQueryOptions.html":{}}}],["castclequeryoptions:45",{"_index":1144,"title":{},"body":{"classes/CastcleContentQueryOptions.html":{}}}],["castclequeryoptions:46",{"_index":1143,"title":{},"body":{"classes/CastcleContentQueryOptions.html":{}}}],["castclestatus",{"_index":574,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"classes/CastcleException.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{},"interfaces/ErrorStatus.html":{},"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/Uploader.html":{},"modules/UtilsExceptionModule.html":{},"miscellaneous/enumerations.html":{}}}],["castclestatus.email_or_phone_is_exist",{"_index":669,"title":{},"body":{"controllers/AppController.html":{}}}],["castclestatus.forbidden_request",{"_index":944,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["castclestatus.invalid_access_token",{"_index":908,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["castclestatus.invalid_email_or_password",{"_index":641,"title":{},"body":{"controllers/AppController.html":{}}}],["castclestatus.invalid_refresh_token",{"_index":697,"title":{},"body":{"controllers/AppController.html":{}}}],["castclestatus.missing_authorization_header",{"_index":1994,"title":{},"body":{"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{}}}],["castclestatus.payload_channel_mismatch",{"_index":684,"title":{},"body":{"controllers/AppController.html":{}}}],["castclestatus.request_url_not_found",{"_index":897,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["castlogger",{"_index":571,"title":{"classes/CastLogger.html":{}},"body":{"controllers/AppController.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"classes/CastLogger.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["castlogger(appcontroller.name",{"_index":892,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["castloggerlevel",{"_index":1131,"title":{},"body":{"classes/CastLogger.html":{}}}],["castloggeroptions",{"_index":572,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"classes/CastLogger.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["catch",{"_index":621,"title":{},"body":{"controllers/AppController.html":{},"classes/Uploader.html":{},"injectables/UserService.html":{}}}],["cause",{"_index":2770,"title":{},"body":{"index.html":{},"license.html":{}}}],["cease",{"_index":3358,"title":{},"body":{"license.html":{}}}],["certain",{"_index":3309,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":3370,"title":{},"body":{"license.html":{}}}],["change",{"_index":383,"title":{},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"classes/CastcleName.html":{},"interfaces/IUser.html":{},"classes/Relationship.html":{},"interfaces/SignupRequirements.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{},"license.html":{}}}],["changepassword",{"_index":109,"title":{},"body":{"classes/Account.html":{},"interfaces/AccountRequirements.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{},"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"interfaces/SignupRequirements.html":{},"miscellaneous/enumerations.html":{}}}],["changepassword(pasword",{"_index":2033,"title":{},"body":{"interfaces/IAccount.html":{}}}],["changepasswordbody",{"_index":592,"title":{"classes/ChangePasswordBody.html":{}},"body":{"controllers/AppController.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/GuestLoginDto.html":{},"classes/LoginDto.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["changepasswordbody})@apiresponse({status",{"_index":413,"title":{},"body":{"controllers/AppController.html":{}}}],["changepasswordsubmit",{"_index":397,"title":{},"body":{"controllers/AppController.html":{}}}],["changepasswordsubmit(refcode",{"_index":409,"title":{},"body":{"controllers/AppController.html":{}}}],["changing",{"_index":2884,"title":{},"body":{"license.html":{}}}],["channel",{"_index":1314,"title":{},"body":{"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/GuestLoginDto.html":{},"classes/LoginDto.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["character",{"_index":1231,"title":{},"body":{"classes/CastcleName.html":{}}}],["characterized",{"_index":3284,"title":{},"body":{"license.html":{}}}],["charge",{"_index":2907,"title":{},"body":{"license.html":{}}}],["check",{"_index":381,"title":{},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"classes/CastcleName.html":{},"injectables/ContentService.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"interfaces/SignupRequirements.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{},"index.html":{}}}],["checkcastcleidexists",{"_index":398,"title":{},"body":{"controllers/AppController.html":{}}}],["checkcastcleidexists(@body",{"_index":712,"title":{},"body":{"controllers/AppController.html":{}}}],["checkcastcleidexists(body",{"_index":416,"title":{},"body":{"controllers/AppController.html":{}}}],["checkemailexistdto",{"_index":586,"title":{"classes/CheckEmailExistDto.html":{}},"body":{"controllers/AppController.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/GuestLoginDto.html":{},"classes/LoginDto.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["checkemailexistdto})@post('checkemailexists')@httpcode(200",{"_index":430,"title":{},"body":{"controllers/AppController.html":{}}}],["checkemailexists",{"_index":399,"title":{},"body":{"controllers/AppController.html":{}}}],["checkemailexists(req",{"_index":422,"title":{},"body":{"controllers/AppController.html":{}}}],["checkidexistdto",{"_index":417,"title":{"classes/CheckIdExistDto.html":{}},"body":{"controllers/AppController.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/GuestLoginDto.html":{},"classes/LoginDto.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["checkingresponse",{"_index":587,"title":{"classes/CheckingResponse.html":{}},"body":{"controllers/AppController.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/GuestLoginDto.html":{},"classes/LoginDto.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["checkingresponse})@apibody({type",{"_index":429,"title":{},"body":{"controllers/AppController.html":{}}}],["checkingresponse})@post('checkcastcleidexists')@httpcode(200",{"_index":419,"title":{},"body":{"controllers/AppController.html":{}}}],["checkuserpermissionforeditcontent",{"_index":1619,"title":{},"body":{"injectables/ContentService.html":{}}}],["choose",{"_index":3513,"title":{},"body":{"license.html":{}}}],["choosing",{"_index":3518,"title":{},"body":{"license.html":{}}}],["circle",{"_index":1320,"title":{"classes/Circle.html":{}},"body":{"classes/Circle.html":{}}}],["circledocument",{"_index":1327,"title":{},"body":{"classes/Circle.html":{},"miscellaneous/typealiases.html":{}}}],["circleschema",{"_index":1328,"title":{},"body":{"classes/Circle.html":{}}}],["circletype",{"_index":1325,"title":{},"body":{"classes/Circle.html":{},"miscellaneous/enumerations.html":{}}}],["circumstances",{"_index":3111,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":3118,"title":{},"body":{"license.html":{}}}],["civil",{"_index":3557,"title":{},"body":{"license.html":{}}}],["claim",{"_index":3412,"title":{},"body":{"license.html":{}}}],["claims",{"_index":3424,"title":{},"body":{"license.html":{}}}],["class",{"_index":35,"title":{"classes/Account.html":{},"classes/AccountActivation.html":{},"classes/AccountAuthenId.html":{},"classes/ArchiveHashtag.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastLogger.html":{},"classes/CastcleBase.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleException.html":{},"classes/CastcleName.html":{},"classes/CastcleQueryOptions.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/Circle.html":{},"classes/Comment.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"classes/ContentItem.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountDto-1.html":{},"classes/CreateCredentialDto.html":{},"classes/Credential.html":{},"classes/Engagement.html":{},"classes/Feature.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"classes/FollowResponse.html":{},"classes/GuestLoginDto.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"classes/Image.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"classes/LoginDto.html":{},"classes/Otp.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Pagination.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/SaveContentDto.html":{},"classes/SaveCredentialDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Uploader.html":{},"classes/Url.html":{},"classes/User.html":{},"classes/UserImage.html":{},"classes/UserResponseDto.html":{},"classes/UxEngagement.html":{},"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"injectables/AppService-4.html":{},"injectables/AppService-5.html":{},"injectables/AppService-6.html":{},"classes/ArchiveHashtag.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastLogger.html":{},"classes/CastcleBase.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleException.html":{},"classes/CastcleName.html":{},"classes/CastcleQueryOptions.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/Circle.html":{},"classes/Comment.html":{},"classes/Comment-1.html":{},"injectables/CommonDate.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"classes/ContentItem.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"injectables/ContentsInterceptor.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountDto-1.html":{},"classes/CreateCredentialDto.html":{},"classes/Credential.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialModel.html":{},"interfaces/CredentialRequest.html":{},"modules/DatabaseModule.html":{},"classes/Engagement.html":{},"interfaces/ErrorStatus.html":{},"classes/Feature.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"injectables/FollowInterceptor.html":{},"classes/FollowResponse.html":{},"injectables/GuestInterceptor.html":{},"classes/GuestLoginDto.html":{},"interfaces/GuestRequest.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Image.html":{},"injectables/ImageInterceptor.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"injectables/LimitPipe.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"classes/LoginDto.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/PageDto.html":{},"injectables/PageInterceptor.html":{},"injectables/PagePipe.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Pagination.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/SaveContentDto.html":{},"classes/SaveCredentialDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"interfaces/SignupRequirements.html":{},"injectables/SortByPipe.html":{},"classes/SuggestCastcleIdReponse.html":{},"interfaces/TokenHeader.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{},"classes/TokenResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Uploader.html":{},"classes/Url.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{},"modules/UtilsAwsModule.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"classes/UxEngagement.html":{},"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{},"injectables/UxEngagementService.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"license.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["classes",{"_index":37,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"classes/AccountAuthenId.html":{},"classes/ArchiveHashtag.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastLogger.html":{},"classes/CastcleBase.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleException.html":{},"classes/CastcleName.html":{},"classes/CastcleQueryOptions.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/Circle.html":{},"classes/Comment.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"classes/ContentItem.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountDto-1.html":{},"classes/CreateCredentialDto.html":{},"classes/Credential.html":{},"classes/Engagement.html":{},"classes/Feature.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"classes/FollowResponse.html":{},"classes/GuestLoginDto.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"classes/Image.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"classes/LoginDto.html":{},"classes/Otp.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Pagination.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/SaveContentDto.html":{},"classes/SaveCredentialDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Uploader.html":{},"classes/Url.html":{},"classes/User.html":{},"classes/UserImage.html":{},"classes/UserResponseDto.html":{},"classes/UxEngagement.html":{},"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"overview.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["clear",{"_index":3222,"title":{},"body":{"license.html":{}}}],["clicking",{"_index":2733,"title":{},"body":{"index.html":{}}}],["client",{"_index":2591,"title":{},"body":{"classes/UxEngagement.html":{},"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{}}}],["clone",{"_index":2831,"title":{},"body":{"index.html":{}}}],["closely",{"_index":3553,"title":{},"body":{"license.html":{}}}],["cloudfrontprivatekey",{"_index":2172,"title":{},"body":{"classes/Image.html":{}}}],["cluster_appmodule",{"_index":961,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":963,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":962,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_databasemodule",{"_index":1893,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_exports",{"_index":1894,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_providers",{"_index":1895,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_utilsinterceptorsmodule",{"_index":2577,"title":{},"body":{"modules/UtilsInterceptorsModule.html":{}}}],["cluster_utilsinterceptorsmodule_imports",{"_index":2578,"title":{},"body":{"modules/UtilsInterceptorsModule.html":{}}}],["cluster_utilspipesmodule",{"_index":2585,"title":{},"body":{"modules/UtilsPipesModule.html":{},"overview.html":{}}}],["cluster_utilspipesmodule_providers",{"_index":2586,"title":{},"body":{"modules/UtilsPipesModule.html":{},"overview.html":{}}}],["cmd",{"_index":2836,"title":{},"body":{"index.html":{}}}],["code",{"_index":495,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CastcleException.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"interfaces/ErrorStatus.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"index.html":{},"license.html":{}}}],["collect",{"_index":3488,"title":{},"body":{"license.html":{}}}],["collection",{"_index":2645,"title":{},"body":{"injectables/UxEngagementService.html":{}}}],["combine",{"_index":3500,"title":{},"body":{"license.html":{}}}],["combined",{"_index":3178,"title":{},"body":{"license.html":{}}}],["come",{"_index":2935,"title":{},"body":{"license.html":{}}}],["comes",{"_index":3166,"title":{},"body":{"license.html":{}}}],["commands",{"_index":3025,"title":{},"body":{"license.html":{}}}],["comment",{"_index":1080,"title":{"classes/Comment.html":{},"classes/Comment-1.html":{}},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Engagement.html":{},"classes/Feature.html":{},"classes/HashtagItem.html":{},"interfaces/IContent.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/Revision.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{},"miscellaneous/enumerations.html":{}}}],["comment.schema",{"_index":1932,"title":{},"body":{"classes/Engagement.html":{},"classes/HashtagItem.html":{},"classes/Revision.html":{}}}],["commentdocument",{"_index":1340,"title":{},"body":{"classes/Comment-1.html":{},"miscellaneous/typealiases.html":{}}}],["commented",{"_index":1081,"title":{},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/Content.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"interfaces/IContent.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{}}}],["commentschema",{"_index":1343,"title":{},"body":{"classes/Comment-1.html":{}}}],["commercial",{"_index":3264,"title":{},"body":{"license.html":{}}}],["commitment",{"_index":3437,"title":{},"body":{"license.html":{}}}],["common",{"_index":3259,"title":{},"body":{"license.html":{}}}],["common.dto",{"_index":1056,"title":{},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"classes/CreateAccountDto.html":{},"classes/CreateCredentialDto.html":{},"classes/Feature.html":{},"classes/FollowResponse.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/SaveCredentialDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Url.html":{},"classes/UserImage.html":{},"classes/UserResponseDto.html":{}}}],["commondate",{"_index":563,"title":{"injectables/CommonDate.html":{}},"body":{"controllers/AppController.html":{},"injectables/CommonDate.html":{}}}],["communication",{"_index":3077,"title":{},"body":{"license.html":{}}}],["community",{"_index":2738,"title":{},"body":{"index.html":{},"license.html":{}}}],["compilation",{"_index":3173,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":3182,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":3472,"title":{},"body":{"license.html":{}}}],["compiler",{"_index":3057,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":3393,"title":{},"body":{"license.html":{}}}],["comply",{"_index":3104,"title":{},"body":{"license.html":{}}}],["component",{"_index":3047,"title":{},"body":{"license.html":{}}}],["computer",{"_index":2871,"title":{},"body":{"index.html":{},"license.html":{}}}],["concerns",{"_index":3507,"title":{},"body":{"license.html":{}}}],["conditioned",{"_index":3466,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":2960,"title":{},"body":{"license.html":{}}}],["conent",{"_index":1633,"title":{},"body":{"injectables/ContentService.html":{}}}],["config",{"_index":1251,"title":{},"body":{"classes/CastcleName.html":{},"classes/Image.html":{}}}],["configs",{"_index":565,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"classes/Image.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["configs.expire_time",{"_index":2185,"title":{},"body":{"classes/Image.html":{}}}],["configs.image_bucket_folder",{"_index":2188,"title":{},"body":{"classes/Image.html":{}}}],["configs.requiredheaders.acceptlanguague.description",{"_index":598,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["configs.requiredheaders.acceptlanguague.example",{"_index":599,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["configs.requiredheaders.acceptlanguague.name",{"_index":597,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["configs.requiredheaders.acceptversion.description",{"_index":601,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["configs.requiredheaders.acceptversion.example",{"_index":602,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["configs.requiredheaders.acceptversion.name",{"_index":600,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["configs/names",{"_index":1259,"title":{},"body":{"classes/CastcleName.html":{}}}],["configs/names/ban.names",{"_index":1243,"title":{},"body":{"classes/CastcleName.html":{}}}],["configs/names/reserve.names",{"_index":1247,"title":{},"body":{"classes/CastcleName.html":{}}}],["configs/signupemail",{"_index":983,"title":{},"body":{"injectables/AppService.html":{}}}],["connection",{"_index":3456,"title":{},"body":{"license.html":{}}}],["consequence",{"_index":3380,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":3536,"title":{},"body":{"license.html":{}}}],["considered",{"_index":3343,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":3431,"title":{},"body":{"license.html":{}}}],["console.log",{"_index":653,"title":{},"body":{"controllers/AppController.html":{},"classes/Uploader.html":{},"injectables/UserService.html":{}}}],["console.log('delete",{"_index":1941,"title":{},"body":{"classes/Engagement.html":{}}}],["console.log('filter",{"_index":2503,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('from",{"_index":1585,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{},"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{}}}],["console.log('inc",{"_index":1939,"title":{},"body":{"classes/Engagement.html":{}}}],["console.log('saving",{"_index":2483,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('send",{"_index":679,"title":{},"body":{"controllers/AppController.html":{}}}],["console.log('total",{"_index":2517,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(`email",{"_index":1012,"title":{},"body":{"injectables/AppService.html":{}}}],["console.log(`engagements.${(doc",{"_index":1943,"title":{},"body":{"classes/Engagement.html":{}}}],["console.log(incengagment",{"_index":1944,"title":{},"body":{"classes/Engagement.html":{}}}],["console.log(relationships",{"_index":2518,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(result",{"_index":1951,"title":{},"body":{"classes/Engagement.html":{}}}],["console.log(updateresult",{"_index":1707,"title":{},"body":{"injectables/ContentService.html":{}}}],["consolelogger",{"_index":1110,"title":{},"body":{"classes/CastLogger.html":{}}}],["consoleloggeroptions",{"_index":1123,"title":{},"body":{"classes/CastLogger.html":{}}}],["conspicuously",{"_index":3147,"title":{},"body":{"license.html":{}}}],["const",{"_index":106,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"injectables/AppService.html":{},"classes/ArchiveHashtag.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastLogger.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleException.html":{},"classes/CastcleName.html":{},"classes/CastcleQueryOptions.html":{},"classes/Circle.html":{},"classes/Comment.html":{},"classes/Comment-1.html":{},"injectables/CommonDate.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"injectables/ContentsInterceptor.html":{},"classes/ContentsResponse.html":{},"classes/Credential.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialModel.html":{},"interfaces/CredentialRequest.html":{},"modules/DatabaseModule.html":{},"classes/Engagement.html":{},"interfaces/ErrorStatus.html":{},"classes/Feature.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"injectables/FollowInterceptor.html":{},"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Image.html":{},"injectables/ImageInterceptor.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"injectables/LimitPipe.html":{},"classes/Link.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PageInterceptor.html":{},"injectables/PagePipe.html":{},"classes/Pagination.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"interfaces/SignupRequirements.html":{},"injectables/SortByPipe.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{},"classes/Uploader.html":{},"classes/Url.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{},"classes/UxEngagement.html":{},"injectables/UxEngagementService.html":{}}}],["constitutes",{"_index":3094,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":227,"title":{},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-3.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"classes/CastcleException.html":{},"classes/CastcleName.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentService.html":{},"injectables/CredentialInterceptor.html":{},"classes/Image.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"interfaces/SignupRequirements.html":{},"classes/Uploader.html":{},"injectables/UserService.html":{},"injectables/UxEngagementService.html":{}}}],["constructor(_accountmodel",{"_index":1627,"title":{},"body":{"injectables/ContentService.html":{},"injectables/UserService.html":{},"injectables/UxEngagementService.html":{}}}],["constructor(authservice",{"_index":1875,"title":{},"body":{"injectables/CredentialInterceptor.html":{}}}],["constructor(bucket",{"_index":2382,"title":{},"body":{"classes/Uploader.html":{}}}],["constructor(castclestatus",{"_index":1148,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{}}}],["constructor(name",{"_index":1221,"title":{},"body":{"classes/CastcleName.html":{}}}],["constructor(private",{"_index":799,"title":{},"body":{"controllers/AppController-2.html":{},"controllers/AppController-4.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{}}}],["constructor(public",{"_index":1260,"title":{},"body":{"classes/CastcleName.html":{},"classes/Image.html":{},"classes/Uploader.html":{}}}],["constructor(uri",{"_index":2159,"title":{},"body":{"classes/Image.html":{}}}],["construed",{"_index":3476,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":3242,"title":{},"body":{"license.html":{}}}],["contact",{"_index":542,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"license.html":{}}}],["contain",{"_index":1067,"title":{},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{},"license.html":{}}}],["container",{"_index":2872,"title":{},"body":{"index.html":{}}}],["containing",{"_index":3323,"title":{},"body":{"license.html":{}}}],["contains",{"_index":3347,"title":{},"body":{"license.html":{}}}],["content",{"_index":1388,"title":{"classes/Content.html":{}},"body":{"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"classes/ContentItem.html":{},"injectables/ContentService.html":{},"modules/DatabaseModule.html":{},"classes/Engagement.html":{},"classes/HashtagItem.html":{},"interfaces/IContent.html":{},"classes/Revision.html":{},"injectables/UserService.html":{},"index.html":{},"license.html":{}}}],["content's",{"_index":1651,"title":{},"body":{"injectables/ContentService.html":{}}}],["content._id",{"_index":1068,"title":{},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{}}}],["content.author.id",{"_index":1647,"title":{},"body":{"injectables/ContentService.html":{}}}],["content.delete",{"_index":1510,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["content.payload",{"_index":1711,"title":{},"body":{"injectables/ContentService.html":{}}}],["content.save",{"_index":1634,"title":{},"body":{"injectables/ContentService.html":{}}}],["content.schema",{"_index":1596,"title":{},"body":{"classes/ContentItem.html":{},"classes/Engagement.html":{},"classes/HashtagItem.html":{},"classes/Revision.html":{}}}],["content.service",{"_index":2464,"title":{},"body":{"injectables/UserService.html":{}}}],["content.tocontentpayload",{"_index":1500,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["content.type",{"_index":1689,"title":{},"body":{"injectables/ContentService.html":{}}}],["content.visibility",{"_index":1687,"title":{},"body":{"injectables/ContentService.html":{}}}],["content:content",{"_index":1598,"title":{},"body":{"classes/ContentItem.html":{}}}],["contentcontroller",{"_index":1446,"title":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["contentcontroller.name",{"_index":1494,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["contentdocument",{"_index":1403,"title":{},"body":{"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentService.html":{},"classes/Engagement.html":{},"interfaces/IContent.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["contentdocument)._id",{"_index":1413,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["contentdocument).author",{"_index":1414,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["contentdocument).createdat.toisostring",{"_index":1419,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["contentdocument).engagements",{"_index":1415,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["contentdocument).engagements['comment",{"_index":1416,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["contentdocument).engagements['comment'].count",{"_index":1417,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["contentdocument).engagements['like",{"_index":1421,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["contentdocument).engagements['like'].count",{"_index":1422,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["contentdocument).payload",{"_index":1418,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["contentdocument).revisioncount",{"_index":1435,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["contentdocument).type",{"_index":1423,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["contentdocument).updatedat.toisostring",{"_index":1420,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["contentdocument).visibility",{"_index":1434,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["contentdto",{"_index":1630,"title":{},"body":{"injectables/ContentService.html":{}}}],["contentdto.author",{"_index":1678,"title":{},"body":{"injectables/ContentService.html":{}}}],["contentdto.payload",{"_index":1683,"title":{},"body":{"injectables/ContentService.html":{}}}],["contentdto.type",{"_index":1684,"title":{},"body":{"injectables/ContentService.html":{}}}],["contentencoding",{"_index":2398,"title":{},"body":{"classes/Uploader.html":{}}}],["contentimages",{"_index":1561,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["contentinterceptor",{"_index":1493,"title":{"injectables/ContentInterceptor.html":{}},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{},"modules/UtilsInterceptorsModule.html":{}}}],["contentitem",{"_index":1587,"title":{"classes/ContentItem.html":{}},"body":{"classes/ContentItem.html":{},"injectables/UserService.html":{}}}],["contentmodel",{"_index":1430,"title":{},"body":{"classes/Content.html":{},"classes/Engagement.html":{},"interfaces/IContent.html":{}}}],["contentpayloaddto",{"_index":880,"title":{"classes/ContentPayloadDto.html":{}},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/Content.html":{},"injectables/ContentInterceptor.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"injectables/ContentsInterceptor.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"interfaces/IContent.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{}}}],["contentresponse",{"_index":1100,"title":{"classes/ContentResponse.html":{}},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"injectables/ContentsInterceptor.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{}}}],["contentresponse})@useinterceptors(contentinterceptor)@post('feed",{"_index":1465,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["contentresponse})@useinterceptors(contentinterceptor)@put(':id",{"_index":1491,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["contentresponse})@useinterceptors(contentsinterceptor)@apiquery({name",{"_index":2232,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["contentresponse})@useinterceptors(credentialinterceptor)@get",{"_index":1475,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["contentresponse})@useinterceptors(credentialinterceptor)@get(':id",{"_index":1472,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["contentresponse})@useinterceptors(credentialinterceptor)@post(':id/quotecast",{"_index":1481,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["contentresponse})@useinterceptors(credentialinterceptor)@post(':id/recast",{"_index":1484,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["contents",{"_index":924,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"injectables/AppService-3.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{},"injectables/UserService.html":{},"index.html":{},"license.html":{}}}],["contents.items.map((c",{"_index":2290,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["contents.items.map((item",{"_index":926,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["contents.map",{"_index":2539,"title":{},"body":{"injectables/UserService.html":{}}}],["contents.pagination",{"_index":929,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["contents/contents.interceptor",{"_index":2581,"title":{},"body":{"modules/UtilsInterceptorsModule.html":{}}}],["contentschema",{"_index":1408,"title":{},"body":{"classes/Content.html":{},"modules/DatabaseModule.html":{},"interfaces/IContent.html":{}}}],["contentschema.methods.tocontentpayload",{"_index":1410,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["contentschema.post('save",{"_index":1436,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["contentschema.pre('save",{"_index":1432,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["contentschemafactory",{"_index":1428,"title":{},"body":{"classes/Content.html":{},"modules/DatabaseModule.html":{},"interfaces/IContent.html":{}}}],["contentservice",{"_index":873,"title":{"injectables/ContentService.html":{}},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentService.html":{},"modules/DatabaseModule.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["contentservice.getcontentsfromuser",{"_index":2235,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["contentsinterceptor",{"_index":877,"title":{"injectables/ContentsInterceptor.html":{}},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsInterceptorsModule.html":{}}}],["contentsresponse",{"_index":890,"title":{"classes/ContentsResponse.html":{}},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"injectables/ContentInterceptor.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentsInterceptor.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{}}}],["contentsresponse})@apibearerauth()@useinterceptors(contentsinterceptor)@get('me/contents",{"_index":826,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["contentsresponse})@apiquery({name",{"_index":840,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["contenttype",{"_index":839,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"injectables/ContentsInterceptor.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"interfaces/IContent.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"injectables/LimitPipe.html":{},"classes/Link.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PagePipe.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"injectables/SortByPipe.html":{},"classes/Url.html":{},"miscellaneous/enumerations.html":{}}}],["contenttype.blog",{"_index":1085,"title":{},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"injectables/ContentInterceptor.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentsInterceptor.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{}}}],["contenttype.image",{"_index":1086,"title":{},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{}}}],["contenttype.quote",{"_index":1087,"title":{},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/Content.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"interfaces/IContent.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{}}}],["contenttype.recast",{"_index":1088,"title":{},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/Content.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"interfaces/IContent.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{}}}],["contenttype.short",{"_index":1084,"title":{},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{}}}],["contenttypeoption",{"_index":838,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["contenttypepipe",{"_index":887,"title":{"injectables/ContentTypePipe.html":{}},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentTypePipe.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsPipesModule.html":{}}}],["contenttype})@apibearerauth()@apiquery({name",{"_index":841,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["context",{"_index":1115,"title":{},"body":{"classes/CastLogger.html":{},"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{},"injectables/CredentialInterceptor.html":{},"injectables/FollowInterceptor.html":{},"injectables/GuestInterceptor.html":{},"injectables/HeadersInterceptor.html":{},"injectables/ImageInterceptor.html":{},"injectables/PageInterceptor.html":{},"injectables/TokenInterceptor.html":{},"license.html":{}}}],["context.switchtohttp().getrequest",{"_index":1558,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{},"injectables/FollowInterceptor.html":{},"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"injectables/ImageInterceptor.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{}}}],["continue",{"_index":3290,"title":{},"body":{"license.html":{}}}],["continued",{"_index":3275,"title":{},"body":{"license.html":{}}}],["contractual",{"_index":3340,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":3482,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":2898,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":2728,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":2748,"title":{},"body":{"index.html":{}}}],["contributor",{"_index":3421,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":3423,"title":{},"body":{"license.html":{}}}],["control",{"_index":3064,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":3426,"title":{},"body":{"license.html":{}}}],["controller",{"_index":393,"title":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"interfaces/IContent.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["controller('healthy",{"_index":2019,"title":{},"body":{"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{}}}],["controllers",{"_index":395,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsAwsModule.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"overview.html":{}}}],["controllers/healthy/healthy.controller",{"_index":973,"title":{},"body":{"modules/AppModule.html":{}}}],["convenient",{"_index":3015,"title":{},"body":{"license.html":{}}}],["convert",{"_index":1242,"title":{},"body":{"classes/CastcleName.html":{},"injectables/UxEngagementService.html":{}}}],["converttoslug",{"_index":1217,"title":{},"body":{"classes/CastcleName.html":{}}}],["converttoslug(name",{"_index":1236,"title":{},"body":{"classes/CastcleName.html":{}}}],["convey",{"_index":3002,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":3459,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":3285,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":3010,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":3339,"title":{},"body":{"license.html":{}}}],["cooperation",{"_index":2892,"title":{},"body":{"license.html":{}}}],["copies",{"_index":2883,"title":{},"body":{"license.html":{}}}],["copy",{"_index":523,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"license.html":{}}}],["copying",{"_index":2961,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":2887,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":486,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"license.html":{}}}],["copyrightable",{"_index":2971,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":3109,"title":{},"body":{"license.html":{}}}],["correction",{"_index":3530,"title":{},"body":{"license.html":{}}}],["corresponding",{"_index":3060,"title":{},"body":{"license.html":{}}}],["cost",{"_index":3206,"title":{},"body":{"license.html":{}}}],["count",{"_index":1076,"title":{},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"classes/Feature.html":{},"classes/FollowResponse.html":{},"interfaces/IContent.html":{},"interfaces/IUser.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Url.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{}}}],["counter",{"_index":1793,"title":{"classes/Counter.html":{}},"body":{"classes/Counter.html":{},"classes/FollowResponse.html":{},"interfaces/IUser.html":{},"classes/Link-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{}}}],["counterclaim",{"_index":3413,"title":{},"body":{"license.html":{}}}],["countries",{"_index":3000,"title":{},"body":{"license.html":{}}}],["country",{"_index":3451,"title":{},"body":{"license.html":{}}}],["countrycode",{"_index":104,"title":{},"body":{"classes/Account.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{}}}],["court",{"_index":3481,"title":{},"body":{"license.html":{}}}],["courts",{"_index":3552,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":3441,"title":{},"body":{"license.html":{}}}],["cover",{"_index":1060,"title":{},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"injectables/ContentInterceptor.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentsInterceptor.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"classes/Feature.html":{},"injectables/FollowInterceptor.html":{},"classes/FollowResponse.html":{},"interfaces/IUser.html":{},"injectables/ImageInterceptor.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Url.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{}}}],["cover.uri",{"_index":1584,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{},"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{}}}],["cover_url",{"_index":1583,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["coverage",{"_index":3257,"title":{},"body":{"license.html":{}}}],["covered",{"_index":2986,"title":{},"body":{"license.html":{}}}],["coverttouserresponse",{"_index":2414,"title":{},"body":{"interfaces/UserModel.html":{}}}],["coverttouserresponse(user",{"_index":2094,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["crdentiial",{"_index":283,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["create",{"_index":21,"title":{},"body":{"interfaces/AccessTokenPayload.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"injectables/ContentService.html":{},"interfaces/EmailVerifyToken.html":{},"interfaces/MemberAccessTokenPayload.html":{},"interfaces/RefreshTokenPayload.html":{},"interfaces/SignupRequirements.html":{},"index.html":{}}}],["createaccount(accountrequirements",{"_index":247,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["createaccountactivation(account",{"_index":346,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["createaccountdto",{"_index":219,"title":{"classes/CreateAccountDto.html":{},"classes/CreateAccountDto-1.html":{}},"body":{"interfaces/AccountRequirements.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountDto-1.html":{},"classes/CreateCredentialDto.html":{},"classes/SaveCredentialDto.html":{},"interfaces/SignupRequirements.html":{},"interfaces/TokenHeader.html":{}}}],["createcontentfromuser",{"_index":1626,"title":{},"body":{"injectables/ContentService.html":{}}}],["createcontentfromuser(user",{"_index":1629,"title":{},"body":{"injectables/ContentService.html":{}}}],["createcredentialdto",{"_index":218,"title":{"classes/CreateCredentialDto.html":{}},"body":{"interfaces/AccountRequirements.html":{},"classes/CreateAccountDto.html":{},"classes/CreateCredentialDto.html":{},"classes/SaveCredentialDto.html":{},"interfaces/SignupRequirements.html":{}}}],["created",{"_index":1090,"title":{},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/Content.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"classes/Feature.html":{},"classes/FollowResponse.html":{},"interfaces/IContent.html":{},"interfaces/IUser.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Url.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{},"index.html":{}}}],["createdat",{"_index":47,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"classes/AccountAuthenId.html":{},"classes/ArchiveHashtag.html":{},"classes/CastcleBase.html":{},"classes/Circle.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"classes/ContentItem.html":{},"classes/Credential.html":{},"classes/Engagement.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"classes/Otp.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/User.html":{},"classes/UxEngagement.html":{}}}],["createdate",{"_index":1809,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreateAccountDto-1.html":{},"classes/CreateCredentialDto.html":{},"classes/SaveCredentialDto.html":{},"interfaces/TokenHeader.html":{}}}],["createfeedcontent",{"_index":1450,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["createfeedcontent(body",{"_index":1463,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["createpage",{"_index":2215,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["createpage(@req",{"_index":2254,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["createpage(req",{"_index":2221,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["createpagefromcredential",{"_index":2429,"title":{},"body":{"injectables/UserService.html":{}}}],["createpagefromuser",{"_index":2430,"title":{},"body":{"injectables/UserService.html":{}}}],["createpagination",{"_index":1673,"title":{},"body":{"injectables/ContentService.html":{},"injectables/UserService.html":{}}}],["createpagination(options",{"_index":1726,"title":{},"body":{"injectables/ContentService.html":{}}}],["createpagination(queryoption",{"_index":2521,"title":{},"body":{"injectables/UserService.html":{}}}],["createresult",{"_index":2655,"title":{},"body":{"injectables/UxEngagementService.html":{}}}],["creating",{"_index":2729,"title":{},"body":{"index.html":{}}}],["credential",{"_index":259,"title":{"classes/Credential.html":{}},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"classes/Credential.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialModel.html":{},"interfaces/CredentialRequest.html":{},"modules/DatabaseModule.html":{},"interfaces/ICredential-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"interfaces/SignupRequirements.html":{},"injectables/UserService.html":{}}}],["credential.account",{"_index":278,"title":{},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"interfaces/SignupRequirements.html":{}}}],["credential.account._id",{"_index":2465,"title":{},"body":{"injectables/UserService.html":{}}}],["credential.deviceuuid",{"_index":290,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["credential.isrefreshtokenvalid",{"_index":693,"title":{},"body":{"controllers/AppController.html":{}}}],["credential.renewaccesstoken",{"_index":695,"title":{},"body":{"controllers/AppController.html":{}}}],["credential.renewtokens",{"_index":655,"title":{},"body":{"controllers/AppController.html":{}}}],["credential.save",{"_index":270,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["credential.schema",{"_index":91,"title":{},"body":{"classes/Account.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{}}}],["credential/credential.interceptor",{"_index":1533,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{},"modules/UtilsInterceptorsModule.html":{}}}],["credentialaccount",{"_index":285,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["credentialaccount.credentials",{"_index":287,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["credentialaccount.credentials.push",{"_index":288,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["credentialaccount.save",{"_index":291,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["credentialdocument",{"_index":89,"title":{},"body":{"classes/Account.html":{},"interfaces/AccountRequirements.html":{},"injectables/ContentService.html":{},"classes/Credential.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialModel.html":{},"interfaces/CredentialRequest.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/SignupRequirements.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["credentialdocument).accesstoken",{"_index":1862,"title":{},"body":{"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{}}}],["credentialdocument).accesstokenexpiredate",{"_index":1863,"title":{},"body":{"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{}}}],["credentialdocument).account.visibility",{"_index":1871,"title":{},"body":{"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{}}}],["credentialdocument).refreshtoken",{"_index":1864,"title":{},"body":{"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{}}}],["credentialdocument).refreshtokenexpiredate",{"_index":1865,"title":{},"body":{"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{}}}],["credentialdocument.deviceuuid",{"_index":276,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["credentialdocument.isaccesstokenvalid",{"_index":321,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["credentialinterceptor",{"_index":568,"title":{"injectables/CredentialInterceptor.html":{}},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{},"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PageInterceptor.html":{},"modules/UtilsInterceptorsModule.html":{}}}],["credentialinterceptor:36",{"_index":2297,"title":{},"body":{"injectables/PageInterceptor.html":{}}}],["credentialinterceptor:40",{"_index":2193,"title":{},"body":{"injectables/ImageInterceptor.html":{}}}],["credentialinterceptor:68",{"_index":1790,"title":{},"body":{"injectables/ContentsInterceptor.html":{}}}],["credentialinterceptor:72",{"_index":1967,"title":{},"body":{"injectables/FollowInterceptor.html":{}}}],["credentialinterceptor:83",{"_index":1532,"title":{},"body":{"injectables/ContentInterceptor.html":{}}}],["credentialmodel",{"_index":127,"title":{"interfaces/CredentialModel.html":{}},"body":{"classes/Account.html":{},"interfaces/AccountRequirements.html":{},"injectables/ContentService.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/SignupRequirements.html":{},"injectables/UserService.html":{}}}],["credentialmodel.generateaccesstoken(accesstokenpayload",{"_index":1861,"title":{},"body":{"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{}}}],["credentialmodel.generateaccesstoken(payload",{"_index":1867,"title":{},"body":{"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{}}}],["credentialmodel.generaterefreshtoken(refreshtokenpayload",{"_index":1860,"title":{},"body":{"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{}}}],["credentialrequest",{"_index":411,"title":{"interfaces/CredentialRequest.html":{}},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{},"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PageInterceptor.html":{},"modules/UtilsInterceptorsModule.html":{}}}],["credentials",{"_index":41,"title":{},"body":{"classes/Account.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{}}}],["credentialschema",{"_index":90,"title":{},"body":{"classes/Account.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"modules/DatabaseModule.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{}}}],["credentialschema.methods.isaccesstokenvalid",{"_index":1870,"title":{},"body":{"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{}}}],["credentialschema.methods.isrefreshtokenvalid",{"_index":1872,"title":{},"body":{"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{}}}],["credentialschema.methods.renewaccesstoken",{"_index":1866,"title":{},"body":{"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{}}}],["credentialschema.methods.renewtokens",{"_index":1859,"title":{},"body":{"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{}}}],["credentialschema.statics.generateaccesstoken",{"_index":1845,"title":{},"body":{"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{}}}],["credentialschema.statics.generaterefreshtoken",{"_index":1850,"title":{},"body":{"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{}}}],["credentialschemafactory",{"_index":1873,"title":{},"body":{"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"modules/DatabaseModule.html":{},"interfaces/ICredential-1.html":{}}}],["criterion",{"_index":3029,"title":{},"body":{"license.html":{}}}],["cron",{"_index":2534,"title":{},"body":{"injectables/UserService.html":{}}}],["cross",{"_index":3411,"title":{},"body":{"license.html":{}}}],["crucial",{"_index":2727,"title":{},"body":{"index.html":{}}}],["cure",{"_index":3373,"title":{},"body":{"license.html":{}}}],["current",{"_index":293,"title":{},"body":{"interfaces/AccountRequirements.html":{},"injectables/ContentService.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"interfaces/SignupRequirements.html":{}}}],["currentaccount",{"_index":665,"title":{},"body":{"controllers/AppController.html":{}}}],["currentaccount.email",{"_index":667,"title":{},"body":{"controllers/AppController.html":{}}}],["currentuser",{"_index":941,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["currentuser.follow(followeduser",{"_index":945,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["currentuser.owneraccount",{"_index":943,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["currentuser.unfollow(followeduser",{"_index":947,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["custodian",{"_index":2769,"title":{},"body":{"index.html":{}}}],["customarily",{"_index":3197,"title":{},"body":{"license.html":{}}}],["customary",{"_index":3497,"title":{},"body":{"license.html":{}}}],["customer",{"_index":3203,"title":{},"body":{"license.html":{}}}],["d",{"_index":3172,"title":{},"body":{"license.html":{}}}],["damages",{"_index":3534,"title":{},"body":{"license.html":{}}}],["data",{"_index":1557,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{},"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{},"injectables/PageInterceptor.html":{},"injectables/UxEngagementService.html":{},"index.html":{},"license.html":{}}}],["data.avatar",{"_index":2298,"title":{},"body":{"injectables/PageInterceptor.html":{}}}],["data.cover",{"_index":2300,"title":{},"body":{"injectables/PageInterceptor.html":{}}}],["data.images",{"_index":1976,"title":{},"body":{"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{}}}],["data.images.avatar",{"_index":1977,"title":{},"body":{"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{}}}],["data.images.cover",{"_index":1979,"title":{},"body":{"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{}}}],["data.payload",{"_index":1554,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{},"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{}}}],["data.payload.map((payload",{"_index":1555,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["data.payload.map((response",{"_index":1981,"title":{},"body":{"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{}}}],["databasemodule",{"_index":964,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules.html":{},"overview.html":{}}}],["datasci",{"_index":1590,"title":{},"body":{"classes/ContentItem.html":{}}}],["date",{"_index":50,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"interfaces/AccountRequirements.html":{},"classes/ArchiveHashtag.html":{},"classes/CastcleBase.html":{},"classes/Circle.html":{},"classes/Comment-1.html":{},"injectables/CommonDate.html":{},"classes/Content.html":{},"classes/ContentItem.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountDto-1.html":{},"classes/CreateCredentialDto.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"classes/Engagement.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/SaveCredentialDto.html":{},"interfaces/SignupRequirements.html":{},"interfaces/TokenHeader.html":{},"classes/User.html":{},"classes/UxEngagement.html":{},"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{},"injectables/UxEngagementService.html":{},"license.html":{}}}],["date().gettime",{"_index":2066,"title":{},"body":{"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{}}}],["date(dt.gettime",{"_index":1382,"title":{},"body":{"injectables/CommonDate.html":{}}}],["date(moment().utcoffset(offset).format",{"_index":1376,"title":{},"body":{"injectables/CommonDate.html":{}}}],["date(moment(dt).add(mon",{"_index":1384,"title":{},"body":{"injectables/CommonDate.html":{}}}],["date(moment(dt).add(year",{"_index":1386,"title":{},"body":{"injectables/CommonDate.html":{}}}],["date(moment(str).format(format",{"_index":1378,"title":{},"body":{"injectables/CommonDate.html":{}}}],["date(now.gettime",{"_index":2062,"title":{},"body":{"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{}}}],["date(number(info.timestamp",{"_index":2654,"title":{},"body":{"injectables/UxEngagementService.html":{}}}],["date.now",{"_index":2393,"title":{},"body":{"classes/Uploader.html":{}}}],["day",{"_index":1353,"title":{},"body":{"injectables/CommonDate.html":{}}}],["days",{"_index":3369,"title":{},"body":{"license.html":{}}}],["dd",{"_index":735,"title":{},"body":{"controllers/AppController.html":{}}}],["ddthh:mm:ss",{"_index":1375,"title":{},"body":{"injectables/CommonDate.html":{}}}],["deactivate",{"_index":2450,"title":{},"body":{"injectables/UserService.html":{}}}],["deactivated",{"_index":2526,"title":{},"body":{"injectables/UserService.html":{}}}],["deactive",{"_index":2431,"title":{},"body":{"injectables/UserService.html":{}}}],["debug",{"_index":1133,"title":{},"body":{"classes/CastLogger.html":{}}}],["december",{"_index":3130,"title":{},"body":{"license.html":{}}}],["decentralize",{"_index":2765,"title":{},"body":{"index.html":{}}}],["decentralized",{"_index":2707,"title":{},"body":{"index.html":{}}}],["decentralizing",{"_index":2721,"title":{},"body":{"index.html":{}}}],["decide",{"_index":3515,"title":{},"body":{"license.html":{}}}],["deck",{"_index":2820,"title":{},"body":{"index.html":{}}}],["declining",{"_index":3332,"title":{},"body":{"license.html":{}}}],["decorators",{"_index":51,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"classes/AccountAuthenId.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"classes/ArchiveHashtag.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleBase.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/Circle.html":{},"classes/Comment.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"classes/ContentItem.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"classes/Credential.html":{},"classes/Engagement.html":{},"classes/Feature.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"classes/FollowResponse.html":{},"classes/GuestLoginDto.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"classes/LoginDto.html":{},"classes/Otp.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Pagination.html":{},"classes/Participant.html":{},"classes/Recast.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Url.html":{},"classes/User.html":{},"classes/UserImage.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{},"classes/UxEngagement.html":{},"classes/UxEngagementBody.html":{},"injectables/UxEngagementService.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["deemed",{"_index":3120,"title":{},"body":{"license.html":{}}}],["default",{"_index":849,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleQueryOptions.html":{},"classes/Circle.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"classes/CreateAccountDto.html":{},"injectables/LimitPipe.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{},"classes/Uploader.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["default_content_query_options",{"_index":881,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"injectables/LimitPipe.html":{},"classes/Link.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PagePipe.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"injectables/SortByPipe.html":{},"classes/Url.html":{}}}],["default_content_query_options.limit",{"_index":853,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["default_content_query_options.page",{"_index":852,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["default_content_query_options.sortby",{"_index":851,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["default_content_query_options.type",{"_index":854,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["default_query_options",{"_index":1306,"title":{},"body":{"classes/CastcleQueryOptions.html":{},"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"injectables/PagePipe.html":{},"classes/Pagination.html":{},"injectables/SortByPipe.html":{},"injectables/UserService.html":{}}}],["default_query_options.page",{"_index":1785,"title":{},"body":{"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{}}}],["default_query_options.sortby",{"_index":1780,"title":{},"body":{"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{}}}],["defaultformat",{"_index":1374,"title":{},"body":{"injectables/CommonDate.html":{}}}],["defaultoffset",{"_index":1372,"title":{},"body":{"injectables/CommonDate.html":{}}}],["defective",{"_index":3526,"title":{},"body":{"license.html":{}}}],["defending",{"_index":2923,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":3478,"title":{},"body":{"license.html":{}}}],["defined",{"_index":53,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"injectables/AppService-4.html":{},"injectables/AppService-5.html":{},"injectables/AppService-6.html":{},"classes/ArchiveHashtag.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastLogger.html":{},"classes/CastcleBase.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleException.html":{},"classes/CastcleName.html":{},"classes/CastcleQueryOptions.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/Circle.html":{},"classes/Comment.html":{},"classes/Comment-1.html":{},"injectables/CommonDate.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"classes/ContentItem.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"injectables/ContentsInterceptor.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountDto-1.html":{},"classes/CreateCredentialDto.html":{},"classes/Credential.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialModel.html":{},"classes/Engagement.html":{},"classes/Feature.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"injectables/FollowInterceptor.html":{},"classes/FollowResponse.html":{},"injectables/GuestInterceptor.html":{},"classes/GuestLoginDto.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"injectables/HeadersInterceptor.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Image.html":{},"injectables/ImageInterceptor.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"injectables/LimitPipe.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"classes/LoginDto.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/PageDto.html":{},"injectables/PageInterceptor.html":{},"injectables/PagePipe.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Pagination.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/SaveContentDto.html":{},"classes/SaveCredentialDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"injectables/SortByPipe.html":{},"classes/SuggestCastcleIdReponse.html":{},"injectables/TokenInterceptor.html":{},"classes/TokenResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Uploader.html":{},"classes/Url.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{},"classes/UxEngagement.html":{},"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{},"injectables/UxEngagementService.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"license.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["definition",{"_index":3069,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":2964,"title":{},"body":{"license.html":{}}}],["defualt",{"_index":1433,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["delete",{"_index":384,"title":{},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"interfaces/SignupRequirements.html":{},"injectables/UserService.html":{}}}],["delete(':id",{"_index":1509,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["delete('me",{"_index":918,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["delete('pages/:id",{"_index":2283,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["deletecontentfromid",{"_index":1451,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentService.html":{},"injectables/UserService.html":{}}}],["deletecontentfromid(id",{"_index":1467,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["deleted",{"_index":1309,"title":{},"body":{"classes/CastcleQueryOptions.html":{},"injectables/ContentService.html":{},"classes/Pagination.html":{},"miscellaneous/enumerations.html":{}}}],["deletemydata",{"_index":807,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["deletemydata(@req",{"_index":919,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["deletemydata(req",{"_index":817,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["deleteone",{"_index":2153,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["deletepage",{"_index":2216,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["deletepage(@req",{"_index":2284,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["deletepage(req",{"_index":2225,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["deleteuserfromid",{"_index":2432,"title":{},"body":{"injectables/UserService.html":{}}}],["demonstrating",{"_index":2776,"title":{},"body":{"index.html":{}}}],["denied",{"_index":3292,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":3438,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":960,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsPipesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":2840,"title":{},"body":{"index.html":{}}}],["deploy",{"_index":2868,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":2863,"title":{},"body":{"index.html":{}}}],["deprive",{"_index":3447,"title":{},"body":{"license.html":{}}}],["desc",{"_index":933,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleQueryOptions.html":{},"classes/Comment.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"injectables/LimitPipe.html":{},"classes/Link.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PagePipe.html":{},"classes/Pagination.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"injectables/SortByPipe.html":{},"classes/Url.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["description",{"_index":426,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"classes/ContentItem.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{}}}],["designated",{"_index":3214,"title":{},"body":{"license.html":{}}}],["designed",{"_index":2890,"title":{},"body":{"license.html":{}}}],["desktop",{"_index":2830,"title":{},"body":{"index.html":{}}}],["destination",{"_index":2380,"title":{},"body":{"classes/Uploader.html":{}}}],["detail",{"_index":2087,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{},"license.html":{}}}],["details",{"_index":522,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"interfaces/IUser.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"index.html":{},"license.html":{}}}],["determining",{"_index":3253,"title":{},"body":{"license.html":{}}}],["dev",{"_index":2844,"title":{},"body":{"index.html":{}}}],["dev.castcle.com",{"_index":2181,"title":{},"body":{"classes/Image.html":{}}}],["develop",{"_index":3561,"title":{},"body":{"license.html":{}}}],["developers",{"_index":2914,"title":{},"body":{"license.html":{}}}],["device",{"_index":203,"title":{},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"classes/CreateAccountDto.html":{},"classes/CreateCredentialDto.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{},"interfaces/ICredential-1.html":{},"classes/SaveCredentialDto.html":{},"interfaces/SignupRequirements.html":{}}}],["deviceuuid",{"_index":100,"title":{},"body":{"classes/Account.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/CreateAccountDto.html":{},"classes/CreateCredentialDto.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"classes/GuestLoginDto.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"classes/LoginDto.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/SaveCredentialDto.html":{},"interfaces/SignupRequirements.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["differ",{"_index":3504,"title":{},"body":{"license.html":{}}}],["different",{"_index":2955,"title":{},"body":{"license.html":{}}}],["differently",{"_index":3317,"title":{},"body":{"license.html":{}}}],["digital",{"_index":2802,"title":{},"body":{"index.html":{}}}],["direction",{"_index":3107,"title":{},"body":{"license.html":{}}}],["directions",{"_index":3223,"title":{},"body":{"license.html":{}}}],["directly",{"_index":2990,"title":{},"body":{"license.html":{}}}],["disclaim",{"_index":3140,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":3519,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":3314,"title":{},"body":{"license.html":{}}}],["discretion",{"_index":2781,"title":{},"body":{"index.html":{}}}],["discriminatory",{"_index":3463,"title":{},"body":{"license.html":{}}}],["display",{"_index":677,"title":{},"body":{"controllers/AppController.html":{},"license.html":{}}}],["displayed",{"_index":3322,"title":{},"body":{"license.html":{}}}],["displayid",{"_index":225,"title":{},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"interfaces/IUser.html":{},"interfaces/SignupRequirements.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{}}}],["displayname",{"_index":25,"title":{},"body":{"interfaces/AccessTokenPayload.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/Comment.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"interfaces/EmailVerifyToken.html":{},"classes/Feature.html":{},"classes/FollowResponse.html":{},"classes/GuestLoginDto.html":{},"interfaces/IUser.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"classes/LoginDto.html":{},"interfaces/MemberAccessTokenPayload.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"interfaces/RefreshTokenPayload.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"interfaces/SignupRequirements.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Url.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["displays",{"_index":3012,"title":{},"body":{"license.html":{}}}],["disrupting",{"_index":2785,"title":{},"body":{"index.html":{}}}],["distinguishing",{"_index":3508,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":2881,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":509,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"license.html":{}}}],["distributing",{"_index":2747,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribution",{"_index":2962,"title":{},"body":{"license.html":{}}}],["dminnox3",{"_index":646,"title":{},"body":{"controllers/AppController.html":{}}}],["dob",{"_index":1801,"title":{},"body":{"classes/Counter.html":{},"classes/FollowResponse.html":{},"interfaces/IUser.html":{},"classes/Link-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{}}}],["doc",{"_index":134,"title":{},"body":{"classes/Account.html":{},"classes/Content.html":{},"classes/Engagement.html":{},"interfaces/IAccount.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{}}}],["doc._id",{"_index":137,"title":{},"body":{"classes/Account.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{}}}],["doc.payload",{"_index":1427,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["doc.type",{"_index":1426,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["docker",{"_index":2867,"title":{},"body":{"index.html":{}}}],["dockerfile",{"_index":2866,"title":{},"body":{"index.html":{}}}],["dockerize",{"_index":2864,"title":{},"body":{"index.html":{}}}],["document",{"_index":80,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"interfaces/AccountRequirements.html":{},"classes/ArchiveHashtag.html":{},"classes/Circle.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"classes/Engagement.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"interfaces/SignupRequirements.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UxEngagement.html":{},"injectables/UxEngagementService.html":{},"license.html":{}}}],["documented",{"_index":3300,"title":{},"body":{"license.html":{}}}],["don't",{"_index":2764,"title":{},"body":{"index.html":{}}}],["dono",{"_index":1942,"title":{},"body":{"classes/Engagement.html":{}}}],["dont",{"_index":1946,"title":{},"body":{"classes/Engagement.html":{}}}],["doubtful",{"_index":3254,"title":{},"body":{"license.html":{}}}],["down",{"_index":2789,"title":{},"body":{"index.html":{}}}],["download",{"_index":2822,"title":{},"body":{"index.html":{}}}],["downstream",{"_index":3390,"title":{},"body":{"license.html":{}}}],["drug",{"_index":2777,"title":{},"body":{"index.html":{}}}],["dt",{"_index":727,"title":{},"body":{"controllers/AppController.html":{},"injectables/CommonDate.html":{}}}],["dt.getdateformat",{"_index":729,"title":{},"body":{"controllers/AppController.html":{}}}],["dt.getdatefromstring('1981",{"_index":730,"title":{},"body":{"controllers/AppController.html":{}}}],["dto",{"_index":1632,"title":{},"body":{"injectables/ContentService.html":{},"injectables/UserService.html":{}}}],["dtos",{"_index":2463,"title":{},"body":{"injectables/UserService.html":{}}}],["dtos/account.dto",{"_index":220,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["dtos/common.dto",{"_index":95,"title":{},"body":{"classes/Account.html":{},"interfaces/AccountRequirements.html":{},"classes/CastcleBase.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"classes/Engagement.html":{},"interfaces/IAccount.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IUser.html":{},"interfaces/SignupRequirements.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{}}}],["dtos/content.dto",{"_index":1396,"title":{},"body":{"classes/Content.html":{},"injectables/ContentService.html":{},"interfaces/IContent.html":{}}}],["dtos/dto",{"_index":593,"title":{},"body":{"controllers/AppController.html":{}}}],["dtos/token.dto",{"_index":159,"title":{},"body":{"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/AccountRequirements.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/IAccountActivation.html":{},"interfaces/ICredential-1.html":{},"interfaces/SignupRequirements.html":{}}}],["dtos/user.dto",{"_index":1676,"title":{},"body":{"injectables/ContentService.html":{},"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{}}}],["dtos/ux.engagement.dto",{"_index":2651,"title":{},"body":{"injectables/UxEngagementService.html":{}}}],["durable",{"_index":3196,"title":{},"body":{"license.html":{}}}],["dwelling",{"_index":3252,"title":{},"body":{"license.html":{}}}],["dynamically",{"_index":3072,"title":{},"body":{"license.html":{}}}],["e",{"_index":3229,"title":{},"body":{"license.html":{}}}],["e.g",{"_index":2750,"title":{},"body":{"index.html":{}}}],["each",{"_index":2525,"title":{},"body":{"injectables/UserService.html":{},"index.html":{},"license.html":{}}}],["earlier",{"_index":2984,"title":{},"body":{"license.html":{}}}],["earn",{"_index":2741,"title":{},"body":{"index.html":{}}}],["ecosystem",{"_index":2812,"title":{},"body":{"index.html":{}}}],["educations",{"_index":2084,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["effect",{"_index":3549,"title":{},"body":{"license.html":{}}}],["effected",{"_index":3137,"title":{},"body":{"license.html":{}}}],["effective",{"_index":2546,"title":{},"body":{"injectables/UserService.html":{},"license.html":{}}}],["effectively",{"_index":3568,"title":{},"body":{"license.html":{}}}],["efforts",{"_index":3405,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":3575,"title":{},"body":{"license.html":{}}}],["email",{"_index":26,"title":{},"body":{"interfaces/AccessTokenPayload.html":{},"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/Counter.html":{},"interfaces/EmailVerifyToken.html":{},"classes/FollowResponse.html":{},"classes/GuestLoginDto.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/ICredential.html":{},"classes/Link-1.html":{},"classes/LoginDto.html":{},"interfaces/MemberAccessTokenPayload.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"interfaces/RefreshTokenPayload.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"interfaces/SignupRequirements.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserImage.html":{},"classes/UserResponseDto.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"miscellaneous/enumerations.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["email_or_phone_is_exist",{"_index":1192,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["email_or_phone_notfound",{"_index":1176,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["emailtokenresult",{"_index":348,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["emailtokenresult.verifytoken",{"_index":350,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["emailtokenresult.verifytokenexpiredate",{"_index":351,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["emailverifytoken",{"_index":30,"title":{"interfaces/EmailVerifyToken.html":{}},"body":{"interfaces/AccessTokenPayload.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/AccountRequirements.html":{},"interfaces/EmailVerifyToken.html":{},"interfaces/IAccountActivation.html":{},"interfaces/MemberAccessTokenPayload.html":{},"interfaces/RefreshTokenPayload.html":{},"interfaces/SignupRequirements.html":{}}}],["embed",{"_index":688,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/IUser.html":{},"classes/Relationship.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["embedcredentialbydeviceuuid",{"_index":628,"title":{},"body":{"controllers/AppController.html":{}}}],["embodied",{"_index":3192,"title":{},"body":{"license.html":{}}}],["employer",{"_index":3586,"title":{},"body":{"license.html":{}}}],["en",{"_index":1206,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"classes/Uploader.html":{}}}],["enable",{"_index":3049,"title":{},"body":{"license.html":{}}}],["enables",{"_index":3004,"title":{},"body":{"license.html":{}}}],["encouraged",{"_index":2930,"title":{},"body":{"license.html":{}}}],["encryptpassword",{"_index":116,"title":{},"body":{"classes/Account.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{}}}],["end",{"_index":3560,"title":{},"body":{"license.html":{}}}],["enforce",{"_index":3439,"title":{},"body":{"license.html":{}}}],["enforcing",{"_index":3143,"title":{},"body":{"license.html":{}}}],["eng.user.displayname",{"_index":1745,"title":{},"body":{"injectables/ContentService.html":{}}}],["engagement",{"_index":1406,"title":{"classes/Engagement.html":{}},"body":{"classes/Content.html":{},"injectables/ContentService.html":{},"modules/DatabaseModule.html":{},"classes/Engagement.html":{},"interfaces/IContent.html":{},"injectables/UserService.html":{}}}],["engagement.remove",{"_index":1736,"title":{},"body":{"injectables/ContentService.html":{}}}],["engagement.save",{"_index":1735,"title":{},"body":{"injectables/ContentService.html":{},"injectables/UserService.html":{}}}],["engagement.schema",{"_index":1401,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["engagement.type",{"_index":1733,"title":{},"body":{"injectables/ContentService.html":{}}}],["engagement.user._id",{"_index":1743,"title":{},"body":{"injectables/ContentService.html":{}}}],["engagement.visibility",{"_index":1734,"title":{},"body":{"injectables/ContentService.html":{},"injectables/UserService.html":{}}}],["engagementdocument",{"_index":1399,"title":{},"body":{"classes/Content.html":{},"injectables/ContentService.html":{},"classes/Engagement.html":{},"interfaces/IContent.html":{},"miscellaneous/typealiases.html":{}}}],["engagementdocument).targetref.$id",{"_index":1940,"title":{},"body":{"classes/Engagement.html":{}}}],["engagementdocument).targetref.oid",{"_index":1950,"title":{},"body":{"classes/Engagement.html":{}}}],["engagementdocument).type}.count",{"_index":1938,"title":{},"body":{"classes/Engagement.html":{}}}],["engagementdocument).visibility",{"_index":1936,"title":{},"body":{"classes/Engagement.html":{}}}],["engagementkey",{"_index":1341,"title":{},"body":{"classes/Comment-1.html":{},"classes/Content.html":{},"interfaces/IContent.html":{}}}],["engagementmodel",{"_index":1425,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["engagements",{"_index":1016,"title":{},"body":{"injectables/AppService-1.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"interfaces/IContent.html":{},"injectables/UserService.html":{}}}],["engagements.map((engagement",{"_index":2549,"title":{},"body":{"injectables/UserService.html":{}}}],["engagementschema",{"_index":1933,"title":{},"body":{"classes/Engagement.html":{}}}],["engagementschema.post('remove",{"_index":1948,"title":{},"body":{"classes/Engagement.html":{}}}],["engagementschema.post('save",{"_index":1935,"title":{},"body":{"classes/Engagement.html":{}}}],["engagementschemafactory",{"_index":1910,"title":{},"body":{"modules/DatabaseModule.html":{},"classes/Engagement.html":{}}}],["engagementtype",{"_index":1400,"title":{},"body":{"classes/Content.html":{},"injectables/ContentService.html":{},"classes/Engagement.html":{},"interfaces/IContent.html":{},"miscellaneous/enumerations.html":{}}}],["engagementtype.like",{"_index":1731,"title":{},"body":{"injectables/ContentService.html":{}}}],["engagementtype.quote",{"_index":1694,"title":{},"body":{"injectables/ContentService.html":{}}}],["engagementtype.recast",{"_index":1695,"title":{},"body":{"injectables/ContentService.html":{}}}],["engagementux",{"_index":2647,"title":{},"body":{"injectables/UxEngagementService.html":{}}}],["ensure",{"_index":2891,"title":{},"body":{"license.html":{}}}],["entered",{"_index":3473,"title":{},"body":{"license.html":{}}}],["entire",{"_index":3165,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":3491,"title":{},"body":{"license.html":{}}}],["entity",{"_index":3394,"title":{},"body":{"license.html":{}}}],["entityvisibility",{"_index":73,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"classes/AccountAuthenId.html":{},"interfaces/AccountRequirements.html":{},"classes/ArchiveHashtag.html":{},"classes/CastcleBase.html":{},"classes/CastcleQueryOptions.html":{},"classes/Circle.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"classes/ContentItem.html":{},"injectables/ContentService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateCredentialDto.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"classes/Engagement.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"interfaces/IAccount.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IUser.html":{},"classes/Otp.html":{},"classes/Pagination.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/SaveCredentialDto.html":{},"interfaces/SignupRequirements.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{},"classes/UxEngagement.html":{},"miscellaneous/enumerations.html":{}}}],["entityvisibility.deleted",{"_index":1688,"title":{},"body":{"injectables/ContentService.html":{},"injectables/UserService.html":{}}}],["entityvisibility.hidden",{"_index":2550,"title":{},"body":{"injectables/UserService.html":{}}}],["entityvisibility.publish",{"_index":132,"title":{},"body":{"classes/Account.html":{},"interfaces/AccountRequirements.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateCredentialDto.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"classes/Engagement.html":{},"interfaces/IAccount.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IUser.html":{},"classes/SaveCredentialDto.html":{},"interfaces/SignupRequirements.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{}}}],["enum",{"_index":98,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleException.html":{},"classes/CastcleQueryOptions.html":{},"classes/Circle.html":{},"classes/Comment.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentTypePipe.html":{},"classes/ContentsResponse.html":{},"classes/Engagement.html":{},"interfaces/ErrorStatus.html":{},"classes/Feature.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/ICredential.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"injectables/LimitPipe.html":{},"classes/Link.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PagePipe.html":{},"classes/Pagination.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"injectables/SortByPipe.html":{},"classes/Url.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["enumerations",{"_index":2683,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":86,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CastLogger.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"modules/DatabaseModule.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"classes/Image.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{}}}],["env.assets_bucket_name",{"_index":2186,"title":{},"body":{"classes/Image.html":{}}}],["env.assets_host",{"_index":2179,"title":{},"body":{"classes/Image.html":{}}}],["env.cloudfront_access_key_id",{"_index":2176,"title":{},"body":{"classes/Image.html":{}}}],["env.db_options",{"_index":1927,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["env.jwt_access_secret",{"_index":1849,"title":{},"body":{"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{}}}],["env.jwt_refresh_secret",{"_index":1854,"title":{},"body":{"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{}}}],["env.jwt_verify_secret",{"_index":170,"title":{},"body":{"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/IAccountActivation.html":{}}}],["env.otp_expires_in",{"_index":2063,"title":{},"body":{"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{}}}],["env.production",{"_index":1132,"title":{},"body":{"classes/CastLogger.html":{}}}],["env.smtp_host",{"_index":987,"title":{},"body":{"injectables/AppService.html":{}}}],["env.smtp_password",{"_index":1000,"title":{},"body":{"injectables/AppService.html":{}}}],["env.smtp_port",{"_index":990,"title":{},"body":{"injectables/AppService.html":{}}}],["env.smtp_username",{"_index":995,"title":{},"body":{"injectables/AppService.html":{}}}],["environment",{"_index":85,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CastLogger.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"modules/DatabaseModule.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"classes/Image.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{}}}],["environments",{"_index":2873,"title":{},"body":{"index.html":{}}}],["equivalent",{"_index":3096,"title":{},"body":{"license.html":{}}}],["error",{"_index":622,"title":{},"body":{"controllers/AppController.html":{},"classes/CastLogger.html":{},"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"classes/Uploader.html":{},"injectables/UserService.html":{}}}],["error(message",{"_index":1113,"title":{},"body":{"classes/CastLogger.html":{}}}],["errorlanguage",{"_index":2400,"title":{},"body":{"classes/Uploader.html":{}}}],["errormessages",{"_index":1150,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{}}}],["errormessages[castclestatus",{"_index":1207,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{}}}],["errorstatus",{"_index":1204,"title":{"interfaces/ErrorStatus.html":{}},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{}}}],["especially",{"_index":2782,"title":{},"body":{"index.html":{}}}],["essential",{"_index":3051,"title":{},"body":{"license.html":{}}}],["etc",{"_index":2735,"title":{},"body":{"index.html":{}}}],["ethereal",{"_index":998,"title":{},"body":{"injectables/AppService.html":{}}}],["even",{"_index":514,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"license.html":{}}}],["event",{"_index":3532,"title":{},"body":{"license.html":{}}}],["eventdata",{"_index":2592,"title":{},"body":{"classes/UxEngagement.html":{},"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{}}}],["eventhough",{"_index":2767,"title":{},"body":{"index.html":{}}}],["eventtype",{"_index":2593,"title":{},"body":{"classes/UxEngagement.html":{},"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{}}}],["everyone",{"_index":2710,"title":{},"body":{"index.html":{},"license.html":{}}}],["everything",{"_index":2766,"title":{},"body":{"index.html":{}}}],["exact",{"_index":2983,"title":{},"body":{"license.html":{}}}],["example",{"_index":439,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"index.html":{},"license.html":{}}}],["except",{"_index":2996,"title":{},"body":{"license.html":{}}}],["exception.module.ts",{"_index":2574,"title":{},"body":{"modules/UtilsExceptionModule.html":{}}}],["exceptions",{"_index":3303,"title":{},"body":{"license.html":{}}}],["excluded",{"_index":3240,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":3477,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":3570,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":3432,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":3102,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":3483,"title":{},"body":{"license.html":{}}}],["exec",{"_index":143,"title":{},"body":{"classes/Account.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"injectables/ContentService.html":{},"classes/Engagement.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"interfaces/SignupRequirements.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{}}}],["execpopulate",{"_index":2120,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["executable",{"_index":3042,"title":{},"body":{"license.html":{}}}],["execute",{"_index":3273,"title":{},"body":{"license.html":{}}}],["executing",{"_index":2842,"title":{},"body":{"index.html":{},"license.html":{}}}],["executioncontext",{"_index":1530,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{},"injectables/FollowInterceptor.html":{},"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"injectables/ImageInterceptor.html":{},"injectables/PageInterceptor.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{}}}],["exercise",{"_index":3406,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":3138,"title":{},"body":{"license.html":{}}}],["exist",{"_index":362,"title":{},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"classes/CastcleName.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/GuestLoginDto.html":{},"interfaces/IOtp.html":{},"classes/LoginDto.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"interfaces/SignupRequirements.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["expected",{"_index":3262,"title":{},"body":{"license.html":{}}}],["expects",{"_index":3261,"title":{},"body":{"license.html":{}}}],["expired_otp",{"_index":1182,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["expiredate",{"_index":2048,"title":{},"body":{"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{}}}],["expires",{"_index":2183,"title":{},"body":{"classes/Image.html":{}}}],["expirestime",{"_index":720,"title":{},"body":{"controllers/AppController.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/GuestLoginDto.html":{},"classes/LoginDto.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["explicitly",{"_index":3089,"title":{},"body":{"license.html":{}}}],["export",{"_index":19,"title":{},"body":{"interfaces/AccessTokenPayload.html":{},"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"injectables/AppService-4.html":{},"injectables/AppService-5.html":{},"injectables/AppService-6.html":{},"classes/ArchiveHashtag.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastLogger.html":{},"classes/CastcleBase.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleException.html":{},"classes/CastcleName.html":{},"classes/CastcleQueryOptions.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/Circle.html":{},"classes/Comment.html":{},"classes/Comment-1.html":{},"injectables/CommonDate.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"classes/ContentItem.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"injectables/ContentsInterceptor.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountDto-1.html":{},"classes/CreateCredentialDto.html":{},"classes/Credential.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialModel.html":{},"interfaces/CredentialRequest.html":{},"modules/DatabaseModule.html":{},"interfaces/EmailVerifyToken.html":{},"classes/Engagement.html":{},"interfaces/ErrorStatus.html":{},"classes/Feature.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"injectables/FollowInterceptor.html":{},"classes/FollowResponse.html":{},"injectables/GuestInterceptor.html":{},"classes/GuestLoginDto.html":{},"interfaces/GuestRequest.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Image.html":{},"injectables/ImageInterceptor.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"injectables/LimitPipe.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"classes/LoginDto.html":{},"interfaces/MemberAccessTokenPayload.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/PageDto.html":{},"injectables/PageInterceptor.html":{},"injectables/PagePipe.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Pagination.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"interfaces/RefreshTokenPayload.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/SaveContentDto.html":{},"classes/SaveCredentialDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"interfaces/SignupRequirements.html":{},"injectables/SortByPipe.html":{},"classes/SuggestCastcleIdReponse.html":{},"interfaces/TokenHeader.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{},"classes/TokenResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Uploader.html":{},"classes/Url.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{},"modules/UtilsAwsModule.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"classes/UxEngagement.html":{},"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{},"injectables/UxEngagementService.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["exports",{"_index":1897,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/UtilsAwsModule.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{}}}],["express",{"_index":570,"title":{},"body":{"controllers/AppController.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"dependencies.html":{},"license.html":{}}}],["expressed",{"_index":3521,"title":{},"body":{"license.html":{}}}],["expressly",{"_index":3353,"title":{},"body":{"license.html":{}}}],["extend",{"_index":3449,"title":{},"body":{"license.html":{}}}],["extended",{"_index":3462,"title":{},"body":{"license.html":{}}}],["extends",{"_index":23,"title":{},"body":{"interfaces/AccessTokenPayload.html":{},"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"classes/ArchiveHashtag.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastLogger.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleException.html":{},"classes/Circle.html":{},"classes/Comment.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"injectables/ContentInterceptor.html":{},"classes/ContentItem.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentsInterceptor.html":{},"classes/ContentsResponse.html":{},"classes/Credential.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialModel.html":{},"interfaces/CredentialRequest.html":{},"interfaces/EmailVerifyToken.html":{},"classes/Engagement.html":{},"interfaces/ErrorStatus.html":{},"classes/Feature.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"injectables/FollowInterceptor.html":{},"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"injectables/ImageInterceptor.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"interfaces/MemberAccessTokenPayload.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"injectables/PageInterceptor.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"interfaces/RefreshTokenPayload.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{},"classes/Url.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UxEngagement.html":{}}}],["extensionname",{"_index":2391,"title":{},"body":{"classes/Uploader.html":{}}}],["extensions",{"_index":3177,"title":{},"body":{"license.html":{}}}],["extent",{"_index":3014,"title":{},"body":{"license.html":{}}}],["f",{"_index":1444,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{},"license.html":{}}}],["facebook",{"_index":196,"title":{},"body":{"classes/AccountAuthenId.html":{},"classes/Counter.html":{},"classes/FollowResponse.html":{},"interfaces/IUser.html":{},"classes/Link-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["facilitating",{"_index":3498,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":3103,"title":{},"body":{"license.html":{}}}],["fail",{"_index":2934,"title":{},"body":{"license.html":{}}}],["fails",{"_index":3366,"title":{},"body":{"license.html":{}}}],["failure",{"_index":3544,"title":{},"body":{"license.html":{}}}],["fair",{"_index":2720,"title":{},"body":{"index.html":{},"license.html":{}}}],["fairer",{"_index":2806,"title":{},"body":{"index.html":{}}}],["false",{"_index":322,"title":{},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"injectables/AppService.html":{},"classes/CastcleName.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/IContent.html":{},"interfaces/ICredential-1.html":{},"interfaces/IUser.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"interfaces/SignupRequirements.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{}}}],["false})@apiquery({name",{"_index":844,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["false})@get('pages/:id/contents",{"_index":2233,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["false})@useinterceptors(contentsinterceptor)@get(':id/contents",{"_index":847,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["false})@useinterceptors(credentialinterceptor)@get(':id/follower",{"_index":858,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["false})@useinterceptors(followinterceptor)@get(':id/following",{"_index":862,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["family",{"_index":3247,"title":{},"body":{"license.html":{}}}],["farming",{"_index":2752,"title":{},"body":{"index.html":{}}}],["fashion",{"_index":2981,"title":{},"body":{"license.html":{}}}],["favor",{"_index":3256,"title":{},"body":{"license.html":{}}}],["feature",{"_index":1070,"title":{"classes/Feature.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{}},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/Content.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"interfaces/IContent.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{},"license.html":{}}}],["feature.feed",{"_index":1074,"title":{},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/Content.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"interfaces/IContent.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{}}}],["feature_not_exist",{"_index":1200,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["featuredocument",{"_index":1958,"title":{},"body":{"classes/Feature-1.html":{},"classes/Feature-2.html":{},"miscellaneous/typealiases.html":{}}}],["features",{"_index":2815,"title":{},"body":{"index.html":{}}}],["featureschema",{"_index":1959,"title":{},"body":{"classes/Feature-1.html":{},"classes/Feature-2.html":{}}}],["fee",{"_index":3159,"title":{},"body":{"license.html":{}}}],["feed",{"_index":1072,"title":{},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/Content.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"interfaces/IContent.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{},"index.html":{}}}],["feedbacks",{"_index":2731,"title":{},"body":{"index.html":{}}}],["feeditem",{"_index":1513,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["feeditemid",{"_index":2594,"title":{},"body":{"classes/UxEngagement.html":{},"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{}}}],["feeds",{"_index":2854,"title":{},"body":{"index.html":{}}}],["field",{"_index":932,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleQueryOptions.html":{},"classes/Comment.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentTypePipe.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"interfaces/IUser.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"injectables/LimitPipe.html":{},"classes/Link.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PagePipe.html":{},"classes/Pagination.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"injectables/SortByPipe.html":{},"classes/Url.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["field:`sortfield",{"_index":1767,"title":{},"body":{"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{}}}],["field:sortfield",{"_index":2361,"title":{},"body":{"injectables/SortByPipe.html":{}}}],["field:string",{"_index":1771,"title":{},"body":{"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{}}}],["fifth",{"_index":534,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AccessTokenPayload.html":{},"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"injectables/AppService-4.html":{},"injectables/AppService-5.html":{},"injectables/AppService-6.html":{},"classes/ArchiveHashtag.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastLogger.html":{},"classes/CastcleBase.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleException.html":{},"classes/CastcleName.html":{},"classes/CastcleQueryOptions.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/Circle.html":{},"classes/Comment.html":{},"classes/Comment-1.html":{},"injectables/CommonDate.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"classes/ContentItem.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"injectables/ContentsInterceptor.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountDto-1.html":{},"classes/CreateCredentialDto.html":{},"classes/Credential.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialModel.html":{},"interfaces/CredentialRequest.html":{},"modules/DatabaseModule.html":{},"interfaces/EmailVerifyToken.html":{},"classes/Engagement.html":{},"interfaces/ErrorStatus.html":{},"classes/Feature.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"injectables/FollowInterceptor.html":{},"classes/FollowResponse.html":{},"injectables/GuestInterceptor.html":{},"classes/GuestLoginDto.html":{},"interfaces/GuestRequest.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Image.html":{},"injectables/ImageInterceptor.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"injectables/LimitPipe.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"classes/LoginDto.html":{},"interfaces/MemberAccessTokenPayload.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/PageDto.html":{},"injectables/PageInterceptor.html":{},"injectables/PagePipe.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Pagination.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"interfaces/RefreshTokenPayload.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/SaveContentDto.html":{},"classes/SaveCredentialDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"interfaces/SignupRequirements.html":{},"injectables/SortByPipe.html":{},"classes/SuggestCastcleIdReponse.html":{},"interfaces/TokenHeader.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{},"classes/TokenResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Uploader.html":{},"classes/Url.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{},"modules/UtilsAwsModule.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"classes/UxEngagement.html":{},"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{},"injectables/UxEngagementService.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"license.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["filename",{"_index":1564,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{},"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/Uploader.html":{}}}],["files",{"_index":2716,"title":{},"body":{"index.html":{},"license.html":{}}}],["filter",{"_index":1661,"title":{},"body":{"injectables/ContentService.html":{},"injectables/UserService.html":{}}}],["filter.isfollowpage",{"_index":2505,"title":{},"body":{"injectables/UserService.html":{}}}],["finally",{"_index":3363,"title":{},"body":{"license.html":{}}}],["find",{"_index":376,"title":{},"body":{"interfaces/AccountRequirements.html":{},"injectables/ContentService.html":{},"interfaces/SignupRequirements.html":{},"injectables/UserService.html":{},"license.html":{}}}],["find(filter",{"_index":2507,"title":{},"body":{"injectables/UserService.html":{}}}],["find(findfilter",{"_index":1716,"title":{},"body":{"injectables/ContentService.html":{}}}],["findbyid((content.payload",{"_index":1692,"title":{},"body":{"injectables/ContentService.html":{}}}],["findbyid((doc",{"_index":1949,"title":{},"body":{"classes/Engagement.html":{}}}],["findbyid(accountactivation.account",{"_index":328,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["findbyid(embedcredentialbydeviceuuid._id",{"_index":635,"title":{},"body":{"controllers/AppController.html":{}}}],["findfilter",{"_index":1712,"title":{},"body":{"injectables/ContentService.html":{}}}],["findfilter.type",{"_index":1715,"title":{},"body":{"injectables/ContentService.html":{}}}],["findone",{"_index":241,"title":{},"body":{"interfaces/AccountRequirements.html":{},"injectables/ContentService.html":{},"interfaces/SignupRequirements.html":{},"injectables/UserService.html":{}}}],["findoneandupdate",{"_index":135,"title":{},"body":{"classes/Account.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{}}}],["first",{"_index":2718,"title":{},"body":{"index.html":{},"license.html":{}}}],["fitness",{"_index":517,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"license.html":{}}}],["fixed",{"_index":3195,"title":{},"body":{"license.html":{}}}],["floor",{"_index":535,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{}}}],["flow",{"_index":3078,"title":{},"body":{"license.html":{}}}],["focusing",{"_index":2794,"title":{},"body":{"index.html":{}}}],["follow",{"_index":808,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"interfaces/IUser.html":{},"injectables/UserService.html":{},"license.html":{}}}],["follow(id",{"_index":820,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["follow(user",{"_index":2072,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["followed",{"_index":1046,"title":{},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"classes/Feature.html":{},"classes/FollowResponse.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Url.html":{},"classes/UserImage.html":{},"classes/UserResponseDto.html":{}}}],["followedcount",{"_index":2091,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["followeduser",{"_index":940,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"interfaces/IUser.html":{},"classes/Relationship.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{}}}],["followeduser._id",{"_index":2142,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["followeduser.followercount",{"_index":2149,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["followeduser.save",{"_index":2151,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["followee",{"_index":2553,"title":{},"body":{"injectables/UserService.html":{}}}],["follower",{"_index":2552,"title":{},"body":{"injectables/UserService.html":{}}}],["followercount",{"_index":2090,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{}}}],["followers",{"_index":949,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"classes/Counter.html":{},"classes/FollowResponse.html":{},"interfaces/IUser.html":{},"classes/Link-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{}}}],["followers.items",{"_index":951,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["followers.pagination",{"_index":952,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["following",{"_index":1803,"title":{},"body":{"classes/Counter.html":{},"classes/FollowResponse.html":{},"interfaces/IUser.html":{},"classes/Link-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{},"index.html":{},"license.html":{}}}],["followinterceptor",{"_index":875,"title":{"injectables/FollowInterceptor.html":{}},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{}}}],["followresponse",{"_index":882,"title":{"classes/FollowResponse.html":{}},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"classes/Counter.html":{},"injectables/FollowInterceptor.html":{},"classes/FollowResponse.html":{},"injectables/ImageInterceptor.html":{},"classes/Link-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserImage.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{}}}],["followresponse})@apibearerauth()@apiquery({name",{"_index":857,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["forbid",{"_index":3136,"title":{},"body":{"license.html":{}}}],["forbidden_request",{"_index":1164,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["force",{"_index":3098,"title":{},"body":{"license.html":{}}}],["forgotpasswordrequestotp",{"_index":726,"title":{},"body":{"controllers/AppController.html":{}}}],["form",{"_index":2533,"title":{},"body":{"injectables/UserService.html":{},"license.html":{}}}],["format",{"_index":1367,"title":{},"body":{"injectables/CommonDate.html":{},"license.html":{}}}],["format.test(name",{"_index":1282,"title":{},"body":{"classes/CastcleName.html":{}}}],["forms",{"_index":3187,"title":{},"body":{"license.html":{}}}],["found",{"_index":2054,"title":{},"body":{"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"license.html":{}}}],["foundation",{"_index":508,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"license.html":{}}}],["franklin",{"_index":532,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{}}}],["free",{"_index":496,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"index.html":{},"license.html":{}}}],["freedom",{"_index":2897,"title":{},"body":{"license.html":{}}}],["fromdate",{"_index":1033,"title":{},"body":{"classes/ArchiveHashtag.html":{}}}],["fulfilling",{"_index":3123,"title":{},"body":{"license.html":{}}}],["full",{"_index":3573,"title":{},"body":{"license.html":{}}}],["function",{"_index":115,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/AccountRequirements.html":{},"classes/Content.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"classes/Engagement.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"interfaces/SignupRequirements.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["functioning",{"_index":3276,"title":{},"body":{"license.html":{}}}],["functions",{"_index":2695,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":3217,"title":{},"body":{"license.html":{}}}],["future",{"_index":3516,"title":{},"body":{"license.html":{}}}],["g",{"_index":1273,"title":{},"body":{"classes/CastcleName.html":{}}}],["general",{"_index":503,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"index.html":{},"license.html":{}}}],["generally",{"_index":3067,"title":{},"body":{"license.html":{}}}],["generate",{"_index":370,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"interfaces/SignupRequirements.html":{},"license.html":{}}}],["generate(accountid",{"_index":2056,"title":{},"body":{"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{}}}],["generateaccesstoken",{"_index":1889,"title":{},"body":{"interfaces/CredentialModel.html":{}}}],["generateaccesstoken(payload",{"_index":1843,"title":{},"body":{"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{}}}],["generated",{"_index":997,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["generateotp(account",{"_index":373,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["generaterefreshtoken",{"_index":1890,"title":{},"body":{"interfaces/CredentialModel.html":{}}}],["generaterefreshtoken(payload",{"_index":1844,"title":{},"body":{"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{}}}],["generateverifytoken",{"_index":184,"title":{},"body":{"interfaces/AccountActivationModel.html":{}}}],["generateverifytoken(payload",{"_index":172,"title":{},"body":{"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/IAccountActivation.html":{}}}],["generating",{"_index":2052,"title":{},"body":{"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{}}}],["get(':id",{"_index":909,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["get(':id/contents",{"_index":930,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["get(':id/follower",{"_index":948,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["get(':id/following",{"_index":954,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["get('me",{"_index":904,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["get('me/contents",{"_index":923,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["get('pages",{"_index":2277,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["get('pages/:id",{"_index":2276,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["get('pages/:id/contents",{"_index":2288,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["get('verify",{"_index":484,"title":{},"body":{"controllers/AppController.html":{}}}],["getaccountactivationfromcredential",{"_index":301,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["getaccountactivationfromverifytoken",{"_index":299,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["getaccountfromcredential",{"_index":294,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["getaccountfromemail",{"_index":296,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["getallpages",{"_index":2217,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/UserService.html":{}}}],["getallpages(sortbyoption",{"_index":2228,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["getcontentfromid",{"_index":1452,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentService.html":{}}}],["getcontentfromid(id",{"_index":1470,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["getcontentrevisions",{"_index":1620,"title":{},"body":{"injectables/ContentService.html":{}}}],["getcontents",{"_index":1453,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["getcontents(id",{"_index":1474,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["getcontentsfromuser",{"_index":1621,"title":{},"body":{"injectables/ContentService.html":{}}}],["getcredentialfromaccesstoken",{"_index":245,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["getcredentialfromrefreshtoken",{"_index":242,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["getdata",{"_index":400,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"injectables/AppService-4.html":{},"injectables/AppService-5.html":{},"injectables/AppService-6.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{}}}],["getdatabeta",{"_index":401,"title":{},"body":{"controllers/AppController.html":{}}}],["getdate",{"_index":1349,"title":{},"body":{"injectables/CommonDate.html":{}}}],["getdate(offset",{"_index":1363,"title":{},"body":{"injectables/CommonDate.html":{}}}],["getdateformat",{"_index":1350,"title":{},"body":{"injectables/CommonDate.html":{}}}],["getdateformat(date",{"_index":1366,"title":{},"body":{"injectables/CommonDate.html":{}}}],["getdatefromstring",{"_index":1351,"title":{},"body":{"injectables/CommonDate.html":{}}}],["getdatefromstring(str",{"_index":1369,"title":{},"body":{"injectables/CommonDate.html":{}}}],["getfollower",{"_index":2433,"title":{},"body":{"injectables/UserService.html":{}}}],["getfollowing",{"_index":2434,"title":{},"body":{"injectables/UserService.html":{}}}],["getguestcredentialfromdeviceuuid",{"_index":239,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["getlikeparticipants",{"_index":1622,"title":{},"body":{"injectables/ContentService.html":{}}}],["getmodeltoken",{"_index":1899,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["getmodeltoken('content",{"_index":1925,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["getmodeltoken('credential",{"_index":1923,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["getmodeltoken('relationship",{"_index":1924,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["getmodeltoken('revision",{"_index":1922,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["getmycontents",{"_index":809,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["getmycontents(req",{"_index":825,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["getmydata",{"_index":810,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["getmydata(@req",{"_index":905,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["getmydata(req",{"_index":828,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["getotpfromaccount(account",{"_index":378,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["getpagecontents",{"_index":2218,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["getpagecontents(id",{"_index":2231,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["getpagefromid",{"_index":2219,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["getpagefromid(req",{"_index":2236,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["getsignuphtml",{"_index":982,"title":{},"body":{"injectables/AppService.html":{}}}],["getting",{"_index":2705,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getuserbyid",{"_index":811,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["getuserbyid(@req",{"_index":910,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["getuserbyid(req",{"_index":831,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["getusercontents",{"_index":812,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["getusercontents(id",{"_index":834,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["getuserfollower",{"_index":813,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["getuserfollower(id",{"_index":855,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["getuserfollowing",{"_index":814,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["getuserfollowing(id",{"_index":861,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["getuserfromcastcleid",{"_index":297,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["getuserfromcredential",{"_index":2435,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserfromid",{"_index":2436,"title":{},"body":{"injectables/UserService.html":{}}}],["git",{"_index":2826,"title":{},"body":{"index.html":{}}}],["github",{"_index":2829,"title":{},"body":{"index.html":{}}}],["give",{"_index":3156,"title":{},"body":{"license.html":{}}}],["given",{"_index":3093,"title":{},"body":{"license.html":{}}}],["gives",{"_index":2919,"title":{},"body":{"license.html":{}}}],["giving",{"_index":2730,"title":{},"body":{"index.html":{},"license.html":{}}}],["global",{"_index":1898,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["gnu",{"_index":502,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"index.html":{},"license.html":{}}}],["go",{"_index":1445,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["goals",{"_index":2954,"title":{},"body":{"license.html":{}}}],["good",{"_index":2772,"title":{},"body":{"index.html":{}}}],["google",{"_index":197,"title":{},"body":{"classes/AccountAuthenId.html":{},"miscellaneous/enumerations.html":{}}}],["governed",{"_index":3306,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":2956,"title":{},"body":{"license.html":{}}}],["grant",{"_index":3333,"title":{},"body":{"license.html":{}}}],["granted",{"_index":3085,"title":{},"body":{"license.html":{}}}],["grants",{"_index":3383,"title":{},"body":{"license.html":{}}}],["graph",{"_index":3593,"title":{},"body":{"modules.html":{}}}],["gratis",{"_index":3216,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":3562,"title":{},"body":{"license.html":{}}}],["guarantee",{"_index":2900,"title":{},"body":{"license.html":{}}}],["guest",{"_index":18,"title":{},"body":{"interfaces/AccessTokenPayload.html":{},"classes/Account.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"interfaces/EmailVerifyToken.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{},"interfaces/MemberAccessTokenPayload.html":{},"interfaces/RefreshTokenPayload.html":{},"interfaces/SignupRequirements.html":{},"miscellaneous/enumerations.html":{}}}],["guestinterceptor",{"_index":594,"title":{"injectables/GuestInterceptor.html":{}},"body":{"controllers/AppController.html":{},"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{}}}],["guestlogin",{"_index":402,"title":{},"body":{"controllers/AppController.html":{}}}],["guestlogin(@req",{"_index":650,"title":{},"body":{"controllers/AppController.html":{}}}],["guestlogin(req",{"_index":435,"title":{},"body":{"controllers/AppController.html":{}}}],["guestlogindto",{"_index":437,"title":{"classes/GuestLoginDto.html":{}},"body":{"controllers/AppController.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/GuestLoginDto.html":{},"classes/LoginDto.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["guestlogindto})@apiresponse({status",{"_index":443,"title":{},"body":{"controllers/AppController.html":{}}}],["guestrequest",{"_index":436,"title":{"interfaces/GuestRequest.html":{}},"body":{"controllers/AppController.html":{},"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{}}}],["hands",{"_index":2723,"title":{},"body":{"index.html":{}}}],["harm",{"_index":2771,"title":{},"body":{"index.html":{}}}],["hashtag",{"_index":1037,"title":{"classes/Hashtag.html":{}},"body":{"classes/ArchiveHashtag.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{}}}],["hashtag.schema",{"_index":1040,"title":{},"body":{"classes/ArchiveHashtag.html":{},"classes/HashtagItem.html":{}}}],["hashtagdocument",{"_index":2001,"title":{},"body":{"classes/Hashtag.html":{},"miscellaneous/typealiases.html":{}}}],["hashtagitem",{"_index":2004,"title":{"classes/HashtagItem.html":{}},"body":{"classes/HashtagItem.html":{}}}],["hashtagitemdocument",{"_index":2009,"title":{},"body":{"classes/HashtagItem.html":{},"miscellaneous/typealiases.html":{}}}],["hashtagitemschema",{"_index":2010,"title":{},"body":{"classes/HashtagItem.html":{}}}],["hashtags",{"_index":1034,"title":{},"body":{"classes/ArchiveHashtag.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"interfaces/IContent.html":{}}}],["hashtagschema",{"_index":2002,"title":{},"body":{"classes/Hashtag.html":{}}}],["having",{"_index":3101,"title":{},"body":{"license.html":{}}}],["header",{"_index":204,"title":{},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"modules/DatabaseModule.html":{},"classes/Feature.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"interfaces/SignupRequirements.html":{},"classes/Url.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{}}}],["headerintercepresult",{"_index":2368,"title":{},"body":{"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{}}}],["headers",{"_index":751,"title":{},"body":{"controllers/AppController.html":{}}}],["headers/headers.interceptor",{"_index":2367,"title":{},"body":{"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{},"modules/UtilsInterceptorsModule.html":{}}}],["headersinterceptor",{"_index":566,"title":{"injectables/HeadersInterceptor.html":{}},"body":{"controllers/AppController.html":{},"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{},"modules/UtilsInterceptorsModule.html":{}}}],["headersinterceptor:37",{"_index":1988,"title":{},"body":{"injectables/GuestInterceptor.html":{},"injectables/TokenInterceptor.html":{}}}],["headersrequest",{"_index":423,"title":{"interfaces/HeadersRequest.html":{}},"body":{"controllers/AppController.html":{},"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{},"modules/UtilsInterceptorsModule.html":{}}}],["healthy",{"_index":2017,"title":{},"body":{"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{}}}],["healthycontroller",{"_index":970,"title":{"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{}},"body":{"modules/AppModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{}}}],["healthycontroller.name",{"_index":2020,"title":{},"body":{"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{}}}],["heartened",{"_index":2929,"title":{},"body":{"license.html":{}}}],["hello",{"_index":740,"title":{},"body":{"controllers/AppController.html":{}}}],["help",{"_index":2743,"title":{},"body":{"index.html":{}}}],["hence",{"_index":2784,"title":{},"body":{"index.html":{}}}],["here",{"_index":338,"title":{},"body":{"interfaces/AccountRequirements.html":{},"injectables/AppService.html":{},"interfaces/SignupRequirements.html":{}}}],["hereafter",{"_index":3428,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":1307,"title":{},"body":{"classes/CastcleQueryOptions.html":{},"classes/Pagination.html":{},"miscellaneous/enumerations.html":{}}}],["holder",{"_index":3360,"title":{},"body":{"license.html":{}}}],["holders",{"_index":3313,"title":{},"body":{"license.html":{}}}],["holding",{"_index":2755,"title":{},"body":{"index.html":{}}}],["hometowns",{"_index":2085,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["hook",{"_index":1700,"title":{},"body":{"injectables/ContentService.html":{},"injectables/UserService.html":{}}}],["hope",{"_index":510,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"license.html":{}}}],["host",{"_index":578,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"modules/UtilsModule.html":{}}}],["host.gethostname(req",{"_index":681,"title":{},"body":{"controllers/AppController.html":{}}}],["hostname",{"_index":981,"title":{},"body":{"injectables/AppService.html":{}}}],["hostname}/authentications/verify",{"_index":1004,"title":{},"body":{"injectables/AppService.html":{}}}],["hosts",{"_index":3225,"title":{},"body":{"license.html":{}}}],["hour",{"_index":1354,"title":{},"body":{"injectables/CommonDate.html":{}}}],["household",{"_index":3248,"title":{},"body":{"license.html":{}}}],["html",{"_index":1010,"title":{},"body":{"injectables/AppService.html":{}}}],["http://fsf.org",{"_index":2879,"title":{},"body":{"license.html":{}}}],["http://localhost:3334",{"_index":988,"title":{},"body":{"injectables/AppService.html":{}}}],["http://placehold.it/100x100",{"_index":2110,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["http://placehold.it/200x200",{"_index":2113,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["http://www.gnu.org/licenses",{"_index":3574,"title":{},"body":{"license.html":{}}}],["httpcode",{"_index":596,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["httpcode(200",{"_index":611,"title":{},"body":{"controllers/AppController.html":{}}}],["httpcode(201",{"_index":2265,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["httpcode(204",{"_index":700,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["httpexception",{"_index":1147,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{}}}],["https://assets",{"_index":2180,"title":{},"body":{"classes/Image.html":{}}}],["https://nodejs.org/en/download",{"_index":2825,"title":{},"body":{"index.html":{}}}],["iaccount",{"_index":97,"title":{"interfaces/IAccount.html":{}},"body":{"classes/Account.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{}}}],["iaccountactivation",{"_index":161,"title":{"interfaces/IAccountActivation.html":{}},"body":{"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/IAccountActivation.html":{}}}],["icontent",{"_index":1404,"title":{"interfaces/IContent.html":{}},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["icredential",{"_index":55,"title":{"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{}},"body":{"classes/Account.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{}}}],["id",{"_index":11,"title":{},"body":{"interfaces/AccessTokenPayload.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"interfaces/EmailVerifyToken.html":{},"classes/Engagement.html":{},"classes/Feature.html":{},"classes/FollowResponse.html":{},"interfaces/IContent.html":{},"interfaces/IUser.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"interfaces/MemberAccessTokenPayload.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"interfaces/RefreshTokenPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"interfaces/SignupRequirements.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Url.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{}}}],["ideas",{"_index":2816,"title":{},"body":{"index.html":{}}}],["identifiable",{"_index":3453,"title":{},"body":{"license.html":{}}}],["idorcastcleid",{"_index":893,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["idresult",{"_index":2249,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["idresult.type",{"_index":2250,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["image",{"_index":1096,"title":{"classes/Image.html":{}},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"injectables/ContentInterceptor.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentsInterceptor.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"injectables/FollowInterceptor.html":{},"classes/Image.html":{},"injectables/ImageInterceptor.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PageInterceptor.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{},"modules/UtilsAwsModule.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["image(data.avatar).tosignurl",{"_index":2299,"title":{},"body":{"injectables/PageInterceptor.html":{}}}],["image(data.cover).tosignurl",{"_index":2301,"title":{},"body":{"injectables/PageInterceptor.html":{}}}],["image(data.images.avatar).tosignurl",{"_index":1978,"title":{},"body":{"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{}}}],["image(data.images.cover).tosignurl",{"_index":1980,"title":{},"body":{"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{}}}],["image(data.key",{"_index":2191,"title":{},"body":{"classes/Image.html":{}}}],["image(url.url).tosignurl",{"_index":1549,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["image.upload",{"_index":1582,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["image.upload(base64",{"_index":2247,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["image.upload(body.images.avatar",{"_index":1970,"title":{},"body":{"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{}}}],["image.upload(body.images.cover",{"_index":1974,"title":{},"body":{"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{}}}],["image.upload(url.url",{"_index":1563,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["imageinterceptor",{"_index":874,"title":{"injectables/ImageInterceptor.html":{}},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{},"overview.html":{}}}],["imagepayload",{"_index":1064,"title":{"classes/ImagePayload.html":{}},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{}}}],["images",{"_index":1567,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{},"classes/Counter.html":{},"classes/FollowResponse.html":{},"interfaces/IUser.html":{},"classes/Link-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{}}}],["implement",{"_index":1405,"title":{},"body":{"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"interfaces/IContent.html":{},"license.html":{}}}],["implementation",{"_index":3050,"title":{},"body":{"license.html":{}}}],["implements",{"_index":1769,"title":{},"body":{"injectables/ContentTypePipe.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"injectables/LimitPipe.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{}}}],["implied",{"_index":515,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"license.html":{}}}],["import",{"_index":75,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"injectables/AppService-4.html":{},"injectables/AppService-5.html":{},"injectables/AppService-6.html":{},"classes/ArchiveHashtag.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastLogger.html":{},"classes/CastcleBase.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleException.html":{},"classes/CastcleName.html":{},"classes/CastcleQueryOptions.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/Circle.html":{},"classes/Comment.html":{},"classes/Comment-1.html":{},"injectables/CommonDate.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"classes/ContentItem.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"injectables/ContentsInterceptor.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"classes/CreateAccountDto.html":{},"classes/CreateCredentialDto.html":{},"classes/Credential.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialModel.html":{},"interfaces/CredentialRequest.html":{},"modules/DatabaseModule.html":{},"classes/Engagement.html":{},"interfaces/ErrorStatus.html":{},"classes/Feature.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"injectables/FollowInterceptor.html":{},"classes/FollowResponse.html":{},"injectables/GuestInterceptor.html":{},"classes/GuestLoginDto.html":{},"interfaces/GuestRequest.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Image.html":{},"injectables/ImageInterceptor.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"injectables/LimitPipe.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"classes/LoginDto.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/PageDto.html":{},"injectables/PageInterceptor.html":{},"injectables/PagePipe.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Pagination.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/SaveContentDto.html":{},"classes/SaveCredentialDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"interfaces/SignupRequirements.html":{},"injectables/SortByPipe.html":{},"classes/SuggestCastcleIdReponse.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{},"classes/TokenResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Uploader.html":{},"classes/Url.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{},"modules/UtilsAwsModule.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"classes/UxEngagement.html":{},"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{},"injectables/UxEngagementService.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"license.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["importing",{"_index":3419,"title":{},"body":{"license.html":{}}}],["imports",{"_index":971,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{}}}],["impose",{"_index":3342,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":3480,"title":{},"body":{"license.html":{}}}],["improve",{"_index":2544,"title":{},"body":{"injectables/UserService.html":{}}}],["improvements",{"_index":2924,"title":{},"body":{"license.html":{}}}],["inability",{"_index":3538,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":3541,"title":{},"body":{"license.html":{}}}],["inc",{"_index":530,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentService.html":{},"modules/DatabaseModule.html":{},"classes/Engagement.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/UserService.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"license.html":{}}}],["incengagment",{"_index":1696,"title":{},"body":{"injectables/ContentService.html":{},"classes/Engagement.html":{}}}],["incengagment[`engagements.${(doc",{"_index":1937,"title":{},"body":{"classes/Engagement.html":{}}}],["incengagment[`engagements.${engagementtype}.count",{"_index":1697,"title":{},"body":{"injectables/ContentService.html":{}}}],["incidental",{"_index":3535,"title":{},"body":{"license.html":{}}}],["include",{"_index":3043,"title":{},"body":{"license.html":{}}}],["included",{"_index":524,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"license.html":{}}}],["includes",{"_index":2999,"title":{},"body":{"license.html":{}}}],["including",{"_index":3062,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":3186,"title":{},"body":{"license.html":{}}}],["incorporate",{"_index":2928,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":3499,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":3251,"title":{},"body":{"license.html":{}}}],["indemnification",{"_index":3338,"title":{},"body":{"license.html":{}}}],["independent",{"_index":3175,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/AccessTokenPayload.html":{},"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"injectables/AppService-4.html":{},"injectables/AppService-5.html":{},"injectables/AppService-6.html":{},"classes/ArchiveHashtag.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastLogger.html":{},"classes/CastcleBase.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleName.html":{},"classes/CastcleQueryOptions.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/Circle.html":{},"classes/Comment.html":{},"classes/Comment-1.html":{},"injectables/CommonDate.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"classes/ContentItem.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"injectables/ContentsInterceptor.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountDto-1.html":{},"classes/CreateCredentialDto.html":{},"classes/Credential.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialModel.html":{},"interfaces/CredentialRequest.html":{},"interfaces/EmailVerifyToken.html":{},"classes/Engagement.html":{},"interfaces/ErrorStatus.html":{},"classes/Feature.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"injectables/FollowInterceptor.html":{},"classes/FollowResponse.html":{},"injectables/GuestInterceptor.html":{},"classes/GuestLoginDto.html":{},"interfaces/GuestRequest.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Image.html":{},"injectables/ImageInterceptor.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"injectables/LimitPipe.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"classes/LoginDto.html":{},"interfaces/MemberAccessTokenPayload.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/PageDto.html":{},"injectables/PageInterceptor.html":{},"injectables/PagePipe.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Pagination.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"interfaces/RefreshTokenPayload.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/SaveContentDto.html":{},"classes/SaveCredentialDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"interfaces/SignupRequirements.html":{},"injectables/SortByPipe.html":{},"classes/SuggestCastcleIdReponse.html":{},"interfaces/TokenHeader.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{},"classes/TokenResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Uploader.html":{},"classes/Url.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{},"classes/UxEngagement.html":{},"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{},"injectables/UxEngagementService.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/suggestCastcleIdPayload.html":{},"miscellaneous/typealiases.html":{}}}],["indicate",{"_index":3387,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":3351,"title":{},"body":{"license.html":{}}}],["individual",{"_index":3184,"title":{},"body":{"license.html":{}}}],["individuals",{"_index":2977,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":3265,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AccessTokenPayload.html":{},"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"injectables/AppService-4.html":{},"injectables/AppService-5.html":{},"injectables/AppService-6.html":{},"classes/ArchiveHashtag.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastLogger.html":{},"classes/CastcleBase.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleException.html":{},"classes/CastcleName.html":{},"classes/CastcleQueryOptions.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/Circle.html":{},"classes/Comment.html":{},"classes/Comment-1.html":{},"injectables/CommonDate.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"classes/ContentItem.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"injectables/ContentsInterceptor.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountDto-1.html":{},"classes/CreateCredentialDto.html":{},"classes/Credential.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialModel.html":{},"interfaces/CredentialRequest.html":{},"modules/DatabaseModule.html":{},"interfaces/EmailVerifyToken.html":{},"classes/Engagement.html":{},"interfaces/ErrorStatus.html":{},"classes/Feature.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"injectables/FollowInterceptor.html":{},"classes/FollowResponse.html":{},"injectables/GuestInterceptor.html":{},"classes/GuestLoginDto.html":{},"interfaces/GuestRequest.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Image.html":{},"injectables/ImageInterceptor.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"injectables/LimitPipe.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"classes/LoginDto.html":{},"interfaces/MemberAccessTokenPayload.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/PageDto.html":{},"injectables/PageInterceptor.html":{},"injectables/PagePipe.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Pagination.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"interfaces/RefreshTokenPayload.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/SaveContentDto.html":{},"classes/SaveCredentialDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"interfaces/SignupRequirements.html":{},"injectables/SortByPipe.html":{},"classes/SuggestCastcleIdReponse.html":{},"interfaces/TokenHeader.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{},"classes/TokenResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Uploader.html":{},"classes/Url.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{},"modules/UtilsAwsModule.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"classes/UxEngagement.html":{},"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{},"injectables/UxEngagementService.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["info.messageid",{"_index":1013,"title":{},"body":{"injectables/AppService.html":{}}}],["inform",{"_index":3232,"title":{},"body":{"license.html":{}}}],["information",{"_index":557,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"license.html":{}}}],["infringe",{"_index":3385,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":3416,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":2993,"title":{},"body":{"license.html":{}}}],["inherited",{"_index":69,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"classes/AccountAuthenId.html":{},"classes/ArchiveHashtag.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Circle.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"injectables/ContentInterceptor.html":{},"classes/ContentItem.html":{},"injectables/ContentsInterceptor.html":{},"classes/Credential.html":{},"classes/Engagement.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"injectables/FollowInterceptor.html":{},"injectables/GuestInterceptor.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"injectables/ImageInterceptor.html":{},"classes/Otp.html":{},"injectables/PageInterceptor.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"injectables/TokenInterceptor.html":{},"classes/User.html":{},"classes/UxEngagement.html":{}}}],["initiate",{"_index":3409,"title":{},"body":{"license.html":{}}}],["inject",{"_index":206,"title":{},"body":{"interfaces/AccountRequirements.html":{},"modules/DatabaseModule.html":{},"interfaces/SignupRequirements.html":{}}}],["injectable",{"_index":207,"title":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"injectables/AppService-4.html":{},"injectables/AppService-5.html":{},"injectables/AppService-6.html":{},"injectables/CommonDate.html":{},"injectables/ContentInterceptor.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"injectables/ContentsInterceptor.html":{},"injectables/CredentialInterceptor.html":{},"injectables/FollowInterceptor.html":{},"injectables/GuestInterceptor.html":{},"injectables/HeadersInterceptor.html":{},"injectables/ImageInterceptor.html":{},"injectables/LimitPipe.html":{},"injectables/PageInterceptor.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{},"injectables/TokenInterceptor.html":{},"injectables/UserService.html":{},"injectables/UxEngagementService.html":{}},"body":{"interfaces/AccountRequirements.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"injectables/AppService-4.html":{},"injectables/AppService-5.html":{},"injectables/AppService-6.html":{},"injectables/CommonDate.html":{},"injectables/ContentInterceptor.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"injectables/ContentsInterceptor.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{},"injectables/FollowInterceptor.html":{},"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"injectables/ImageInterceptor.html":{},"injectables/LimitPipe.html":{},"injectables/PageInterceptor.html":{},"injectables/PagePipe.html":{},"interfaces/SignupRequirements.html":{},"injectables/SortByPipe.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{},"injectables/UserService.html":{},"injectables/UxEngagementService.html":{}}}],["injectables",{"_index":974,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"injectables/AppService-4.html":{},"injectables/AppService-5.html":{},"injectables/AppService-6.html":{},"injectables/CommonDate.html":{},"injectables/ContentInterceptor.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"injectables/ContentsInterceptor.html":{},"injectables/CredentialInterceptor.html":{},"injectables/FollowInterceptor.html":{},"injectables/GuestInterceptor.html":{},"injectables/HeadersInterceptor.html":{},"injectables/ImageInterceptor.html":{},"injectables/LimitPipe.html":{},"injectables/PageInterceptor.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{},"injectables/TokenInterceptor.html":{},"injectables/UserService.html":{},"injectables/UxEngagementService.html":{},"overview.html":{}}}],["injectmodel",{"_index":209,"title":{},"body":{"interfaces/AccountRequirements.html":{},"injectables/ContentService.html":{},"interfaces/SignupRequirements.html":{},"injectables/UserService.html":{},"injectables/UxEngagementService.html":{}}}],["injectmodel('account",{"_index":228,"title":{},"body":{"interfaces/AccountRequirements.html":{},"injectables/ContentService.html":{},"interfaces/SignupRequirements.html":{},"injectables/UserService.html":{},"injectables/UxEngagementService.html":{}}}],["injectmodel('accountactivation",{"_index":233,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["injectmodel('content",{"_index":1636,"title":{},"body":{"injectables/ContentService.html":{}}}],["injectmodel('credential",{"_index":231,"title":{},"body":{"interfaces/AccountRequirements.html":{},"injectables/ContentService.html":{},"interfaces/SignupRequirements.html":{},"injectables/UserService.html":{}}}],["injectmodel('engagement",{"_index":1639,"title":{},"body":{"injectables/ContentService.html":{}}}],["injectmodel('otp",{"_index":237,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["injectmodel('relationship",{"_index":2442,"title":{},"body":{"injectables/UserService.html":{}}}],["injectmodel('revision",{"_index":1643,"title":{},"body":{"injectables/ContentService.html":{}}}],["injectmodel('user",{"_index":235,"title":{},"body":{"interfaces/AccountRequirements.html":{},"injectables/ContentService.html":{},"interfaces/SignupRequirements.html":{},"injectables/UserService.html":{}}}],["injectmodel('uxengagement",{"_index":2649,"title":{},"body":{"injectables/UxEngagementService.html":{}}}],["install",{"_index":2823,"title":{},"body":{"index.html":{},"license.html":{}}}],["installation",{"_index":3270,"title":{},"body":{"license.html":{}}}],["installed",{"_index":3288,"title":{},"body":{"license.html":{}}}],["instead",{"_index":2338,"title":{},"body":{"classes/Relationship.html":{},"injectables/UserService.html":{}}}],["intact",{"_index":3149,"title":{},"body":{"license.html":{}}}],["intended",{"_index":2899,"title":{},"body":{"license.html":{}}}],["intent",{"_index":1589,"title":{},"body":{"classes/ContentItem.html":{}}}],["intention",{"_index":3141,"title":{},"body":{"license.html":{}}}],["interact",{"_index":3578,"title":{},"body":{"license.html":{}}}],["interacting",{"_index":3493,"title":{},"body":{"license.html":{}}}],["interaction",{"_index":3007,"title":{},"body":{"license.html":{}}}],["interactive",{"_index":3011,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":1528,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{},"injectables/CredentialInterceptor.html":{},"injectables/FollowInterceptor.html":{},"injectables/GuestInterceptor.html":{},"injectables/HeadersInterceptor.html":{},"injectables/ImageInterceptor.html":{},"injectables/PageInterceptor.html":{},"injectables/TokenInterceptor.html":{}}}],["intercept(context",{"_index":1529,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{},"injectables/FollowInterceptor.html":{},"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"injectables/ImageInterceptor.html":{},"injectables/PageInterceptor.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{}}}],["interceptors.module.ts",{"_index":2580,"title":{},"body":{"modules/UtilsInterceptorsModule.html":{}}}],["interceptors/guest.interceptor",{"_index":595,"title":{},"body":{"controllers/AppController.html":{}}}],["interceptors/image.interceptor",{"_index":876,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["interceptors/page.interceptor",{"_index":2244,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["interchange",{"_index":3198,"title":{},"body":{"license.html":{}}}],["interest",{"_index":3403,"title":{},"body":{"license.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AccessTokenPayload.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/AccountRequirements.html":{},"interfaces/CredentialModel.html":{},"interfaces/CredentialRequest.html":{},"interfaces/EmailVerifyToken.html":{},"interfaces/ErrorStatus.html":{},"interfaces/GuestRequest.html":{},"interfaces/HeadersRequest.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"interfaces/MemberAccessTokenPayload.html":{},"interfaces/OtpModel.html":{},"interfaces/RefreshTokenPayload.html":{},"interfaces/SignupRequirements.html":{},"interfaces/TokenHeader.html":{},"interfaces/TokenRequest.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}},"body":{"interfaces/AccessTokenPayload.html":{},"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/AccountRequirements.html":{},"classes/CastcleException.html":{},"classes/Content.html":{},"classes/CreateAccountDto-1.html":{},"classes/Credential.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialModel.html":{},"interfaces/CredentialRequest.html":{},"interfaces/EmailVerifyToken.html":{},"interfaces/ErrorStatus.html":{},"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"interfaces/MemberAccessTokenPayload.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"interfaces/RefreshTokenPayload.html":{},"interfaces/SignupRequirements.html":{},"interfaces/TokenHeader.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"license.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AccessTokenPayload.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/AccountRequirements.html":{},"interfaces/CredentialModel.html":{},"interfaces/CredentialRequest.html":{},"interfaces/EmailVerifyToken.html":{},"interfaces/ErrorStatus.html":{},"interfaces/GuestRequest.html":{},"interfaces/HeadersRequest.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"interfaces/MemberAccessTokenPayload.html":{},"interfaces/OtpModel.html":{},"interfaces/RefreshTokenPayload.html":{},"interfaces/SignupRequirements.html":{},"interfaces/TokenHeader.html":{},"interfaces/TokenRequest.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"license.html":{},"overview.html":{}}}],["interfered",{"_index":3278,"title":{},"body":{"license.html":{}}}],["interpretation",{"_index":3548,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":3059,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":3076,"title":{},"body":{"license.html":{}}}],["invalid",{"_index":457,"title":{},"body":{"controllers/AppController.html":{}}}],["invalid'})@post('requestlinkverify')@httpcode(204)@useinterceptors(credentialinterceptor",{"_index":470,"title":{},"body":{"controllers/AppController.html":{}}}],["invalid'})@post('verificationemail')@httpcode(204)@useinterceptors(tokeninterceptor",{"_index":475,"title":{},"body":{"controllers/AppController.html":{}}}],["invalid_access_token",{"_index":1156,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["invalid_email",{"_index":1170,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["invalid_email_or_password",{"_index":1168,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["invalid_format",{"_index":1160,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["invalid_otp",{"_index":1180,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["invalid_password",{"_index":1186,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["invalid_phone_number",{"_index":1172,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["invalid_refresh_token",{"_index":1158,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["invalid_role",{"_index":1190,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["invalidate",{"_index":3170,"title":{},"body":{"license.html":{}}}],["invlaid_auth_token",{"_index":1166,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["invlaid_refcode",{"_index":1188,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["iotp",{"_index":2044,"title":{"interfaces/IOtp.html":{}},"body":{"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{}}}],["iphone",{"_index":440,"title":{},"body":{"controllers/AppController.html":{}}}],["irrevocable",{"_index":3087,"title":{},"body":{"license.html":{}}}],["isaccesstokenvalid",{"_index":1857,"title":{},"body":{"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{}}}],["isbanned",{"_index":1212,"title":{},"body":{"classes/CastcleName.html":{}}}],["isbannedname",{"_index":1218,"title":{},"body":{"classes/CastcleName.html":{}}}],["isbannedname(name",{"_index":1240,"title":{},"body":{"classes/CastcleName.html":{}}}],["isfollowpage",{"_index":2143,"title":{},"body":{"interfaces/IUser.html":{},"classes/Relationship.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{}}}],["isguest",{"_index":42,"title":{},"body":{"classes/Account.html":{},"interfaces/AccountRequirements.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountDto-1.html":{},"classes/CreateCredentialDto.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{},"classes/SaveCredentialDto.html":{},"interfaces/SignupRequirements.html":{},"interfaces/TokenHeader.html":{}}}],["isnan(number(limitquery",{"_index":1788,"title":{},"body":{"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{}}}],["isnan(number(pagequery",{"_index":1783,"title":{},"body":{"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{}}}],["isrefreshtokenvalid",{"_index":1858,"title":{},"body":{"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{}}}],["isreserved",{"_index":1213,"title":{},"body":{"classes/CastcleName.html":{}}}],["isreservename",{"_index":1219,"title":{},"body":{"classes/CastcleName.html":{}}}],["isreservename(name",{"_index":1245,"title":{},"body":{"classes/CastcleName.html":{}}}],["issue",{"_index":2258,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["issues",{"_index":2818,"title":{},"body":{"index.html":{}}}],["isvalid",{"_index":1214,"title":{},"body":{"classes/CastcleName.html":{},"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{}}}],["isvalidname",{"_index":1220,"title":{},"body":{"classes/CastcleName.html":{}}}],["isvalidname(name",{"_index":1248,"title":{},"body":{"classes/CastcleName.html":{}}}],["isverifytokenvalid",{"_index":166,"title":{},"body":{"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/IAccountActivation.html":{}}}],["item",{"_index":630,"title":{},"body":{"controllers/AppController.html":{},"license.html":{}}}],["item.deviceuuid",{"_index":631,"title":{},"body":{"controllers/AppController.html":{}}}],["item.tocontentpayload",{"_index":927,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["items",{"_index":1723,"title":{},"body":{"injectables/ContentService.html":{},"injectables/UserService.html":{}}}],["itemsquery",{"_index":2494,"title":{},"body":{"injectables/UserService.html":{}}}],["itemsquery.sort",{"_index":2498,"title":{},"body":{"injectables/UserService.html":{}}}],["itemsquery.sort(`${queryoptions.sortby.field}`).exec",{"_index":2500,"title":{},"body":{"injectables/UserService.html":{}}}],["itself",{"_index":3293,"title":{},"body":{"license.html":{}}}],["iuser",{"_index":2068,"title":{"interfaces/IUser.html":{}},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["jsonwebtoken",{"_index":2669,"title":{},"body":{"dependencies.html":{}}}],["kasem",{"_index":545,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{}}}],["keep",{"_index":2051,"title":{},"body":{"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"license.html":{}}}],["kernel",{"_index":3052,"title":{},"body":{"license.html":{}}}],["key",{"_index":1073,"title":{},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/Content.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"classes/ContentsResponse.html":{},"classes/Engagement.html":{},"classes/Feature.html":{},"interfaces/IContent.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Uploader.html":{},"classes/Url.html":{},"index.html":{},"license.html":{}}}],["keys",{"_index":3272,"title":{},"body":{"license.html":{}}}],["khae",{"_index":549,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{}}}],["kind",{"_index":3003,"title":{},"body":{"license.html":{}}}],["kinds",{"_index":2888,"title":{},"body":{"license.html":{}}}],["know",{"_index":1947,"title":{},"body":{"classes/Engagement.html":{},"license.html":{}}}],["knowingly",{"_index":3443,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":3450,"title":{},"body":{"license.html":{}}}],["langagues",{"_index":103,"title":{},"body":{"classes/Account.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{}}}],["language",{"_index":753,"title":{},"body":{"controllers/AppController.html":{},"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"classes/Uploader.html":{},"license.html":{}}}],["languages",{"_index":250,"title":{},"body":{"interfaces/AccountRequirements.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountDto-1.html":{},"classes/CreateCredentialDto.html":{},"classes/SaveCredentialDto.html":{},"interfaces/SignupRequirements.html":{},"interfaces/TokenHeader.html":{}}}],["languagespreferences",{"_index":205,"title":{},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"interfaces/SignupRequirements.html":{}}}],["larger",{"_index":3179,"title":{},"body":{"license.html":{}}}],["later",{"_index":1412,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{},"license.html":{}}}],["law",{"_index":2995,"title":{},"body":{"license.html":{}}}],["laws",{"_index":2967,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":3414,"title":{},"body":{"license.html":{}}}],["leads",{"_index":3582,"title":{},"body":{"license.html":{}}}],["legal",{"_index":2920,"title":{},"body":{"license.html":{}}}],["length",{"_index":1232,"title":{},"body":{"classes/CastcleName.html":{}}}],["length_max",{"_index":1233,"title":{},"body":{"classes/CastcleName.html":{}}}],["length_min",{"_index":1258,"title":{},"body":{"classes/CastcleName.html":{}}}],["lengthrule",{"_index":1279,"title":{},"body":{"classes/CastcleName.html":{}}}],["letting",{"_index":2938,"title":{},"body":{"license.html":{}}}],["level",{"_index":1117,"title":{},"body":{"classes/CastLogger.html":{}}}],["liability",{"_index":3316,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2992,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":3041,"title":{},"body":{"license.html":{}}}],["library",{"_index":3241,"title":{},"body":{"license.html":{}}}],["libs/.../account.schema.ts",{"_index":2686,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../accountactivation.schema.ts",{"_index":2684,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../accountauthenid.schema.ts",{"_index":2685,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../archivehashtag.schema.ts",{"_index":3600,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../castcle.exception.ts",{"_index":2687,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../circle.schema.ts",{"_index":2688,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../comment.schema.ts",{"_index":3601,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../common.dto.ts",{"_index":2691,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../content.dto.ts",{"_index":2689,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../content.schema.ts",{"_index":3602,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../credential.schema.ts",{"_index":3603,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../engagement.schema.ts",{"_index":2690,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../feature.schema.ts",{"_index":3604,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../hashtag.schema.ts",{"_index":3606,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../hashtagitem.schema.ts",{"_index":3607,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../i18n.schema.ts",{"_index":3605,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../otp.schema.ts",{"_index":2692,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../query.pipe.ts",{"_index":2693,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../relationship.schema.ts",{"_index":3608,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../revision.schema.ts",{"_index":3609,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../uploader.ts",{"_index":3610,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../user.schema.ts",{"_index":2694,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../uxengagement.schema.ts",{"_index":3611,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/commondate/src/lib/date.ts",{"_index":1345,"title":{},"body":{"injectables/CommonDate.html":{}}}],["libs/commondate/src/lib/date.ts:31",{"_index":1364,"title":{},"body":{"injectables/CommonDate.html":{}}}],["libs/commondate/src/lib/date.ts:38",{"_index":1368,"title":{},"body":{"injectables/CommonDate.html":{}}}],["libs/commondate/src/lib/date.ts:50",{"_index":1370,"title":{},"body":{"injectables/CommonDate.html":{}}}],["libs/commondate/src/lib/date.ts:58",{"_index":1356,"title":{},"body":{"injectables/CommonDate.html":{}}}],["libs/commondate/src/lib/date.ts:66",{"_index":1359,"title":{},"body":{"injectables/CommonDate.html":{}}}],["libs/commondate/src/lib/date.ts:74",{"_index":1362,"title":{},"body":{"injectables/CommonDate.html":{}}}],["libs/database/src/lib/database.module.ts",{"_index":1896,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["libs/database/src/lib/dtos/account.dto.ts",{"_index":1808,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreateCredentialDto.html":{},"classes/SaveCredentialDto.html":{}}}],["libs/database/src/lib/dtos/account.dto.ts:27",{"_index":2351,"title":{},"body":{"classes/SaveCredentialDto.html":{}}}],["libs/database/src/lib/dtos/account.dto.ts:31",{"_index":2349,"title":{},"body":{"classes/SaveCredentialDto.html":{}}}],["libs/database/src/lib/dtos/account.dto.ts:32",{"_index":2355,"title":{},"body":{"classes/SaveCredentialDto.html":{}}}],["libs/database/src/lib/dtos/account.dto.ts:33",{"_index":2350,"title":{},"body":{"classes/SaveCredentialDto.html":{}}}],["libs/database/src/lib/dtos/account.dto.ts:34",{"_index":2356,"title":{},"body":{"classes/SaveCredentialDto.html":{}}}],["libs/database/src/lib/dtos/account.dto.ts:35",{"_index":2354,"title":{},"body":{"classes/SaveCredentialDto.html":{}}}],["libs/database/src/lib/dtos/account.dto.ts:36",{"_index":2353,"title":{},"body":{"classes/SaveCredentialDto.html":{}}}],["libs/database/src/lib/dtos/account.dto.ts:37",{"_index":2352,"title":{},"body":{"classes/SaveCredentialDto.html":{}}}],["libs/database/src/lib/dtos/account.dto.ts:41",{"_index":1827,"title":{},"body":{"classes/CreateCredentialDto.html":{}}}],["libs/database/src/lib/dtos/account.dto.ts:45",{"_index":1825,"title":{},"body":{"classes/CreateCredentialDto.html":{}}}],["libs/database/src/lib/dtos/account.dto.ts:46",{"_index":1831,"title":{},"body":{"classes/CreateCredentialDto.html":{}}}],["libs/database/src/lib/dtos/account.dto.ts:47",{"_index":1826,"title":{},"body":{"classes/CreateCredentialDto.html":{}}}],["libs/database/src/lib/dtos/account.dto.ts:48",{"_index":1832,"title":{},"body":{"classes/CreateCredentialDto.html":{}}}],["libs/database/src/lib/dtos/account.dto.ts:49",{"_index":1830,"title":{},"body":{"classes/CreateCredentialDto.html":{}}}],["libs/database/src/lib/dtos/account.dto.ts:50",{"_index":1829,"title":{},"body":{"classes/CreateCredentialDto.html":{}}}],["libs/database/src/lib/dtos/account.dto.ts:51",{"_index":1828,"title":{},"body":{"classes/CreateCredentialDto.html":{}}}],["libs/database/src/lib/dtos/account.dto.ts:55",{"_index":1812,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["libs/database/src/lib/dtos/account.dto.ts:56",{"_index":1814,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["libs/database/src/lib/dtos/account.dto.ts:57",{"_index":1811,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["libs/database/src/lib/dtos/account.dto.ts:58",{"_index":1813,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["libs/database/src/lib/dtos/account.dto.ts:61",{"_index":1815,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["libs/database/src/lib/dtos/authentication.dto.ts",{"_index":1818,"title":{},"body":{"classes/CreateAccountDto-1.html":{},"interfaces/TokenHeader.html":{}}}],["libs/database/src/lib/dtos/authentication.dto.ts:29",{"_index":1820,"title":{},"body":{"classes/CreateAccountDto-1.html":{}}}],["libs/database/src/lib/dtos/authentication.dto.ts:30",{"_index":1822,"title":{},"body":{"classes/CreateAccountDto-1.html":{}}}],["libs/database/src/lib/dtos/authentication.dto.ts:31",{"_index":1819,"title":{},"body":{"classes/CreateAccountDto-1.html":{}}}],["libs/database/src/lib/dtos/authentication.dto.ts:32",{"_index":1821,"title":{},"body":{"classes/CreateAccountDto-1.html":{}}}],["libs/database/src/lib/dtos/common.dto.ts",{"_index":1299,"title":{},"body":{"classes/CastcleQueryOptions.html":{},"classes/Pagination.html":{},"miscellaneous/enumerations.html":{}}}],["libs/database/src/lib/dtos/common.dto.ts:27",{"_index":2314,"title":{},"body":{"classes/Pagination.html":{}}}],["libs/database/src/lib/dtos/common.dto.ts:29",{"_index":2315,"title":{},"body":{"classes/Pagination.html":{}}}],["libs/database/src/lib/dtos/common.dto.ts:31",{"_index":2313,"title":{},"body":{"classes/Pagination.html":{}}}],["libs/database/src/lib/dtos/common.dto.ts:33",{"_index":2312,"title":{},"body":{"classes/Pagination.html":{}}}],["libs/database/src/lib/dtos/common.dto.ts:37",{"_index":1302,"title":{},"body":{"classes/CastcleQueryOptions.html":{}}}],["libs/database/src/lib/dtos/common.dto.ts:44",{"_index":1303,"title":{},"body":{"classes/CastcleQueryOptions.html":{}}}],["libs/database/src/lib/dtos/common.dto.ts:45",{"_index":1301,"title":{},"body":{"classes/CastcleQueryOptions.html":{}}}],["libs/database/src/lib/dtos/common.dto.ts:46",{"_index":1300,"title":{},"body":{"classes/CastcleQueryOptions.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts",{"_index":1045,"title":{},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{},"miscellaneous/enumerations.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:100",{"_index":2318,"title":{},"body":{"classes/Participant.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:102",{"_index":2316,"title":{},"body":{"classes/Participant.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:104",{"_index":2317,"title":{},"body":{"classes/Participant.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:109",{"_index":2195,"title":{},"body":{"classes/Like.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:111",{"_index":2196,"title":{},"body":{"classes/Like.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:113",{"_index":2197,"title":{},"body":{"classes/Like.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:118",{"_index":1331,"title":{},"body":{"classes/Comment.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:120",{"_index":1330,"title":{},"body":{"classes/Comment.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:122",{"_index":1332,"title":{},"body":{"classes/Comment.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:127",{"_index":2322,"title":{},"body":{"classes/Recast.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:129",{"_index":2324,"title":{},"body":{"classes/Recast.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:131",{"_index":2323,"title":{},"body":{"classes/Recast.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:136",{"_index":1052,"title":{},"body":{"classes/Author.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:138",{"_index":1054,"title":{},"body":{"classes/Author.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:140",{"_index":1049,"title":{},"body":{"classes/Author.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:142",{"_index":1050,"title":{},"body":{"classes/Author.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:144",{"_index":1048,"title":{},"body":{"classes/Author.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:146",{"_index":1055,"title":{},"body":{"classes/Author.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:148",{"_index":1051,"title":{},"body":{"classes/Author.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:153",{"_index":1606,"title":{},"body":{"classes/ContentPayloadDto.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:156",{"_index":1611,"title":{},"body":{"classes/ContentPayloadDto.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:164",{"_index":1608,"title":{},"body":{"classes/ContentPayloadDto.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:167",{"_index":1605,"title":{},"body":{"classes/ContentPayloadDto.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:170",{"_index":1607,"title":{},"body":{"classes/ContentPayloadDto.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:173",{"_index":1603,"title":{},"body":{"classes/ContentPayloadDto.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:176",{"_index":1610,"title":{},"body":{"classes/ContentPayloadDto.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:179",{"_index":1609,"title":{},"body":{"classes/ContentPayloadDto.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:182",{"_index":1602,"title":{},"body":{"classes/ContentPayloadDto.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:185",{"_index":1604,"title":{},"body":{"classes/ContentPayloadDto.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:187",{"_index":1612,"title":{},"body":{"classes/ContentPayloadDto.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:192",{"_index":1101,"title":{},"body":{"classes/AuthorDto.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:194",{"_index":1102,"title":{},"body":{"classes/AuthorDto.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:199",{"_index":2348,"title":{},"body":{"classes/SaveContentDto.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:202",{"_index":2347,"title":{},"body":{"classes/SaveContentDto.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:205",{"_index":2346,"title":{},"body":{"classes/SaveContentDto.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:232",{"_index":1613,"title":{},"body":{"classes/ContentResponse.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:237",{"_index":1792,"title":{},"body":{"classes/ContentsResponse.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:240",{"_index":1791,"title":{},"body":{"classes/ContentsResponse.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:29",{"_index":2403,"title":{},"body":{"classes/Url.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:34",{"_index":2199,"title":{},"body":{"classes/Link.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:37",{"_index":2200,"title":{},"body":{"classes/Link.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:42",{"_index":1108,"title":{},"body":{"classes/BlogPhoto.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:45",{"_index":1107,"title":{},"body":{"classes/BlogPhoto.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:50",{"_index":2360,"title":{},"body":{"classes/ShortPhoto.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:55",{"_index":2358,"title":{},"body":{"classes/ShortPayload.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:57",{"_index":2359,"title":{},"body":{"classes/ShortPayload.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:59",{"_index":2357,"title":{},"body":{"classes/ShortPayload.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:64",{"_index":2194,"title":{},"body":{"classes/ImagePayload.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:69",{"_index":1103,"title":{},"body":{"classes/BlogPayload.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:71",{"_index":1105,"title":{},"body":{"classes/BlogPayload.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:73",{"_index":1106,"title":{},"body":{"classes/BlogPayload.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:75",{"_index":1104,"title":{},"body":{"classes/BlogPayload.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:79",{"_index":2321,"title":{},"body":{"classes/QuotePayload.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:80",{"_index":2319,"title":{},"body":{"classes/QuotePayload.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:81",{"_index":2320,"title":{},"body":{"classes/QuotePayload.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:85",{"_index":2326,"title":{},"body":{"classes/RecastPayload.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:86",{"_index":2325,"title":{},"body":{"classes/RecastPayload.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:91",{"_index":1954,"title":{},"body":{"classes/Feature.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:93",{"_index":1953,"title":{},"body":{"classes/Feature.html":{}}}],["libs/database/src/lib/dtos/content.dto.ts:95",{"_index":1952,"title":{},"body":{"classes/Feature.html":{}}}],["libs/database/src/lib/dtos/token.dto.ts",{"_index":6,"title":{},"body":{"interfaces/AccessTokenPayload.html":{},"interfaces/EmailVerifyToken.html":{},"interfaces/MemberAccessTokenPayload.html":{},"interfaces/RefreshTokenPayload.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts",{"_index":1794,"title":{},"body":{"classes/Counter.html":{},"classes/FollowResponse.html":{},"classes/Link-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserImage.html":{},"classes/UserResponseDto.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:101",{"_index":2376,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:106",{"_index":2293,"title":{},"body":{"classes/PageDto.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:109",{"_index":2295,"title":{},"body":{"classes/PageDto.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:112",{"_index":2292,"title":{},"body":{"classes/PageDto.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:115",{"_index":2294,"title":{},"body":{"classes/PageDto.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:120",{"_index":2305,"title":{},"body":{"classes/PageResponseDto.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:123",{"_index":2308,"title":{},"body":{"classes/PageResponseDto.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:126",{"_index":2304,"title":{},"body":{"classes/PageResponseDto.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:129",{"_index":2306,"title":{},"body":{"classes/PageResponseDto.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:132",{"_index":2309,"title":{},"body":{"classes/PageResponseDto.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:135",{"_index":2307,"title":{},"body":{"classes/PageResponseDto.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:140",{"_index":2373,"title":{},"body":{"classes/UpdatePageDto.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:143",{"_index":2371,"title":{},"body":{"classes/UpdatePageDto.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:146",{"_index":2372,"title":{},"body":{"classes/UpdatePageDto.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:151",{"_index":2311,"title":{},"body":{"classes/PagesResponse.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:154",{"_index":2310,"title":{},"body":{"classes/PagesResponse.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:159",{"_index":2303,"title":{},"body":{"classes/PageResponse.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:164",{"_index":1986,"title":{},"body":{"classes/FollowResponse.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:167",{"_index":1985,"title":{},"body":{"classes/FollowResponse.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:28",{"_index":2412,"title":{},"body":{"classes/UserImage.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:30",{"_index":2413,"title":{},"body":{"classes/UserImage.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:35",{"_index":2201,"title":{},"body":{"classes/Link-1.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:38",{"_index":2203,"title":{},"body":{"classes/Link-1.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:41",{"_index":2205,"title":{},"body":{"classes/Link-1.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:44",{"_index":2202,"title":{},"body":{"classes/Link-1.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:47",{"_index":2204,"title":{},"body":{"classes/Link-1.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:52",{"_index":1795,"title":{},"body":{"classes/Counter.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:57",{"_index":2422,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:60",{"_index":2416,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:63",{"_index":2418,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:66",{"_index":2425,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:69",{"_index":2417,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:72",{"_index":2423,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:75",{"_index":2424,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:78",{"_index":2421,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:81",{"_index":2420,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:84",{"_index":2426,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:87",{"_index":2419,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:92",{"_index":2377,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:95",{"_index":2374,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["libs/database/src/lib/dtos/user.dto.ts:98",{"_index":2375,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["libs/database/src/lib/dtos/ux.engagement.dto.ts",{"_index":2612,"title":{},"body":{"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{}}}],["libs/database/src/lib/dtos/ux.engagement.dto.ts:26",{"_index":2619,"title":{},"body":{"classes/UxEngagementBody.html":{}}}],["libs/database/src/lib/dtos/ux.engagement.dto.ts:28",{"_index":2615,"title":{},"body":{"classes/UxEngagementBody.html":{}}}],["libs/database/src/lib/dtos/ux.engagement.dto.ts:30",{"_index":2614,"title":{},"body":{"classes/UxEngagementBody.html":{}}}],["libs/database/src/lib/dtos/ux.engagement.dto.ts:32",{"_index":2625,"title":{},"body":{"classes/UxEngagementBody.html":{}}}],["libs/database/src/lib/dtos/ux.engagement.dto.ts:34",{"_index":2620,"title":{},"body":{"classes/UxEngagementBody.html":{}}}],["libs/database/src/lib/dtos/ux.engagement.dto.ts:36",{"_index":2621,"title":{},"body":{"classes/UxEngagementBody.html":{}}}],["libs/database/src/lib/dtos/ux.engagement.dto.ts:38",{"_index":2618,"title":{},"body":{"classes/UxEngagementBody.html":{}}}],["libs/database/src/lib/dtos/ux.engagement.dto.ts:40",{"_index":2622,"title":{},"body":{"classes/UxEngagementBody.html":{}}}],["libs/database/src/lib/dtos/ux.engagement.dto.ts:42",{"_index":2623,"title":{},"body":{"classes/UxEngagementBody.html":{}}}],["libs/database/src/lib/dtos/ux.engagement.dto.ts:44",{"_index":2617,"title":{},"body":{"classes/UxEngagementBody.html":{}}}],["libs/database/src/lib/dtos/ux.engagement.dto.ts:46",{"_index":2616,"title":{},"body":{"classes/UxEngagementBody.html":{}}}],["libs/database/src/lib/dtos/ux.engagement.dto.ts:48",{"_index":2624,"title":{},"body":{"classes/UxEngagementBody.html":{}}}],["libs/database/src/lib/dtos/ux.engagement.dto.ts:52",{"_index":2634,"title":{},"body":{"classes/UxEngagementDto.html":{}}}],["libs/database/src/lib/dtos/ux.engagement.dto.ts:53",{"_index":2630,"title":{},"body":{"classes/UxEngagementDto.html":{}}}],["libs/database/src/lib/dtos/ux.engagement.dto.ts:54",{"_index":2629,"title":{},"body":{"classes/UxEngagementDto.html":{}}}],["libs/database/src/lib/dtos/ux.engagement.dto.ts:55",{"_index":2635,"title":{},"body":{"classes/UxEngagementDto.html":{}}}],["libs/database/src/lib/dtos/ux.engagement.dto.ts:56",{"_index":2636,"title":{},"body":{"classes/UxEngagementDto.html":{}}}],["libs/database/src/lib/dtos/ux.engagement.dto.ts:57",{"_index":2633,"title":{},"body":{"classes/UxEngagementDto.html":{}}}],["libs/database/src/lib/dtos/ux.engagement.dto.ts:58",{"_index":2637,"title":{},"body":{"classes/UxEngagementDto.html":{}}}],["libs/database/src/lib/dtos/ux.engagement.dto.ts:59",{"_index":2638,"title":{},"body":{"classes/UxEngagementDto.html":{}}}],["libs/database/src/lib/dtos/ux.engagement.dto.ts:60",{"_index":2632,"title":{},"body":{"classes/UxEngagementDto.html":{}}}],["libs/database/src/lib/dtos/ux.engagement.dto.ts:61",{"_index":2631,"title":{},"body":{"classes/UxEngagementDto.html":{}}}],["libs/database/src/lib/dtos/ux.engagement.dto.ts:62",{"_index":2639,"title":{},"body":{"classes/UxEngagementDto.html":{}}}],["libs/database/src/lib/schemas/account.schema.ts",{"_index":38,"title":{},"body":{"classes/Account.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["libs/database/src/lib/schemas/account.schema.ts:49",{"_index":59,"title":{},"body":{"classes/Account.html":{}}}],["libs/database/src/lib/schemas/account.schema.ts:52",{"_index":67,"title":{},"body":{"classes/Account.html":{}}}],["libs/database/src/lib/schemas/account.schema.ts:55",{"_index":54,"title":{},"body":{"classes/Account.html":{}}}],["libs/database/src/lib/schemas/account.schema.ts:58",{"_index":63,"title":{},"body":{"classes/Account.html":{}}}],["libs/database/src/lib/schemas/account.schema.ts:61",{"_index":68,"title":{},"body":{"classes/Account.html":{}}}],["libs/database/src/lib/schemas/account.schema.ts:66",{"_index":66,"title":{},"body":{"classes/Account.html":{}}}],["libs/database/src/lib/schemas/account.schema.ts:72",{"_index":58,"title":{},"body":{"classes/Account.html":{}}}],["libs/database/src/lib/schemas/account.schema.ts:77",{"_index":2034,"title":{},"body":{"interfaces/IAccount.html":{}}}],["libs/database/src/lib/schemas/account.schema.ts:81",{"_index":2035,"title":{},"body":{"interfaces/IAccount.html":{}}}],["libs/database/src/lib/schemas/accountactivation.schema.ts",{"_index":145,"title":{},"body":{"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/IAccountActivation.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["libs/database/src/lib/schemas/accountactivation.schema.ts:47",{"_index":152,"title":{},"body":{"classes/AccountActivation.html":{}}}],["libs/database/src/lib/schemas/accountactivation.schema.ts:50",{"_index":155,"title":{},"body":{"classes/AccountActivation.html":{}}}],["libs/database/src/lib/schemas/accountactivation.schema.ts:53",{"_index":156,"title":{},"body":{"classes/AccountActivation.html":{}}}],["libs/database/src/lib/schemas/accountactivation.schema.ts:56",{"_index":157,"title":{},"body":{"classes/AccountActivation.html":{}}}],["libs/database/src/lib/schemas/accountactivation.schema.ts:59",{"_index":153,"title":{},"body":{"classes/AccountActivation.html":{}}}],["libs/database/src/lib/schemas/accountactivation.schema.ts:62",{"_index":154,"title":{},"body":{"classes/AccountActivation.html":{}}}],["libs/database/src/lib/schemas/accountactivation.schema.ts:69",{"_index":2036,"title":{},"body":{"interfaces/IAccountActivation.html":{}}}],["libs/database/src/lib/schemas/accountactivation.schema.ts:81",{"_index":185,"title":{},"body":{"interfaces/AccountActivationModel.html":{}}}],["libs/database/src/lib/schemas/accountauthenid.schema.ts",{"_index":190,"title":{},"body":{"classes/AccountAuthenId.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["libs/database/src/lib/schemas/accountauthenid.schema.ts:46",{"_index":191,"title":{},"body":{"classes/AccountAuthenId.html":{}}}],["libs/database/src/lib/schemas/accountauthenid.schema.ts:49",{"_index":192,"title":{},"body":{"classes/AccountAuthenId.html":{}}}],["libs/database/src/lib/schemas/archivehashtag.schema.ts",{"_index":1032,"title":{},"body":{"classes/ArchiveHashtag.html":{},"miscellaneous/typealiases.html":{}}}],["libs/database/src/lib/schemas/archivehashtag.schema.ts:34",{"_index":1038,"title":{},"body":{"classes/ArchiveHashtag.html":{}}}],["libs/database/src/lib/schemas/archivehashtag.schema.ts:37",{"_index":1036,"title":{},"body":{"classes/ArchiveHashtag.html":{}}}],["libs/database/src/lib/schemas/archivehashtag.schema.ts:40",{"_index":1039,"title":{},"body":{"classes/ArchiveHashtag.html":{}}}],["libs/database/src/lib/schemas/base.schema.ts",{"_index":1137,"title":{},"body":{"classes/CastcleBase.html":{}}}],["libs/database/src/lib/schemas/base.schema.ts:28",{"_index":1138,"title":{},"body":{"classes/CastcleBase.html":{}}}],["libs/database/src/lib/schemas/base.schema.ts:31",{"_index":1139,"title":{},"body":{"classes/CastcleBase.html":{}}}],["libs/database/src/lib/schemas/base.schema.ts:34",{"_index":1140,"title":{},"body":{"classes/CastcleBase.html":{}}}],["libs/database/src/lib/schemas/base.schema.ts:37",{"_index":1141,"title":{},"body":{"classes/CastcleBase.html":{}}}],["libs/database/src/lib/schemas/circle.schema.ts",{"_index":1321,"title":{},"body":{"classes/Circle.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["libs/database/src/lib/schemas/circle.schema.ts:38",{"_index":1323,"title":{},"body":{"classes/Circle.html":{}}}],["libs/database/src/lib/schemas/circle.schema.ts:41",{"_index":1322,"title":{},"body":{"classes/Circle.html":{}}}],["libs/database/src/lib/schemas/circle.schema.ts:44",{"_index":1324,"title":{},"body":{"classes/Circle.html":{}}}],["libs/database/src/lib/schemas/comment.schema.ts",{"_index":1333,"title":{},"body":{"classes/Comment-1.html":{},"miscellaneous/typealiases.html":{}}}],["libs/database/src/lib/schemas/comment.schema.ts:34",{"_index":1335,"title":{},"body":{"classes/Comment-1.html":{}}}],["libs/database/src/lib/schemas/comment.schema.ts:37",{"_index":1338,"title":{},"body":{"classes/Comment-1.html":{}}}],["libs/database/src/lib/schemas/comment.schema.ts:40",{"_index":1336,"title":{},"body":{"classes/Comment-1.html":{}}}],["libs/database/src/lib/schemas/comment.schema.ts:48",{"_index":1339,"title":{},"body":{"classes/Comment-1.html":{}}}],["libs/database/src/lib/schemas/comment.schema.ts:51",{"_index":1337,"title":{},"body":{"classes/Comment-1.html":{}}}],["libs/database/src/lib/schemas/content.schema.ts",{"_index":1389,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{},"miscellaneous/typealiases.html":{}}}],["libs/database/src/lib/schemas/content.schema.ts:54",{"_index":1390,"title":{},"body":{"classes/Content.html":{}}}],["libs/database/src/lib/schemas/content.schema.ts:57",{"_index":1395,"title":{},"body":{"classes/Content.html":{}}}],["libs/database/src/lib/schemas/content.schema.ts:60",{"_index":1393,"title":{},"body":{"classes/Content.html":{}}}],["libs/database/src/lib/schemas/content.schema.ts:63",{"_index":1391,"title":{},"body":{"classes/Content.html":{}}}],["libs/database/src/lib/schemas/content.schema.ts:71",{"_index":1394,"title":{},"body":{"classes/Content.html":{}}}],["libs/database/src/lib/schemas/content.schema.ts:74",{"_index":1392,"title":{},"body":{"classes/Content.html":{}}}],["libs/database/src/lib/schemas/content.schema.ts:81",{"_index":2037,"title":{},"body":{"interfaces/IContent.html":{}}}],["libs/database/src/lib/schemas/contentitem.schema.ts",{"_index":1588,"title":{},"body":{"classes/ContentItem.html":{}}}],["libs/database/src/lib/schemas/contentitem.schema.ts:41",{"_index":1594,"title":{},"body":{"classes/ContentItem.html":{}}}],["libs/database/src/lib/schemas/contentitem.schema.ts:48",{"_index":1593,"title":{},"body":{"classes/ContentItem.html":{}}}],["libs/database/src/lib/schemas/contentitem.schema.ts:55",{"_index":1595,"title":{},"body":{"classes/ContentItem.html":{}}}],["libs/database/src/lib/schemas/contentitem.schema.ts:61",{"_index":1592,"title":{},"body":{"classes/ContentItem.html":{}}}],["libs/database/src/lib/schemas/credential.schema.ts",{"_index":1833,"title":{},"body":{"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{},"miscellaneous/typealiases.html":{}}}],["libs/database/src/lib/schemas/credential.schema.ts:121",{"_index":2043,"title":{},"body":{"interfaces/ICredential-1.html":{}}}],["libs/database/src/lib/schemas/credential.schema.ts:125",{"_index":2041,"title":{},"body":{"interfaces/ICredential-1.html":{}}}],["libs/database/src/lib/schemas/credential.schema.ts:128",{"_index":2038,"title":{},"body":{"interfaces/ICredential-1.html":{}}}],["libs/database/src/lib/schemas/credential.schema.ts:129",{"_index":2039,"title":{},"body":{"interfaces/ICredential-1.html":{}}}],["libs/database/src/lib/schemas/credential.schema.ts:45",{"_index":1836,"title":{},"body":{"classes/Credential.html":{}}}],["libs/database/src/lib/schemas/credential.schema.ts:48",{"_index":1834,"title":{},"body":{"classes/Credential.html":{}}}],["libs/database/src/lib/schemas/credential.schema.ts:51",{"_index":1840,"title":{},"body":{"classes/Credential.html":{}}}],["libs/database/src/lib/schemas/credential.schema.ts:54",{"_index":1835,"title":{},"body":{"classes/Credential.html":{}}}],["libs/database/src/lib/schemas/credential.schema.ts:57",{"_index":1841,"title":{},"body":{"classes/Credential.html":{}}}],["libs/database/src/lib/schemas/credential.schema.ts:60",{"_index":1839,"title":{},"body":{"classes/Credential.html":{}}}],["libs/database/src/lib/schemas/credential.schema.ts:63",{"_index":1838,"title":{},"body":{"classes/Credential.html":{}}}],["libs/database/src/lib/schemas/credential.schema.ts:66",{"_index":1837,"title":{},"body":{"classes/Credential.html":{}}}],["libs/database/src/lib/schemas/credential.schema.ts:72",{"_index":1891,"title":{},"body":{"interfaces/CredentialModel.html":{}}}],["libs/database/src/lib/schemas/credential.schema.ts:76",{"_index":1892,"title":{},"body":{"interfaces/CredentialModel.html":{}}}],["libs/database/src/lib/schemas/engagement.schema.ts",{"_index":1928,"title":{},"body":{"classes/Engagement.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["libs/database/src/lib/schemas/engagement.schema.ts:45",{"_index":1931,"title":{},"body":{"classes/Engagement.html":{}}}],["libs/database/src/lib/schemas/engagement.schema.ts:48",{"_index":1929,"title":{},"body":{"classes/Engagement.html":{}}}],["libs/database/src/lib/schemas/engagement.schema.ts:51",{"_index":1930,"title":{},"body":{"classes/Engagement.html":{}}}],["libs/database/src/lib/schemas/feature.schema.ts",{"_index":1955,"title":{},"body":{"classes/Feature-1.html":{},"miscellaneous/typealiases.html":{}}}],["libs/database/src/lib/schemas/feature.schema.ts:56",{"_index":1957,"title":{},"body":{"classes/Feature-1.html":{}}}],["libs/database/src/lib/schemas/feature.schema.ts:59",{"_index":1956,"title":{},"body":{"classes/Feature-1.html":{}}}],["libs/database/src/lib/schemas/hashtag.schema.ts",{"_index":1996,"title":{},"body":{"classes/Hashtag.html":{},"miscellaneous/typealiases.html":{}}}],["libs/database/src/lib/schemas/hashtag.schema.ts:33",{"_index":2000,"title":{},"body":{"classes/Hashtag.html":{}}}],["libs/database/src/lib/schemas/hashtag.schema.ts:36",{"_index":1999,"title":{},"body":{"classes/Hashtag.html":{}}}],["libs/database/src/lib/schemas/hashtag.schema.ts:39",{"_index":1998,"title":{},"body":{"classes/Hashtag.html":{}}}],["libs/database/src/lib/schemas/hashtagitem.schema.ts",{"_index":2005,"title":{},"body":{"classes/HashtagItem.html":{},"miscellaneous/typealiases.html":{}}}],["libs/database/src/lib/schemas/hashtagitem.schema.ts:41",{"_index":2006,"title":{},"body":{"classes/HashtagItem.html":{}}}],["libs/database/src/lib/schemas/hashtagitem.schema.ts:44",{"_index":2007,"title":{},"body":{"classes/HashtagItem.html":{}}}],["libs/database/src/lib/schemas/hashtagitem.schema.ts:47",{"_index":2008,"title":{},"body":{"classes/HashtagItem.html":{}}}],["libs/database/src/lib/schemas/i18n.schema.ts",{"_index":1961,"title":{},"body":{"classes/Feature-2.html":{},"miscellaneous/typealiases.html":{}}}],["libs/database/src/lib/schemas/i18n.schema.ts:33",{"_index":1963,"title":{},"body":{"classes/Feature-2.html":{}}}],["libs/database/src/lib/schemas/i18n.schema.ts:36",{"_index":1964,"title":{},"body":{"classes/Feature-2.html":{}}}],["libs/database/src/lib/schemas/i18n.schema.ts:39",{"_index":1965,"title":{},"body":{"classes/Feature-2.html":{}}}],["libs/database/src/lib/schemas/otp.schema.ts",{"_index":2045,"title":{},"body":{"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["libs/database/src/lib/schemas/otp.schema.ts:45",{"_index":2208,"title":{},"body":{"classes/Otp.html":{}}}],["libs/database/src/lib/schemas/otp.schema.ts:48",{"_index":2209,"title":{},"body":{"classes/Otp.html":{}}}],["libs/database/src/lib/schemas/otp.schema.ts:51",{"_index":2211,"title":{},"body":{"classes/Otp.html":{}}}],["libs/database/src/lib/schemas/otp.schema.ts:54",{"_index":2210,"title":{},"body":{"classes/Otp.html":{}}}],["libs/database/src/lib/schemas/otp.schema.ts:60",{"_index":2046,"title":{},"body":{"interfaces/IOtp.html":{}}}],["libs/database/src/lib/schemas/otp.schema.ts:70",{"_index":2212,"title":{},"body":{"interfaces/OtpModel.html":{}}}],["libs/database/src/lib/schemas/relationship.schema.ts",{"_index":2334,"title":{},"body":{"classes/Relationship.html":{},"miscellaneous/typealiases.html":{}}}],["libs/database/src/lib/schemas/relationship.schema.ts:33",{"_index":2337,"title":{},"body":{"classes/Relationship.html":{}}}],["libs/database/src/lib/schemas/relationship.schema.ts:36",{"_index":2335,"title":{},"body":{"classes/Relationship.html":{}}}],["libs/database/src/lib/schemas/relationship.schema.ts:40",{"_index":2336,"title":{},"body":{"classes/Relationship.html":{}}}],["libs/database/src/lib/schemas/revision.schema.ts",{"_index":2341,"title":{},"body":{"classes/Revision.html":{},"miscellaneous/typealiases.html":{}}}],["libs/database/src/lib/schemas/revision.schema.ts:36",{"_index":2342,"title":{},"body":{"classes/Revision.html":{}}}],["libs/database/src/lib/schemas/revision.schema.ts:39",{"_index":2343,"title":{},"body":{"classes/Revision.html":{}}}],["libs/database/src/lib/schemas/user.schema.ts",{"_index":2069,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["libs/database/src/lib/schemas/user.schema.ts:102",{"_index":2406,"title":{},"body":{"classes/User.html":{}}}],["libs/database/src/lib/schemas/user.schema.ts:108",{"_index":2075,"title":{},"body":{"interfaces/IUser.html":{}}}],["libs/database/src/lib/schemas/user.schema.ts:109",{"_index":2074,"title":{},"body":{"interfaces/IUser.html":{}}}],["libs/database/src/lib/schemas/user.schema.ts:110",{"_index":2073,"title":{},"body":{"interfaces/IUser.html":{}}}],["libs/database/src/lib/schemas/user.schema.ts:111",{"_index":2077,"title":{},"body":{"interfaces/IUser.html":{}}}],["libs/database/src/lib/schemas/user.schema.ts:115",{"_index":2415,"title":{},"body":{"interfaces/UserModel.html":{}}}],["libs/database/src/lib/schemas/user.schema.ts:77",{"_index":2408,"title":{},"body":{"classes/User.html":{}}}],["libs/database/src/lib/schemas/user.schema.ts:84",{"_index":2405,"title":{},"body":{"classes/User.html":{}}}],["libs/database/src/lib/schemas/user.schema.ts:87",{"_index":2404,"title":{},"body":{"classes/User.html":{}}}],["libs/database/src/lib/schemas/user.schema.ts:90",{"_index":2409,"title":{},"body":{"classes/User.html":{}}}],["libs/database/src/lib/schemas/user.schema.ts:93",{"_index":2410,"title":{},"body":{"classes/User.html":{}}}],["libs/database/src/lib/schemas/user.schema.ts:96",{"_index":2411,"title":{},"body":{"classes/User.html":{}}}],["libs/database/src/lib/schemas/user.schema.ts:99",{"_index":2407,"title":{},"body":{"classes/User.html":{}}}],["libs/database/src/lib/schemas/uxengagement.schema.ts",{"_index":2590,"title":{},"body":{"classes/UxEngagement.html":{},"miscellaneous/typealiases.html":{}}}],["libs/database/src/lib/schemas/uxengagement.schema.ts:35",{"_index":2604,"title":{},"body":{"classes/UxEngagement.html":{}}}],["libs/database/src/lib/schemas/uxengagement.schema.ts:38",{"_index":2600,"title":{},"body":{"classes/UxEngagement.html":{}}}],["libs/database/src/lib/schemas/uxengagement.schema.ts:44",{"_index":2599,"title":{},"body":{"classes/UxEngagement.html":{}}}],["libs/database/src/lib/schemas/uxengagement.schema.ts:47",{"_index":2605,"title":{},"body":{"classes/UxEngagement.html":{}}}],["libs/database/src/lib/schemas/uxengagement.schema.ts:50",{"_index":2606,"title":{},"body":{"classes/UxEngagement.html":{}}}],["libs/database/src/lib/schemas/uxengagement.schema.ts:53",{"_index":2603,"title":{},"body":{"classes/UxEngagement.html":{}}}],["libs/database/src/lib/schemas/uxengagement.schema.ts:56",{"_index":2607,"title":{},"body":{"classes/UxEngagement.html":{}}}],["libs/database/src/lib/schemas/uxengagement.schema.ts:59",{"_index":2608,"title":{},"body":{"classes/UxEngagement.html":{}}}],["libs/database/src/lib/schemas/uxengagement.schema.ts:62",{"_index":2602,"title":{},"body":{"classes/UxEngagement.html":{}}}],["libs/database/src/lib/schemas/uxengagement.schema.ts:65",{"_index":2601,"title":{},"body":{"classes/UxEngagement.html":{}}}],["libs/database/src/lib/schemas/uxengagement.schema.ts:68",{"_index":2609,"title":{},"body":{"classes/UxEngagement.html":{}}}],["libs/database/src/lib/services/authentication.service.ts",{"_index":202,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["libs/database/src/lib/services/content.service.ts",{"_index":1614,"title":{},"body":{"injectables/ContentService.html":{}}}],["libs/database/src/lib/services/content.service.ts:108",{"_index":1649,"title":{},"body":{"injectables/ContentService.html":{}}}],["libs/database/src/lib/services/content.service.ts:144",{"_index":1665,"title":{},"body":{"injectables/ContentService.html":{}}}],["libs/database/src/lib/services/content.service.ts:184",{"_index":1669,"title":{},"body":{"injectables/ContentService.html":{}}}],["libs/database/src/lib/services/content.service.ts:197",{"_index":1646,"title":{},"body":{"injectables/ContentService.html":{}}}],["libs/database/src/lib/services/content.service.ts:208",{"_index":1653,"title":{},"body":{"injectables/ContentService.html":{}}}],["libs/database/src/lib/services/content.service.ts:240",{"_index":1652,"title":{},"body":{"injectables/ContentService.html":{}}}],["libs/database/src/lib/services/content.service.ts:250",{"_index":1662,"title":{},"body":{"injectables/ContentService.html":{}}}],["libs/database/src/lib/services/content.service.ts:274",{"_index":1668,"title":{},"body":{"injectables/ContentService.html":{}}}],["libs/database/src/lib/services/content.service.ts:295",{"_index":1658,"title":{},"body":{"injectables/ContentService.html":{}}}],["libs/database/src/lib/services/content.service.ts:326",{"_index":1641,"title":{},"body":{"injectables/ContentService.html":{}}}],["libs/database/src/lib/services/content.service.ts:342",{"_index":1663,"title":{},"body":{"injectables/ContentService.html":{}}}],["libs/database/src/lib/services/content.service.ts:374",{"_index":1664,"title":{},"body":{"injectables/ContentService.html":{}}}],["libs/database/src/lib/services/content.service.ts:52",{"_index":1628,"title":{},"body":{"injectables/ContentService.html":{}}}],["libs/database/src/lib/services/content.service.ts:54",{"_index":1635,"title":{},"body":{"injectables/ContentService.html":{}}}],["libs/database/src/lib/services/content.service.ts:56",{"_index":1638,"title":{},"body":{"injectables/ContentService.html":{}}}],["libs/database/src/lib/services/content.service.ts:58",{"_index":1645,"title":{},"body":{"injectables/ContentService.html":{}}}],["libs/database/src/lib/services/content.service.ts:60",{"_index":1637,"title":{},"body":{"injectables/ContentService.html":{}}}],["libs/database/src/lib/services/content.service.ts:62",{"_index":1644,"title":{},"body":{"injectables/ContentService.html":{}}}],["libs/database/src/lib/services/content.service.ts:64",{"_index":1640,"title":{},"body":{"injectables/ContentService.html":{}}}],["libs/database/src/lib/services/content.service.ts:73",{"_index":1631,"title":{},"body":{"injectables/ContentService.html":{}}}],["libs/database/src/lib/services/content.service.ts:96",{"_index":1650,"title":{},"body":{"injectables/ContentService.html":{}}}],["libs/database/src/lib/services/user.service.ts",{"_index":2427,"title":{},"body":{"injectables/UserService.html":{}}}],["libs/database/src/lib/services/user.service.ts:117",{"_index":2451,"title":{},"body":{"injectables/UserService.html":{}}}],["libs/database/src/lib/services/user.service.ts:120",{"_index":2445,"title":{},"body":{"injectables/UserService.html":{}}}],["libs/database/src/lib/services/user.service.ts:128",{"_index":2446,"title":{},"body":{"injectables/UserService.html":{}}}],["libs/database/src/lib/services/user.service.ts:149",{"_index":2453,"title":{},"body":{"injectables/UserService.html":{}}}],["libs/database/src/lib/services/user.service.ts:170",{"_index":2452,"title":{},"body":{"injectables/UserService.html":{}}}],["libs/database/src/lib/services/user.service.ts:178",{"_index":2461,"title":{},"body":{"injectables/UserService.html":{}}}],["libs/database/src/lib/services/user.service.ts:187",{"_index":2455,"title":{},"body":{"injectables/UserService.html":{}}}],["libs/database/src/lib/services/user.service.ts:225",{"_index":2457,"title":{},"body":{"injectables/UserService.html":{}}}],["libs/database/src/lib/services/user.service.ts:256",{"_index":2447,"title":{},"body":{"injectables/UserService.html":{}}}],["libs/database/src/lib/services/user.service.ts:322",{"_index":2460,"title":{},"body":{"injectables/UserService.html":{}}}],["libs/database/src/lib/services/user.service.ts:48",{"_index":2439,"title":{},"body":{"injectables/UserService.html":{}}}],["libs/database/src/lib/services/user.service.ts:50",{"_index":2440,"title":{},"body":{"injectables/UserService.html":{}}}],["libs/database/src/lib/services/user.service.ts:52",{"_index":2441,"title":{},"body":{"injectables/UserService.html":{}}}],["libs/database/src/lib/services/user.service.ts:54",{"_index":2444,"title":{},"body":{"injectables/UserService.html":{}}}],["libs/database/src/lib/services/user.service.ts:56",{"_index":2443,"title":{},"body":{"injectables/UserService.html":{}}}],["libs/database/src/lib/services/user.service.ts:60",{"_index":2458,"title":{},"body":{"injectables/UserService.html":{}}}],["libs/database/src/lib/services/user.service.ts:69",{"_index":2459,"title":{},"body":{"injectables/UserService.html":{}}}],["libs/database/src/lib/services/user.service.ts:84",{"_index":2462,"title":{},"body":{"injectables/UserService.html":{}}}],["libs/database/src/lib/services/uxengagement.service.ts",{"_index":2640,"title":{},"body":{"injectables/UxEngagementService.html":{}}}],["libs/database/src/lib/services/uxengagement.service.ts:33",{"_index":2642,"title":{},"body":{"injectables/UxEngagementService.html":{}}}],["libs/database/src/lib/services/uxengagement.service.ts:35",{"_index":2648,"title":{},"body":{"injectables/UxEngagementService.html":{}}}],["libs/database/src/lib/services/uxengagement.service.ts:37",{"_index":2650,"title":{},"body":{"injectables/UxEngagementService.html":{}}}],["libs/database/src/lib/services/uxengagement.service.ts:46",{"_index":2644,"title":{},"body":{"injectables/UxEngagementService.html":{}}}],["libs/logger/src/lib/logger.ts",{"_index":1109,"title":{},"body":{"classes/CastLogger.html":{}}}],["libs/logger/src/lib/logger.ts:31",{"_index":1120,"title":{},"body":{"classes/CastLogger.html":{}}}],["libs/logger/src/lib/logger.ts:42",{"_index":1116,"title":{},"body":{"classes/CastLogger.html":{}}}],["libs/logger/src/lib/logger.ts:56",{"_index":1122,"title":{},"body":{"classes/CastLogger.html":{}}}],["libs/utils/aws/src/lib/image.ts",{"_index":2156,"title":{},"body":{"classes/Image.html":{}}}],["libs/utils/aws/src/lib/image.ts:28",{"_index":2160,"title":{},"body":{"classes/Image.html":{}}}],["libs/utils/aws/src/lib/image.ts:29",{"_index":2161,"title":{},"body":{"classes/Image.html":{}}}],["libs/utils/aws/src/lib/image.ts:31",{"_index":2162,"title":{},"body":{"classes/Image.html":{}}}],["libs/utils/aws/src/lib/image.ts:48",{"_index":2165,"title":{},"body":{"classes/Image.html":{}}}],["libs/utils/aws/src/lib/uploader.ts",{"_index":2378,"title":{},"body":{"classes/Uploader.html":{},"miscellaneous/typealiases.html":{}}}],["libs/utils/aws/src/lib/uploader.ts:35",{"_index":2383,"title":{},"body":{"classes/Uploader.html":{}}}],["libs/utils/aws/src/lib/uploader.ts:36",{"_index":2384,"title":{},"body":{"classes/Uploader.html":{}}}],["libs/utils/aws/src/lib/uploader.ts:40",{"_index":2386,"title":{},"body":{"classes/Uploader.html":{}}}],["libs/utils/aws/src/lib/utils",{"_index":2570,"title":{},"body":{"modules/UtilsAwsModule.html":{}}}],["libs/utils/exception/src/lib/castcle.exception.ts",{"_index":1146,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["libs/utils/exception/src/lib/castcle.exception.ts:61",{"_index":1149,"title":{},"body":{"classes/CastcleException.html":{}}}],["libs/utils/exception/src/lib/utils",{"_index":2573,"title":{},"body":{"modules/UtilsExceptionModule.html":{}}}],["libs/utils/interceptors/src/lib/contents/contents.interceptor.ts",{"_index":1527,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["libs/utils/interceptors/src/lib/credential/credential.interceptor.ts",{"_index":1874,"title":{},"body":{"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{}}}],["libs/utils/interceptors/src/lib/credential/credential.interceptor.ts:40",{"_index":1876,"title":{},"body":{"injectables/CredentialInterceptor.html":{}}}],["libs/utils/interceptors/src/lib/credential/credential.interceptor.ts:42",{"_index":1877,"title":{},"body":{"injectables/CredentialInterceptor.html":{}}}],["libs/utils/interceptors/src/lib/headers/headers.interceptor.ts",{"_index":2012,"title":{},"body":{"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{}}}],["libs/utils/interceptors/src/lib/headers/headers.interceptor.ts:39",{"_index":2013,"title":{},"body":{"injectables/HeadersInterceptor.html":{}}}],["libs/utils/interceptors/src/lib/token/token.interceptor.ts",{"_index":2365,"title":{},"body":{"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{}}}],["libs/utils/interceptors/src/lib/utils",{"_index":2579,"title":{},"body":{"modules/UtilsInterceptorsModule.html":{}}}],["libs/utils/pipes/src/lib/query/query.pipe.ts",{"_index":1756,"title":{},"body":{"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{},"miscellaneous/enumerations.html":{}}}],["libs/utils/pipes/src/lib/query/query.pipe.ts:107",{"_index":1759,"title":{},"body":{"injectables/ContentTypePipe.html":{}}}],["libs/utils/pipes/src/lib/query/query.pipe.ts:49",{"_index":2363,"title":{},"body":{"injectables/SortByPipe.html":{}}}],["libs/utils/pipes/src/lib/query/query.pipe.ts:74",{"_index":2302,"title":{},"body":{"injectables/PagePipe.html":{}}}],["libs/utils/pipes/src/lib/query/query.pipe.ts:90",{"_index":2198,"title":{},"body":{"injectables/LimitPipe.html":{}}}],["libs/utils/pipes/src/lib/utils",{"_index":2587,"title":{},"body":{"modules/UtilsPipesModule.html":{}}}],["libs/utils/src/lib/castcle",{"_index":1210,"title":{},"body":{"classes/CastcleName.html":{}}}],["libs/utils/src/lib/utils.module.ts",{"_index":2583,"title":{},"body":{"modules/UtilsModule.html":{}}}],["license",{"_index":504,"title":{"license.html":{}},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"index.html":{},"license.html":{}}}],["licensed",{"_index":2972,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":2973,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":2975,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":2894,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":3389,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":3330,"title":{},"body":{"license.html":{}}}],["likecontent",{"_index":1454,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentService.html":{}}}],["likecontent(id",{"_index":1477,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["liked",{"_index":1077,"title":{},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/Content.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"interfaces/IContent.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{}}}],["liked:boolean",{"_index":1737,"title":{},"body":{"injectables/ContentService.html":{}}}],["likeresult",{"_index":1740,"title":{},"body":{"injectables/ContentService.html":{}}}],["likeresult.find",{"_index":1742,"title":{},"body":{"injectables/ContentService.html":{}}}],["likeresult.map((eng",{"_index":1744,"title":{},"body":{"injectables/ContentService.html":{}}}],["likewise",{"_index":3381,"title":{},"body":{"license.html":{}}}],["limit",{"_index":846,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleQueryOptions.html":{},"classes/Comment.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/Pagination.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{},"license.html":{}}}],["limit(options.limit",{"_index":1718,"title":{},"body":{"injectables/ContentService.html":{}}}],["limit(queryoption.limit",{"_index":2509,"title":{},"body":{"injectables/UserService.html":{}}}],["limit(queryoptions.limit",{"_index":2496,"title":{},"body":{"injectables/UserService.html":{}}}],["limit_max",{"_index":1765,"title":{},"body":{"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{}}}],["limitation",{"_index":3531,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3522,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":3315,"title":{},"body":{"license.html":{}}}],["limitoption",{"_index":837,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["limitpipe",{"_index":886,"title":{"injectables/LimitPipe.html":{}},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{},"modules/UtilsPipesModule.html":{},"overview.html":{}}}],["limitquery",{"_index":1786,"title":{},"body":{"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{}}}],["line",{"_index":3571,"title":{},"body":{"license.html":{}}}],["link",{"_index":280,"title":{"classes/Link.html":{},"classes/Link-1.html":{}},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"classes/Feature.html":{},"classes/FollowResponse.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"interfaces/SignupRequirements.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Url.html":{},"classes/UserImage.html":{},"classes/UserResponseDto.html":{},"license.html":{}}}],["linkcredentialtoaccount",{"_index":277,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["linked",{"_index":3073,"title":{},"body":{"license.html":{}}}],["links",{"_index":1802,"title":{},"body":{"classes/Counter.html":{},"classes/FollowResponse.html":{},"interfaces/IUser.html":{},"classes/Link-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{}}}],["list",{"_index":3024,"title":{},"body":{"license.html":{}}}],["literal",{"_index":64,"title":{},"body":{"classes/Account.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"injectables/AppService-4.html":{},"injectables/AppService-5.html":{},"injectables/AppService-6.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleQueryOptions.html":{},"classes/CheckingResponse.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountDto-1.html":{},"classes/CreateCredentialDto.html":{},"interfaces/CredentialModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/SaveCredentialDto.html":{},"injectables/SortByPipe.html":{},"interfaces/UserProfile.html":{},"miscellaneous/typealiases.html":{}}}],["litigation",{"_index":3410,"title":{},"body":{"license.html":{}}}],["local",{"_index":2832,"title":{},"body":{"index.html":{},"license.html":{}}}],["locked_otp",{"_index":1184,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["log",{"_index":1111,"title":{},"body":{"classes/CastLogger.html":{}}}],["log(message",{"_index":1119,"title":{},"body":{"classes/CastLogger.html":{}}}],["logger",{"_index":607,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["logger.log('root",{"_index":902,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["logic",{"_index":2531,"title":{},"body":{"injectables/UserService.html":{}}}],["login",{"_index":403,"title":{},"body":{"controllers/AppController.html":{}}}],["login(@req",{"_index":625,"title":{},"body":{"controllers/AppController.html":{}}}],["login(req",{"_index":446,"title":{},"body":{"controllers/AppController.html":{}}}],["logindto",{"_index":447,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AppController.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/GuestLoginDto.html":{},"classes/LoginDto.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["logindto})@apiokresponse({status",{"_index":449,"title":{},"body":{"controllers/AppController.html":{}}}],["loginwithsocial",{"_index":644,"title":{},"body":{"controllers/AppController.html":{}}}],["loglevel",{"_index":1124,"title":{},"body":{"classes/CastLogger.html":{}}}],["loglevels",{"_index":1135,"title":{},"body":{"classes/CastLogger.html":{}}}],["long",{"_index":2758,"title":{},"body":{"index.html":{},"license.html":{}}}],["loss",{"_index":3539,"title":{},"body":{"license.html":{}}}],["losses",{"_index":3542,"title":{},"body":{"license.html":{}}}],["lowercase",{"_index":1238,"title":{},"body":{"classes/CastcleName.html":{}}}],["ma",{"_index":537,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{}}}],["machine",{"_index":3189,"title":{},"body":{"license.html":{}}}],["macos",{"_index":2839,"title":{},"body":{"index.html":{}}}],["made",{"_index":2749,"title":{},"body":{"index.html":{},"license.html":{}}}],["mail",{"_index":3577,"title":{},"body":{"license.html":{}}}],["maintain",{"_index":3221,"title":{},"body":{"license.html":{}}}],["major",{"_index":3046,"title":{},"body":{"license.html":{}}}],["make",{"_index":2131,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"license.html":{}}}],["makes",{"_index":2753,"title":{},"body":{"index.html":{},"license.html":{}}}],["making",{"_index":2787,"title":{},"body":{"index.html":{},"license.html":{}}}],["manner",{"_index":3429,"title":{},"body":{"license.html":{}}}],["many",{"_index":1659,"title":{},"body":{"injectables/ContentService.html":{},"license.html":{}}}],["map",{"_index":1535,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{},"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PageInterceptor.html":{}}}],["map((data",{"_index":1553,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{},"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{},"injectables/PageInterceptor.html":{}}}],["march",{"_index":3475,"title":{},"body":{"license.html":{}}}],["marked",{"_index":3326,"title":{},"body":{"license.html":{}}}],["marks",{"_index":3337,"title":{},"body":{"license.html":{}}}],["masks",{"_index":2970,"title":{},"body":{"license.html":{}}}],["matching",{"_index":33,"title":{},"body":{"interfaces/AccessTokenPayload.html":{},"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"injectables/AppService-4.html":{},"injectables/AppService-5.html":{},"injectables/AppService-6.html":{},"classes/ArchiveHashtag.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastLogger.html":{},"classes/CastcleBase.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleException.html":{},"classes/CastcleName.html":{},"classes/CastcleQueryOptions.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/Circle.html":{},"classes/Comment.html":{},"classes/Comment-1.html":{},"injectables/CommonDate.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"classes/ContentItem.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"injectables/ContentsInterceptor.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountDto-1.html":{},"classes/CreateCredentialDto.html":{},"classes/Credential.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialModel.html":{},"interfaces/CredentialRequest.html":{},"modules/DatabaseModule.html":{},"interfaces/EmailVerifyToken.html":{},"classes/Engagement.html":{},"interfaces/ErrorStatus.html":{},"classes/Feature.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"injectables/FollowInterceptor.html":{},"classes/FollowResponse.html":{},"injectables/GuestInterceptor.html":{},"classes/GuestLoginDto.html":{},"interfaces/GuestRequest.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Image.html":{},"injectables/ImageInterceptor.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"injectables/LimitPipe.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"classes/LoginDto.html":{},"interfaces/MemberAccessTokenPayload.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/PageDto.html":{},"injectables/PageInterceptor.html":{},"injectables/PagePipe.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Pagination.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"interfaces/RefreshTokenPayload.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/SaveContentDto.html":{},"classes/SaveCredentialDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"interfaces/SignupRequirements.html":{},"injectables/SortByPipe.html":{},"classes/SuggestCastcleIdReponse.html":{},"interfaces/TokenHeader.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{},"classes/TokenResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Uploader.html":{},"classes/Url.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{},"modules/UtilsAwsModule.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"classes/UxEngagement.html":{},"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{},"injectables/UxEngagementService.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"classes/suggestCastcleIdPayload.html":{},"miscellaneous/typealiases.html":{}}}],["material",{"_index":3105,"title":{},"body":{"license.html":{}}}],["materially",{"_index":3294,"title":{},"body":{"license.html":{}}}],["math.floor((date.now",{"_index":2184,"title":{},"body":{"classes/Image.html":{}}}],["maxium",{"_index":1235,"title":{},"body":{"classes/CastcleName.html":{}}}],["meaning",{"_index":3346,"title":{},"body":{"license.html":{}}}],["means",{"_index":2966,"title":{},"body":{"license.html":{}}}],["measure",{"_index":3122,"title":{},"body":{"license.html":{}}}],["measures",{"_index":3134,"title":{},"body":{"license.html":{}}}],["media",{"_index":2709,"title":{},"body":{"index.html":{}}}],["medium",{"_index":1798,"title":{},"body":{"classes/Counter.html":{},"classes/FollowResponse.html":{},"interfaces/IUser.html":{},"classes/Link-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{},"license.html":{}}}],["meet",{"_index":3160,"title":{},"body":{"license.html":{}}}],["meets",{"_index":3028,"title":{},"body":{"license.html":{}}}],["member",{"_index":17,"title":{},"body":{"interfaces/AccessTokenPayload.html":{},"classes/Account.html":{},"controllers/AppController.html":{},"interfaces/EmailVerifyToken.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{},"interfaces/MemberAccessTokenPayload.html":{},"interfaces/RefreshTokenPayload.html":{},"miscellaneous/enumerations.html":{}}}],["memberaccesstokenpayload",{"_index":22,"title":{"interfaces/MemberAccessTokenPayload.html":{}},"body":{"interfaces/AccessTokenPayload.html":{},"interfaces/AccountRequirements.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/EmailVerifyToken.html":{},"interfaces/ICredential-1.html":{},"interfaces/MemberAccessTokenPayload.html":{},"interfaces/RefreshTokenPayload.html":{},"interfaces/SignupRequirements.html":{}}}],["menu",{"_index":3026,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":516,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"license.html":{}}}],["mere",{"_index":3006,"title":{},"body":{"license.html":{}}}],["mergeaccount",{"_index":719,"title":{},"body":{"controllers/AppController.html":{}}}],["merging",{"_index":3399,"title":{},"body":{"license.html":{}}}],["message",{"_index":619,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"injectables/AppService-4.html":{},"injectables/AppService-5.html":{},"injectables/AppService-6.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastLogger.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleException.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/Comment.html":{},"classes/Comment-1.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"classes/ContentsResponse.html":{},"interfaces/ErrorStatus.html":{},"classes/Feature.html":{},"classes/GuestLoginDto.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/LoginDto.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/Url.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["messages/default",{"_index":1151,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{}}}],["met",{"_index":3088,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":1027,"title":{},"body":{"injectables/AppService-5.html":{},"dependencies.html":{}}}],["method",{"_index":757,"title":{},"body":{"controllers/AppController.html":{}}}],["methods",{"_index":183,"title":{},"body":{"interfaces/AccountActivationModel.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"injectables/AppService-4.html":{},"injectables/AppService-5.html":{},"injectables/AppService-6.html":{},"classes/CastLogger.html":{},"classes/CastcleName.html":{},"injectables/CommonDate.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"injectables/ContentsInterceptor.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialModel.html":{},"injectables/FollowInterceptor.html":{},"injectables/GuestInterceptor.html":{},"injectables/HeadersInterceptor.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Image.html":{},"injectables/ImageInterceptor.html":{},"injectables/LimitPipe.html":{},"interfaces/OtpModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PageInterceptor.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{},"injectables/TokenInterceptor.html":{},"interfaces/UserModel.html":{},"injectables/UxEngagementService.html":{},"license.html":{}}}],["micro",{"_index":2714,"title":{},"body":{"index.html":{}}}],["min",{"_index":1355,"title":{},"body":{"injectables/CommonDate.html":{}}}],["minuteadd",{"_index":1379,"title":{},"body":{"injectables/CommonDate.html":{}}}],["mis/disinformation",{"_index":2779,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":2682,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["misrepresentation",{"_index":3324,"title":{},"body":{"license.html":{}}}],["missing",{"_index":456,"title":{},"body":{"controllers/AppController.html":{}}}],["missing'})@apiokresponse({status",{"_index":427,"title":{},"body":{"controllers/AppController.html":{}}}],["missing'})@useinterceptors(guestinterceptor)@post('guestlogin",{"_index":444,"title":{},"body":{"controllers/AppController.html":{}}}],["missing_authorization_header",{"_index":1154,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["mission",{"_index":2719,"title":{},"body":{"index.html":{}}}],["mm",{"_index":734,"title":{},"body":{"controllers/AppController.html":{},"injectables/CommonDate.html":{}}}],["mobile",{"_index":43,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/ICredential.html":{},"miscellaneous/enumerations.html":{}}}],["mode",{"_index":3269,"title":{},"body":{"license.html":{}}}],["model",{"_index":81,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/AccountRequirements.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"classes/Engagement.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"classes/Relationship.html":{},"interfaces/SignupRequirements.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{},"injectables/UxEngagementService.html":{},"license.html":{}}}],["modification",{"_index":2963,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":3031,"title":{},"body":{"license.html":{}}}],["modified",{"_index":2937,"title":{},"body":{"license.html":{}}}],["modifies",{"_index":3164,"title":{},"body":{"license.html":{}}}],["modify",{"_index":499,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"license.html":{}}}],["modifying",{"_index":2997,"title":{},"body":{"license.html":{}}}],["module",{"_index":957,"title":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UtilsAwsModule.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UtilsAwsModule.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{}}}],["modules",{"_index":959,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UtilsAwsModule.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":1371,"title":{},"body":{"injectables/CommonDate.html":{},"dependencies.html":{}}}],["moment(date).format(format",{"_index":1377,"title":{},"body":{"injectables/CommonDate.html":{}}}],["mon",{"_index":1358,"title":{},"body":{"injectables/CommonDate.html":{}}}],["mongoose",{"_index":79,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController-1.html":{},"classes/ArchiveHashtag.html":{},"classes/Circle.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"classes/ContentItem.html":{},"injectables/ContentService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateCredentialDto.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"classes/Engagement.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/SaveCredentialDto.html":{},"interfaces/SignupRequirements.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{},"classes/UxEngagement.html":{},"injectables/UxEngagementService.html":{},"dependencies.html":{}}}],["mongoose.model",{"_index":1431,"title":{},"body":{"classes/Content.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/IContent.html":{},"interfaces/ICredential-1.html":{},"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["mongoose.schema",{"_index":128,"title":{},"body":{"classes/Account.html":{},"classes/Content.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"classes/Engagement.html":{},"interfaces/IAccount.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IUser.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["mongoose.schema.types.objectid",{"_index":163,"title":{},"body":{"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"classes/ContentItem.html":{},"classes/Engagement.html":{},"classes/HashtagItem.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"classes/Relationship.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UxEngagement.html":{}}}],["mongoose.types.objectid",{"_index":1817,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreateCredentialDto.html":{},"classes/SaveCredentialDto.html":{}}}],["mongoose.types.objectid((doc",{"_index":1442,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["mongoose.types.objectid(accountdocument._id",{"_index":260,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["mongoose.types.objectid(body.accountid",{"_index":792,"title":{},"body":{"controllers/AppController-1.html":{}}}],["mongoose.types.objectid(credential._id",{"_index":289,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["mongoose.types.objectid(credentialdocument._id",{"_index":275,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["mongoose.types.objectid(id",{"_index":2466,"title":{},"body":{"injectables/UserService.html":{}}}],["mongoose.types.objectid(info.accountid",{"_index":2653,"title":{},"body":{"injectables/UxEngagementService.html":{}}}],["mongooseasyncfeatures",{"_index":1918,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["mongooseforfeatures",{"_index":1915,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["mongoosemodule",{"_index":1900,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["mongoosemodule.forfeature",{"_index":1916,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["mongoosemodule.forfeatureasync",{"_index":1919,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["mongoosemodule.forroot(env.db_uri",{"_index":1926,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["mongoosemoduleoptions",{"_index":1901,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["months').calendar",{"_index":1385,"title":{},"body":{"injectables/CommonDate.html":{}}}],["more",{"_index":521,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"classes/CastcleName.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/UserService.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"index.html":{},"license.html":{}}}],["moreover",{"_index":3371,"title":{},"body":{"license.html":{}}}],["move",{"_index":1763,"title":{},"body":{"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{},"injectables/UserService.html":{}}}],["name",{"_index":187,"title":{},"body":{"interfaces/AccountActivationModel.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastLogger.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleException.html":{},"classes/CastcleName.html":{},"classes/Circle.html":{},"classes/Comment.html":{},"injectables/CommonDate.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"injectables/ContentsInterceptor.html":{},"classes/ContentsResponse.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialModel.html":{},"modules/DatabaseModule.html":{},"classes/Feature.html":{},"classes/Feature-1.html":{},"injectables/FollowInterceptor.html":{},"injectables/GuestInterceptor.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/IAccount.html":{},"interfaces/IContent.html":{},"interfaces/ICredential-1.html":{},"interfaces/IUser.html":{},"classes/Image.html":{},"injectables/ImageInterceptor.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"injectables/LimitPipe.html":{},"classes/Link.html":{},"interfaces/OtpModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PageInterceptor.html":{},"injectables/PagePipe.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"interfaces/SignupRequirements.html":{},"injectables/SortByPipe.html":{},"injectables/TokenInterceptor.html":{},"classes/Uploader.html":{},"classes/Url.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"modules/UtilsModule.html":{},"injectables/UxEngagementService.html":{}}}],["name.length",{"_index":1288,"title":{},"body":{"classes/CastcleName.html":{}}}],["name.replace",{"_index":1286,"title":{},"body":{"classes/CastcleName.html":{}}}],["name.suggestcastcleid",{"_index":369,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["name.ts",{"_index":1211,"title":{},"body":{"classes/CastcleName.html":{}}}],["name.ts:104",{"_index":1229,"title":{},"body":{"classes/CastcleName.html":{}}}],["name.ts:120",{"_index":1253,"title":{},"body":{"classes/CastcleName.html":{}}}],["name.ts:33",{"_index":1227,"title":{},"body":{"classes/CastcleName.html":{}}}],["name.ts:34",{"_index":1223,"title":{},"body":{"classes/CastcleName.html":{}}}],["name.ts:35",{"_index":1224,"title":{},"body":{"classes/CastcleName.html":{}}}],["name.ts:36",{"_index":1225,"title":{},"body":{"classes/CastcleName.html":{}}}],["name.ts:37",{"_index":1222,"title":{},"body":{"classes/CastcleName.html":{}}}],["name.ts:38",{"_index":1226,"title":{},"body":{"classes/CastcleName.html":{}}}],["name.ts:51",{"_index":1237,"title":{},"body":{"classes/CastcleName.html":{}}}],["name.ts:63",{"_index":1241,"title":{},"body":{"classes/CastcleName.html":{}}}],["name.ts:74",{"_index":1246,"title":{},"body":{"classes/CastcleName.html":{}}}],["name.ts:85",{"_index":1249,"title":{},"body":{"classes/CastcleName.html":{}}}],["names",{"_index":3329,"title":{},"body":{"license.html":{}}}],["namingresult",{"_index":2255,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["nature",{"_index":3176,"title":{},"body":{"license.html":{}}}],["navigate",{"_index":2834,"title":{},"body":{"index.html":{}}}],["necessary",{"_index":3527,"title":{},"body":{"license.html":{}}}],["need",{"_index":555,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentTypePipe.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"interfaces/IContent.html":{},"interfaces/IUser.html":{},"injectables/LimitPipe.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PagePipe.html":{},"classes/Relationship.html":{},"injectables/SortByPipe.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"license.html":{}}}],["needed",{"_index":3061,"title":{},"body":{"license.html":{}}}],["nestinterceptor",{"_index":1878,"title":{},"body":{"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{}}}],["nestjs/common",{"_index":208,"title":{},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"injectables/AppService-4.html":{},"injectables/AppService-5.html":{},"injectables/AppService-6.html":{},"classes/CastLogger.html":{},"classes/CastcleException.html":{},"injectables/CommonDate.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"injectables/ContentsInterceptor.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{},"modules/DatabaseModule.html":{},"interfaces/ErrorStatus.html":{},"injectables/FollowInterceptor.html":{},"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"injectables/ImageInterceptor.html":{},"injectables/LimitPipe.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PageInterceptor.html":{},"injectables/PagePipe.html":{},"interfaces/SignupRequirements.html":{},"injectables/SortByPipe.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{},"injectables/UserService.html":{},"modules/UtilsAwsModule.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"injectables/UxEngagementService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":2662,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":78,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"interfaces/AccountRequirements.html":{},"classes/ArchiveHashtag.html":{},"classes/CastcleBase.html":{},"classes/Circle.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"classes/ContentItem.html":{},"injectables/ContentService.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"modules/DatabaseModule.html":{},"classes/Engagement.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"interfaces/SignupRequirements.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{},"classes/UxEngagement.html":{},"injectables/UxEngagementService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2664,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":584,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleQueryOptions.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/Comment.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"classes/Feature.html":{},"classes/FollowResponse.html":{},"classes/GuestLoginDto.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"classes/LoginDto.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Pagination.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Url.html":{},"classes/UserImage.html":{},"classes/UserResponseDto.html":{},"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"dependencies.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["network",{"_index":2796,"title":{},"body":{"index.html":{},"license.html":{}}}],["new",{"_index":176,"title":{},"body":{"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"injectables/CommonDate.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"injectables/ContentService.html":{},"injectables/ContentsInterceptor.html":{},"classes/Credential.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialModel.html":{},"interfaces/CredentialRequest.html":{},"injectables/FollowInterceptor.html":{},"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"classes/Image.html":{},"injectables/ImageInterceptor.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PageInterceptor.html":{},"interfaces/SignupRequirements.html":{},"classes/Uploader.html":{},"injectables/UserService.html":{},"injectables/UxEngagementService.html":{},"license.html":{}}}],["newaccesstoken",{"_index":694,"title":{},"body":{"controllers/AppController.html":{}}}],["newaccount",{"_index":248,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["newaccount.credentials",{"_index":273,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["newaccount.credentials.push",{"_index":274,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["newaccount.save",{"_index":253,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["newaccount.visibility",{"_index":252,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["newaccountactivation",{"_index":708,"title":{},"body":{"controllers/AppController.html":{}}}],["newaccountactivation.verifytoken",{"_index":710,"title":{},"body":{"controllers/AppController.html":{}}}],["newcontent",{"_index":1682,"title":{},"body":{"injectables/ContentService.html":{}}}],["newly",{"_index":385,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["newname",{"_index":1290,"title":{},"body":{"classes/CastcleName.html":{}}}],["newpage",{"_index":2487,"title":{},"body":{"injectables/UserService.html":{}}}],["newpage.save",{"_index":2492,"title":{},"body":{"injectables/UserService.html":{}}}],["newpassword",{"_index":386,"title":{},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/GuestLoginDto.html":{},"classes/LoginDto.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"interfaces/SignupRequirements.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["newrefcode",{"_index":2058,"title":{},"body":{"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{}}}],["newrevison",{"_index":1440,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["newrevison.save",{"_index":1443,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["next",{"_index":130,"title":{},"body":{"classes/Account.html":{},"classes/CastcleQueryOptions.html":{},"classes/Content.html":{},"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{},"classes/Engagement.html":{},"injectables/FollowInterceptor.html":{},"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"interfaces/IAccount.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/IUser.html":{},"injectables/ImageInterceptor.html":{},"injectables/PageInterceptor.html":{},"classes/Pagination.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"license.html":{}}}],["next.handle",{"_index":1888,"title":{},"body":{"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{}}}],["nodemailer",{"_index":984,"title":{},"body":{"injectables/AppService.html":{},"dependencies.html":{}}}],["nodemailer.createtransport",{"_index":986,"title":{},"body":{"injectables/AppService.html":{}}}],["non",{"_index":2795,"title":{},"body":{"index.html":{},"license.html":{}}}],["noncommercially",{"_index":3210,"title":{},"body":{"license.html":{}}}],["normal",{"_index":3044,"title":{},"body":{"license.html":{}}}],["normally",{"_index":3246,"title":{},"body":{"license.html":{}}}],["nothing",{"_index":3382,"title":{},"body":{"license.html":{}}}],["notice",{"_index":3018,"title":{},"body":{"license.html":{}}}],["notices",{"_index":494,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"license.html":{}}}],["notifies",{"_index":3372,"title":{},"body":{"license.html":{}}}],["notify",{"_index":3367,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":3310,"title":{},"body":{"license.html":{}}}],["november",{"_index":2877,"title":{},"body":{"license.html":{}}}],["now",{"_index":175,"title":{},"body":{"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/AccountRequirements.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/IAccountActivation.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"interfaces/SignupRequirements.html":{}}}],["now.gettime",{"_index":177,"title":{},"body":{"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/IAccountActivation.html":{},"interfaces/ICredential-1.html":{}}}],["npm",{"_index":2824,"title":{},"body":{"index.html":{}}}],["null",{"_index":123,"title":{},"body":{"classes/Account.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"classes/Feature.html":{},"classes/FollowResponse.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{},"interfaces/IUser.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Url.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{}}}],["number",{"_index":105,"title":{},"body":{"classes/Account.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleQueryOptions.html":{},"classes/Comment.html":{},"classes/Comment-1.html":{},"injectables/CommonDate.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"classes/Engagement.html":{},"classes/Feature.html":{},"classes/FollowResponse.html":{},"classes/Hashtag.html":{},"interfaces/IAccount.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/IUser.html":{},"classes/Image.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"injectables/LimitPipe.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/PageDto.html":{},"injectables/PagePipe.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Pagination.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"injectables/SortByPipe.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Uploader.html":{},"classes/Url.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{},"license.html":{}}}],["number(env.jwt_access_expires_in",{"_index":1846,"title":{},"body":{"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{}}}],["number(env.jwt_refresh_expires_in",{"_index":1851,"title":{},"body":{"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{}}}],["number(env.jwt_verify_expires_in",{"_index":178,"title":{},"body":{"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/IAccountActivation.html":{}}}],["number(error.statuscode",{"_index":1209,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{}}}],["number(limitquery",{"_index":1789,"title":{},"body":{"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{}}}],["number(pagequery",{"_index":1784,"title":{},"body":{"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{}}}],["numbered",{"_index":3510,"title":{},"body":{"license.html":{}}}],["object",{"_index":65,"title":{},"body":{"classes/Account.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"classes/ContentItem.html":{},"injectables/ContentService.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"classes/Engagement.html":{},"classes/Feature-2.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"interfaces/IAccount.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IUser.html":{},"classes/Revision.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UxEngagement.html":{},"license.html":{}}}],["objective",{"_index":718,"title":{},"body":{"controllers/AppController.html":{},"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{}}}],["objectref",{"_index":1441,"title":{},"body":{"classes/Content.html":{},"injectables/ContentService.html":{},"classes/Feature-2.html":{},"classes/HashtagItem.html":{},"interfaces/IContent.html":{},"classes/Revision.html":{}}}],["obligate",{"_index":3487,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":3227,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":3124,"title":{},"body":{"license.html":{}}}],["observable",{"_index":2366,"title":{},"body":{"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{}}}],["occasionally",{"_index":3209,"title":{},"body":{"license.html":{}}}],["occurring",{"_index":3379,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":3279,"title":{},"body":{"license.html":{}}}],["offer",{"_index":2918,"title":{},"body":{"license.html":{}}}],["offered",{"_index":3235,"title":{},"body":{"license.html":{}}}],["offering",{"_index":3213,"title":{},"body":{"license.html":{}}}],["official",{"_index":3033,"title":{},"body":{"license.html":{}}}],["offset",{"_index":1365,"title":{},"body":{"injectables/CommonDate.html":{}}}],["old",{"_index":282,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["older",{"_index":2950,"title":{},"body":{"license.html":{}}}],["once",{"_index":1514,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["one",{"_index":2055,"title":{},"body":{"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"index.html":{},"license.html":{}}}],["operate",{"_index":3545,"title":{},"body":{"license.html":{}}}],["operated",{"_index":3218,"title":{},"body":{"license.html":{}}}],["operating",{"_index":3055,"title":{},"body":{"license.html":{}}}],["operation",{"_index":3142,"title":{},"body":{"license.html":{}}}],["operator",{"_index":2945,"title":{},"body":{"license.html":{}}}],["opportunity",{"_index":3495,"title":{},"body":{"license.html":{}}}],["option",{"_index":1655,"title":{},"body":{"injectables/ContentService.html":{},"license.html":{}}}],["optional",{"_index":9,"title":{},"body":{"interfaces/AccessTokenPayload.html":{},"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"injectables/AppService.html":{},"classes/ArchiveHashtag.html":{},"classes/BlogPayload.html":{},"classes/CastLogger.html":{},"classes/CastcleBase.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleException.html":{},"classes/CastcleName.html":{},"classes/CastcleQueryOptions.html":{},"classes/Circle.html":{},"classes/Comment-1.html":{},"injectables/CommonDate.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"classes/ContentItem.html":{},"classes/ContentPayloadDto.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"injectables/ContentsInterceptor.html":{},"classes/CreateCredentialDto.html":{},"classes/Credential.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialModel.html":{},"interfaces/EmailVerifyToken.html":{},"classes/Engagement.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"injectables/FollowInterceptor.html":{},"injectables/GuestInterceptor.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential-1.html":{},"interfaces/IUser.html":{},"classes/Image.html":{},"injectables/ImageInterceptor.html":{},"classes/ImagePayload.html":{},"injectables/LimitPipe.html":{},"classes/Link-1.html":{},"interfaces/MemberAccessTokenPayload.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PageInterceptor.html":{},"injectables/PagePipe.html":{},"classes/Pagination.html":{},"classes/QuotePayload.html":{},"classes/RecastPayload.html":{},"interfaces/RefreshTokenPayload.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/SaveContentDto.html":{},"classes/SaveCredentialDto.html":{},"classes/ShortPayload.html":{},"injectables/SortByPipe.html":{},"injectables/TokenInterceptor.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Uploader.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{},"classes/UxEngagement.html":{},"injectables/UxEngagementService.html":{}}}],["options",{"_index":1654,"title":{},"body":{"injectables/ContentService.html":{},"classes/Image.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/Uploader.html":{},"license.html":{}}}],["options.addtime",{"_index":2392,"title":{},"body":{"classes/Uploader.html":{}}}],["options.filename",{"_index":2395,"title":{},"body":{"classes/Uploader.html":{}}}],["options.filename}${extensionname",{"_index":2396,"title":{},"body":{"classes/Uploader.html":{}}}],["options.language",{"_index":2401,"title":{},"body":{"classes/Uploader.html":{}}}],["options.order",{"_index":2192,"title":{},"body":{"classes/Image.html":{}}}],["options.sortby.field}`).exec",{"_index":1725,"title":{},"body":{"injectables/ContentService.html":{}}}],["options.sortby.type",{"_index":1721,"title":{},"body":{"injectables/ContentService.html":{}}}],["options.type",{"_index":1714,"title":{},"body":{"injectables/ContentService.html":{}}}],["order",{"_index":1569,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{},"classes/Image.html":{},"classes/Uploader.html":{},"license.html":{}}}],["organization",{"_index":3396,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":2978,"title":{},"body":{"license.html":{}}}],["origin",{"_index":3325,"title":{},"body":{"license.html":{}}}],["original",{"_index":3327,"title":{},"body":{"license.html":{}}}],["others",{"_index":3099,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":3097,"title":{},"body":{"license.html":{}}}],["otp",{"_index":372,"title":{"classes/Otp.html":{}},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"modules/DatabaseModule.html":{},"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"interfaces/SignupRequirements.html":{}}}],["otp.delete",{"_index":391,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["otp.expiredate.toisostring",{"_index":768,"title":{},"body":{"controllers/AppController.html":{}}}],["otp.isvalid",{"_index":774,"title":{},"body":{"controllers/AppController.html":{}}}],["otp.refcode",{"_index":767,"title":{},"body":{"controllers/AppController.html":{}}}],["otp.save",{"_index":2064,"title":{},"body":{"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{}}}],["otpdocument",{"_index":214,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"interfaces/SignupRequirements.html":{},"miscellaneous/typealiases.html":{}}}],["otpdocument).expiredate.gettime",{"_index":2067,"title":{},"body":{"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{}}}],["otpfindingresult",{"_index":2059,"title":{},"body":{"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{}}}],["otpmodel",{"_index":215,"title":{"interfaces/OtpModel.html":{}},"body":{"interfaces/AccountRequirements.html":{},"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"interfaces/SignupRequirements.html":{}}}],["otpobjective",{"_index":216,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"interfaces/SignupRequirements.html":{},"miscellaneous/enumerations.html":{}}}],["otpobjective.changepassword",{"_index":375,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["otpschema",{"_index":1914,"title":{},"body":{"modules/DatabaseModule.html":{},"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{}}}],["otpschema.methods.isvalid",{"_index":2065,"title":{},"body":{"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{}}}],["otpschema.statics.generate",{"_index":2057,"title":{},"body":{"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{}}}],["out",{"_index":967,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsPipesModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":3092,"title":{},"body":{"license.html":{}}}],["outside",{"_index":3110,"title":{},"body":{"license.html":{}}}],["overview",{"_index":1800,"title":{"overview.html":{}},"body":{"classes/Counter.html":{},"classes/FollowResponse.html":{},"interfaces/IUser.html":{},"classes/Link-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{},"overview.html":{}}}],["owned",{"_index":3425,"title":{},"body":{"license.html":{}}}],["owner",{"_index":2761,"title":{},"body":{"index.html":{}}}],["owneraccount",{"_index":340,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/IUser.html":{},"interfaces/SignupRequirements.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{}}}],["ownership",{"_index":2797,"title":{},"body":{"index.html":{}}}],["p.topageresponse",{"_index":2281,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["package",{"_index":2660,"title":{"dependencies.html":{}},"body":{}}],["package.json",{"_index":2858,"title":{},"body":{"index.html":{}}}],["packaged",{"_index":3169,"title":{},"body":{"license.html":{}}}],["packages",{"_index":2841,"title":{},"body":{"index.html":{}}}],["packaging",{"_index":3045,"title":{},"body":{"license.html":{}}}],["page",{"_index":845,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleQueryOptions.html":{},"classes/Comment.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"interfaces/IUser.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/Pagination.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["page.delete",{"_index":2287,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["page.displayname",{"_index":2272,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["page.profile.images.avatar",{"_index":2269,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["page.profile.images.cover",{"_index":2270,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["page.save",{"_index":2274,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["page.topageresponse",{"_index":2264,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["page_is_exist",{"_index":1194,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["pagecontroller",{"_index":2213,"title":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["pagecontroller.name",{"_index":2245,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["pagedto",{"_index":1675,"title":{"classes/PageDto.html":{}},"body":{"injectables/ContentService.html":{},"classes/Counter.html":{},"classes/FollowResponse.html":{},"interfaces/IUser.html":{},"classes/Link-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/PageDto.html":{},"injectables/PageInterceptor.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{}}}],["pagedto.avatar",{"_index":2490,"title":{},"body":{"injectables/UserService.html":{}}}],["pagedto.castcleid",{"_index":2488,"title":{},"body":{"injectables/UserService.html":{}}}],["pagedto.cover",{"_index":2491,"title":{},"body":{"injectables/UserService.html":{}}}],["pagedto.displayname",{"_index":2489,"title":{},"body":{"injectables/UserService.html":{}}}],["pagedto})@httpcode(201)@useinterceptors(pageinterceptor)@put('pages/:id",{"_index":2241,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["pagedto})@useinterceptors(credentialinterceptor)@post('pages",{"_index":2223,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["pageinterceptor",{"_index":2243,"title":{"injectables/PageInterceptor.html":{}},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PageInterceptor.html":{}}}],["pageoption",{"_index":836,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["pagepipe",{"_index":885,"title":{"injectables/PagePipe.html":{}},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{},"modules/UtilsPipesModule.html":{},"overview.html":{}}}],["pagequery",{"_index":1781,"title":{},"body":{"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{}}}],["pageresponse",{"_index":1807,"title":{"classes/PageResponse.html":{}},"body":{"classes/Counter.html":{},"classes/FollowResponse.html":{},"interfaces/IUser.html":{},"classes/Link-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{}}}],["pageresponsedto",{"_index":1804,"title":{"classes/PageResponseDto.html":{}},"body":{"classes/Counter.html":{},"classes/FollowResponse.html":{},"interfaces/IUser.html":{},"classes/Link-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{}}}],["pageresponsedto})@useinterceptors(pageinterceptor)@get('pages/:id",{"_index":2237,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["pageresponse})@apiresponse({status",{"_index":2222,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["pages",{"_index":2278,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/UserService.html":{}}}],["pages.items.map((p",{"_index":2280,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["pages.map((p",{"_index":2528,"title":{},"body":{"injectables/UserService.html":{}}}],["pages.pagination",{"_index":2282,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["pagesresponse",{"_index":1806,"title":{"classes/PagesResponse.html":{}},"body":{"classes/Counter.html":{},"classes/FollowResponse.html":{},"classes/Link-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserImage.html":{},"classes/UserResponseDto.html":{}}}],["pagesresponse})@useinterceptors(pageinterceptor)@get('pages",{"_index":2229,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["pagination",{"_index":928,"title":{"classes/Pagination.html":{}},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleQueryOptions.html":{},"classes/Comment.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"classes/Feature.html":{},"classes/FollowResponse.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Pagination.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Url.html":{},"classes/UserImage.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{}}}],["paper",{"_index":3576,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":3357,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":3435,"title":{},"body":{"license.html":{}}}],["param",{"_index":358,"title":{},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"classes/CastcleName.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"interfaces/IOtp.html":{},"injectables/LimitPipe.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PagePipe.html":{},"interfaces/SignupRequirements.html":{},"injectables/SortByPipe.html":{},"injectables/UserService.html":{},"injectables/UxEngagementService.html":{}}}],["param('id",{"_index":911,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["parameters",{"_index":186,"title":{},"body":{"interfaces/AccountActivationModel.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"injectables/AppService.html":{},"classes/CastLogger.html":{},"classes/CastcleException.html":{},"classes/CastcleName.html":{},"injectables/CommonDate.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"injectables/ContentsInterceptor.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialModel.html":{},"injectables/FollowInterceptor.html":{},"injectables/GuestInterceptor.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential-1.html":{},"interfaces/IUser.html":{},"classes/Image.html":{},"injectables/ImageInterceptor.html":{},"injectables/LimitPipe.html":{},"interfaces/OtpModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PageInterceptor.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{},"injectables/TokenInterceptor.html":{},"classes/Uploader.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"injectables/UxEngagementService.html":{}}}],["params",{"_index":1766,"title":{},"body":{"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{}}}],["part",{"_index":2980,"title":{},"body":{"license.html":{}}}],["participant",{"_index":1075,"title":{"classes/Participant.html":{}},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{}}}],["participant:string",{"_index":1738,"title":{},"body":{"injectables/ContentService.html":{}}}],["participants",{"_index":1079,"title":{},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/Content.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"interfaces/IContent.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{}}}],["particular",{"_index":518,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"license.html":{}}}],["parties",{"_index":3005,"title":{},"body":{"license.html":{}}}],["parts",{"_index":3080,"title":{},"body":{"license.html":{}}}],["party",{"_index":3219,"title":{},"body":{"license.html":{}}}],["party's",{"_index":3401,"title":{},"body":{"license.html":{}}}],["pass",{"_index":999,"title":{},"body":{"injectables/AppService.html":{}}}],["password",{"_index":44,"title":{},"body":{"classes/Account.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/GuestLoginDto.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{},"interfaces/IOtp.html":{},"classes/LoginDto.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"interfaces/SignupRequirements.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"modules/UtilsModule.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"license.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["password.create(password",{"_index":118,"title":{},"body":{"classes/Account.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{}}}],["password.generaterandomdigits(env.otp_digits",{"_index":2060,"title":{},"body":{"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{}}}],["password.verify(password",{"_index":125,"title":{},"body":{"classes/Account.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{}}}],["pasword",{"_index":110,"title":{},"body":{"classes/Account.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{}}}],["patent",{"_index":3356,"title":{},"body":{"license.html":{}}}],["patents",{"_index":3420,"title":{},"body":{"license.html":{}}}],["payload",{"_index":174,"title":{},"body":{"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/Comment.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"injectables/ContentsInterceptor.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"classes/Feature.html":{},"classes/FollowResponse.html":{},"classes/GuestLoginDto.html":{},"classes/HashtagItem.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential-1.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"classes/LoginDto.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/Revision.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"interfaces/SignupRequirements.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Url.html":{},"classes/UserImage.html":{},"classes/UserResponseDto.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["payload.accesstokenexpirestime",{"_index":1847,"title":{},"body":{"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{}}}],["payload.payload",{"_index":1539,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["payload.payload.photo",{"_index":1544,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["payload.payload.photo.contents",{"_index":1545,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["payload.payload.photo.contents.length",{"_index":1546,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["payload.refreshtokenexpirestime",{"_index":1852,"title":{},"body":{"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{}}}],["payload.type",{"_index":1538,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["payload.verifytokenexpirestime",{"_index":180,"title":{},"body":{"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/IAccountActivation.html":{}}}],["payload_channel_mismatch",{"_index":1174,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["payload_type_mismatch",{"_index":1202,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["payment",{"_index":3468,"title":{},"body":{"license.html":{}}}],["peer",{"_index":3230,"title":{},"body":{"license.html":{}}}],["peers",{"_index":3233,"title":{},"body":{"license.html":{}}}],["people",{"_index":1053,"title":{},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"interfaces/IUser.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"miscellaneous/enumerations.html":{}}}],["performance",{"_index":690,"title":{},"body":{"controllers/AppController.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/UserService.html":{},"license.html":{}}}],["performing",{"_index":3068,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":3365,"title":{},"body":{"license.html":{}}}],["permission",{"_index":2921,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":3084,"title":{},"body":{"license.html":{}}}],["permissive",{"_index":3151,"title":{},"body":{"license.html":{}}}],["permit",{"_index":3185,"title":{},"body":{"license.html":{}}}],["permits",{"_index":2936,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":2880,"title":{},"body":{"license.html":{}}}],["perpetuity",{"_index":3283,"title":{},"body":{"license.html":{}}}],["personal",{"_index":3244,"title":{},"body":{"license.html":{}}}],["pertinent",{"_index":3485,"title":{},"body":{"license.html":{}}}],["phet",{"_index":544,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{}}}],["philosophy",{"_index":2763,"title":{},"body":{"index.html":{}}}],["phone",{"_index":347,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["photo",{"_index":1063,"title":{},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{}}}],["photo.contents.map((url",{"_index":1548,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["photos",{"_index":2775,"title":{},"body":{"index.html":{}}}],["physical",{"_index":3193,"title":{},"body":{"license.html":{}}}],["physically",{"_index":3207,"title":{},"body":{"license.html":{}}}],["pieces",{"_index":2911,"title":{},"body":{"license.html":{}}}],["pipes.module.ts",{"_index":2588,"title":{},"body":{"modules/UtilsPipesModule.html":{}}}],["pipetransform",{"_index":1762,"title":{},"body":{"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{}}}],["pitch",{"_index":2819,"title":{},"body":{"index.html":{}}}],["pj_52ruba56xy37na4ew3tpvwsj5shipf8",{"_index":647,"title":{},"body":{"controllers/AppController.html":{}}}],["place",{"_index":3215,"title":{},"body":{"license.html":{}}}],["plan",{"_index":642,"title":{},"body":{"controllers/AppController.html":{}}}],["platform",{"_index":223,"title":{},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"classes/CreateAccountDto.html":{},"classes/CreateCredentialDto.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{},"interfaces/ICredential-1.html":{},"classes/SaveCredentialDto.html":{},"interfaces/SignupRequirements.html":{},"classes/UxEngagement.html":{},"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{},"index.html":{}}}],["platform's",{"_index":2712,"title":{},"body":{"index.html":{}}}],["play",{"_index":2805,"title":{},"body":{"index.html":{}}}],["plays",{"_index":2726,"title":{},"body":{"index.html":{}}}],["please",{"_index":541,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"index.html":{}}}],["please_try_again",{"_index":1178,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["plus",{"_index":3404,"title":{},"body":{"license.html":{}}}],["pointer",{"_index":3572,"title":{},"body":{"license.html":{}}}],["populate",{"_index":1660,"title":{},"body":{"injectables/ContentService.html":{}}}],["populate('followeduser",{"_index":2522,"title":{},"body":{"injectables/UserService.html":{}}}],["populate('owneraccount",{"_index":2119,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["populate('user",{"_index":1741,"title":{},"body":{"injectables/ContentService.html":{},"injectables/UserService.html":{}}}],["port",{"_index":989,"title":{},"body":{"injectables/AppService.html":{}}}],["portion",{"_index":3238,"title":{},"body":{"license.html":{}}}],["ports",{"_index":993,"title":{},"body":{"injectables/AppService.html":{}}}],["possesses",{"_index":3204,"title":{},"body":{"license.html":{}}}],["possession",{"_index":3167,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":3547,"title":{},"body":{"license.html":{}}}],["possible",{"_index":3563,"title":{},"body":{"license.html":{}}}],["post",{"_index":559,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["post(':id/quotecast",{"_index":1523,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["post(':id/recast",{"_index":1520,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["post('changepasswordsubmit",{"_index":770,"title":{},"body":{"controllers/AppController.html":{}}}],["post('checkcastcleidexists",{"_index":711,"title":{},"body":{"controllers/AppController.html":{}}}],["post('checkemailexists",{"_index":610,"title":{},"body":{"controllers/AppController.html":{}}}],["post('feed",{"_index":1496,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["post('forgotpasswordrequestotp",{"_index":725,"title":{},"body":{"controllers/AppController.html":{}}}],["post('guestlogin",{"_index":649,"title":{},"body":{"controllers/AppController.html":{}}}],["post('login",{"_index":624,"title":{},"body":{"controllers/AppController.html":{}}}],["post('loginwithsocial",{"_index":643,"title":{},"body":{"controllers/AppController.html":{}}}],["post('pages",{"_index":2253,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["post('refreshtoken",{"_index":686,"title":{},"body":{"controllers/AppController.html":{}}}],["post('register",{"_index":661,"title":{},"body":{"controllers/AppController.html":{}}}],["post('requestlinkverify",{"_index":705,"title":{},"body":{"controllers/AppController.html":{}}}],["post('requestotp",{"_index":714,"title":{},"body":{"controllers/AppController.html":{}}}],["post('suggestcastcleid",{"_index":759,"title":{},"body":{"controllers/AppController.html":{}}}],["post('verificationemail",{"_index":699,"title":{},"body":{"controllers/AppController.html":{}}}],["post('verificationotp",{"_index":723,"title":{},"body":{"controllers/AppController.html":{}}}],["post('verificationpassword",{"_index":763,"title":{},"body":{"controllers/AppController.html":{}}}],["power",{"_index":2786,"title":{},"body":{"index.html":{},"license.html":{}}}],["practical",{"_index":2895,"title":{},"body":{"license.html":{}}}],["practice",{"_index":3440,"title":{},"body":{"license.html":{}}}],["preamblethe",{"_index":2886,"title":{},"body":{"license.html":{}}}],["precise",{"_index":2959,"title":{},"body":{"license.html":{}}}],["predecessor",{"_index":3402,"title":{},"body":{"license.html":{}}}],["prefer",{"_index":2828,"title":{},"body":{"index.html":{}}}],["preferences",{"_index":45,"title":{},"body":{"classes/Account.html":{},"interfaces/AccountRequirements.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountDto-1.html":{},"classes/CreateCredentialDto.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{},"classes/SaveCredentialDto.html":{},"interfaces/SignupRequirements.html":{},"interfaces/TokenHeader.html":{}}}],["preferred",{"_index":3030,"title":{},"body":{"license.html":{}}}],["preferredlanguage",{"_index":12,"title":{},"body":{"interfaces/AccessTokenPayload.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"interfaces/EmailVerifyToken.html":{},"interfaces/MemberAccessTokenPayload.html":{},"interfaces/RefreshTokenPayload.html":{},"interfaces/SignupRequirements.html":{}}}],["prefix",{"_index":2016,"title":{},"body":{"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{}}}],["prerequisites",{"_index":2821,"title":{},"body":{"index.html":{}}}],["present",{"_index":3503,"title":{},"body":{"license.html":{}}}],["presents",{"_index":3023,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":3320,"title":{},"body":{"license.html":{}}}],["prevent",{"_index":1701,"title":{},"body":{"injectables/ContentService.html":{}}}],["prevented",{"_index":3277,"title":{},"body":{"license.html":{}}}],["previous",{"_index":1304,"title":{},"body":{"classes/CastcleQueryOptions.html":{},"classes/Pagination.html":{},"license.html":{}}}],["price",{"_index":2906,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":3470,"title":{},"body":{"license.html":{}}}],["prior",{"_index":3368,"title":{},"body":{"license.html":{}}}],["private",{"_index":604,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentService.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/UserService.html":{},"license.html":{}}}],["problems",{"_index":3506,"title":{},"body":{"license.html":{}}}],["procedures",{"_index":3271,"title":{},"body":{"license.html":{}}}],["procuring",{"_index":3458,"title":{},"body":{"license.html":{}}}],["produce",{"_index":3058,"title":{},"body":{"license.html":{}}}],["product",{"_index":3194,"title":{},"body":{"license.html":{}}}],["production",{"_index":744,"title":{},"body":{"controllers/AppController.html":{}}}],["products",{"_index":3471,"title":{},"body":{"license.html":{}}}],["profile",{"_index":2089,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{}}}],["profileimage",{"_index":2080,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"miscellaneous/typealiases.html":{}}}],["program",{"_index":2902,"title":{},"body":{"license.html":{}}}],["program's",{"_index":3146,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":3587,"title":{},"body":{"license.html":{}}}],["programming",{"_index":3037,"title":{},"body":{"license.html":{}}}],["programs",{"_index":2912,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":3108,"title":{},"body":{"license.html":{}}}],["prohibiting",{"_index":3132,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":3465,"title":{},"body":{"license.html":{}}}],["prominent",{"_index":3027,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":3016,"title":{},"body":{"license.html":{}}}],["promise",{"_index":111,"title":{},"body":{"classes/Account.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"injectables/ContentService.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"interfaces/SignupRequirements.html":{},"classes/Uploader.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{}}}],["promise.all([this.save",{"_index":2150,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["promise.all(contentimages",{"_index":1571,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["promise.all(promisedeactivatepages",{"_index":2530,"title":{},"body":{"injectables/UserService.html":{}}}],["promise.all(promisehideengagements",{"_index":2551,"title":{},"body":{"injectables/UserService.html":{}}}],["promise.all(promisepublishengagements",{"_index":2568,"title":{},"body":{"injectables/UserService.html":{}}}],["promise.all(promisereactivatepages",{"_index":2563,"title":{},"body":{"injectables/UserService.html":{}}}],["promise.all(promisereactivecontents",{"_index":2566,"title":{},"body":{"injectables/UserService.html":{}}}],["promise.all(promiseremovecontents",{"_index":2541,"title":{},"body":{"injectables/UserService.html":{}}}],["promise.all(promiseupdatefollower",{"_index":2556,"title":{},"body":{"injectables/UserService.html":{}}}],["promisedeactivatepages",{"_index":2527,"title":{},"body":{"injectables/UserService.html":{}}}],["promisehideengagements",{"_index":2548,"title":{},"body":{"injectables/UserService.html":{}}}],["promisepublishengagements",{"_index":2567,"title":{},"body":{"injectables/UserService.html":{}}}],["promisereactivatepages",{"_index":2561,"title":{},"body":{"injectables/UserService.html":{}}}],["promisereactivecontents",{"_index":2564,"title":{},"body":{"injectables/UserService.html":{}}}],["promiseremovecontents",{"_index":2538,"title":{},"body":{"injectables/UserService.html":{}}}],["promiseupdatefollower",{"_index":2554,"title":{},"body":{"injectables/UserService.html":{}}}],["prop",{"_index":52,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"classes/ArchiveHashtag.html":{},"classes/CastcleBase.html":{},"classes/Circle.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"classes/ContentItem.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"classes/Engagement.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UxEngagement.html":{}}}],["prop({required",{"_index":61,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"classes/AccountAuthenId.html":{},"classes/ArchiveHashtag.html":{},"classes/Circle.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"classes/ContentItem.html":{},"classes/Credential.html":{},"classes/Engagement.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"classes/Otp.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/User.html":{}}}],["prop({type",{"_index":56,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"classes/AccountAuthenId.html":{},"classes/ArchiveHashtag.html":{},"classes/CastcleBase.html":{},"classes/Circle.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"classes/ContentItem.html":{},"classes/Credential.html":{},"classes/Engagement.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"classes/Otp.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/User.html":{},"classes/UxEngagement.html":{}}}],["propagate",{"_index":2988,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":3386,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":2998,"title":{},"body":{"license.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/AccessTokenPayload.html":{},"classes/Account.html":{},"classes/AccountActivation.html":{},"classes/AccountAuthenId.html":{},"interfaces/AccountRequirements.html":{},"classes/ArchiveHashtag.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleBase.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleName.html":{},"classes/CastcleQueryOptions.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/Circle.html":{},"classes/Comment.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"classes/ContentItem.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountDto-1.html":{},"classes/CreateCredentialDto.html":{},"classes/Credential.html":{},"interfaces/CredentialRequest.html":{},"interfaces/EmailVerifyToken.html":{},"classes/Engagement.html":{},"interfaces/ErrorStatus.html":{},"classes/Feature.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"classes/FollowResponse.html":{},"classes/GuestLoginDto.html":{},"interfaces/GuestRequest.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"interfaces/HeadersRequest.html":{},"interfaces/ICredential.html":{},"classes/Image.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"classes/LoginDto.html":{},"interfaces/MemberAccessTokenPayload.html":{},"classes/Otp.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Pagination.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"interfaces/RefreshTokenPayload.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/SaveContentDto.html":{},"classes/SaveCredentialDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"interfaces/SignupRequirements.html":{},"classes/SuggestCastcleIdReponse.html":{},"interfaces/TokenHeader.html":{},"interfaces/TokenRequest.html":{},"classes/TokenResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Uploader.html":{},"classes/Url.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{},"classes/UxEngagement.html":{},"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{},"injectables/UxEngagementService.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["property",{"_index":3245,"title":{},"body":{"license.html":{}}}],["proportionated",{"_index":2762,"title":{},"body":{"index.html":{}}}],["protect",{"_index":2915,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":3116,"title":{},"body":{"license.html":{}}}],["protection",{"_index":3158,"title":{},"body":{"license.html":{}}}],["protocols",{"_index":3299,"title":{},"body":{"license.html":{}}}],["prove",{"_index":3525,"title":{},"body":{"license.html":{}}}],["provide",{"_index":2946,"title":{},"body":{"license.html":{}}}],["provided",{"_index":3021,"title":{},"body":{"license.html":{}}}],["providers",{"_index":969,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UtilsAwsModule.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{}}}],["provides",{"_index":3579,"title":{},"body":{"license.html":{}}}],["providing",{"_index":3496,"title":{},"body":{"license.html":{}}}],["provision",{"_index":3311,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":3362,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":3514,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":3517,"title":{},"body":{"license.html":{}}}],["public",{"_index":229,"title":{},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"classes/CastcleName.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentService.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"classes/Image.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"interfaces/SignupRequirements.html":{},"classes/Uploader.html":{},"injectables/UserService.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"injectables/UxEngagementService.html":{},"index.html":{},"license.html":{}}}],["publicity",{"_index":3328,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":2948,"title":{},"body":{"license.html":{}}}],["publish",{"_index":1308,"title":{},"body":{"classes/CastcleQueryOptions.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"interfaces/IContent.html":{},"classes/Pagination.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["published",{"_index":507,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"index.html":{},"license.html":{}}}],["purpose",{"_index":519,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"license.html":{}}}],["purposes",{"_index":3249,"title":{},"body":{"license.html":{}}}],["pursuant",{"_index":3455,"title":{},"body":{"license.html":{}}}],["put",{"_index":872,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/UserService.html":{}}}],["put(':id",{"_index":1504,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["put(':id/follow",{"_index":938,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["put(':id/liked",{"_index":1511,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["put(':id/unfollow",{"_index":946,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["put(':id/unliked",{"_index":1518,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["put('me",{"_index":913,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["put('pages/:id",{"_index":2267,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["qualify",{"_index":3376,"title":{},"body":{"license.html":{}}}],["quality",{"_index":3524,"title":{},"body":{"license.html":{}}}],["query",{"_index":891,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{},"injectables/UserService.html":{}}}],["query('limit",{"_index":936,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["query('page",{"_index":935,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["query('sortby",{"_index":931,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["query('type",{"_index":937,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["query.exec",{"_index":2516,"title":{},"body":{"injectables/UserService.html":{}}}],["query.sort",{"_index":1724,"title":{},"body":{"injectables/ContentService.html":{},"injectables/UserService.html":{}}}],["query.sort(`${options.sortby.field}`).exec",{"_index":1727,"title":{},"body":{"injectables/ContentService.html":{}}}],["query.sort(`${queryoption.sortby.field",{"_index":2512,"title":{},"body":{"injectables/UserService.html":{}}}],["query/query.pipe",{"_index":2589,"title":{},"body":{"modules/UtilsPipesModule.html":{}}}],["queryoption",{"_index":2456,"title":{},"body":{"injectables/UserService.html":{}}}],["queryoption.sortby.field",{"_index":2511,"title":{},"body":{"injectables/UserService.html":{}}}],["queryoption.sortby.type",{"_index":2510,"title":{},"body":{"injectables/UserService.html":{}}}],["queryoption.type",{"_index":2504,"title":{},"body":{"injectables/UserService.html":{}}}],["queryoptions",{"_index":2454,"title":{},"body":{"injectables/UserService.html":{}}}],["queryoptions.sortby.field}`).exec",{"_index":2499,"title":{},"body":{"injectables/UserService.html":{}}}],["queryoptions.sortby.type",{"_index":2497,"title":{},"body":{"injectables/UserService.html":{}}}],["questions",{"_index":558,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{}}}],["queue",{"_index":2532,"title":{},"body":{"injectables/UserService.html":{}}}],["quote",{"_index":1097,"title":{},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/Content.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Engagement.html":{},"classes/Feature.html":{},"interfaces/IContent.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{},"miscellaneous/enumerations.html":{}}}],["quote/recast",{"_index":1710,"title":{},"body":{"injectables/ContentService.html":{}}}],["quote/requote",{"_index":2542,"title":{},"body":{"injectables/UserService.html":{}}}],["quotecast",{"_index":1089,"title":{},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{}}}],["quotecontent",{"_index":1455,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentService.html":{}}}],["quotecontent(id",{"_index":1480,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["quotecontentfromuser",{"_index":1623,"title":{},"body":{"injectables/ContentService.html":{}}}],["quotepayload",{"_index":1066,"title":{"classes/QuotePayload.html":{}},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/Content.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"interfaces/IContent.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{}}}],["random",{"_index":2050,"title":{},"body":{"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{}}}],["random_adjective",{"_index":1256,"title":{},"body":{"classes/CastcleName.html":{}}}],["random_adjective.length",{"_index":1298,"title":{},"body":{"classes/CastcleName.html":{}}}],["random_adjective[math.floor(math.random",{"_index":1297,"title":{},"body":{"classes/CastcleName.html":{}}}],["random_subjects",{"_index":1257,"title":{},"body":{"classes/CastcleName.html":{}}}],["random_subjects.length",{"_index":1295,"title":{},"body":{"classes/CastcleName.html":{}}}],["random_subjects[math.floor(math.random",{"_index":1294,"title":{},"body":{"classes/CastcleName.html":{}}}],["ranges(in",{"_index":1250,"title":{},"body":{"classes/CastcleName.html":{}}}],["re",{"_index":304,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["re.test(email.tolowercase",{"_index":313,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["reactive",{"_index":2437,"title":{},"body":{"injectables/UserService.html":{}}}],["readable",{"_index":3190,"title":{},"body":{"license.html":{}}}],["readily",{"_index":3445,"title":{},"body":{"license.html":{}}}],["reading",{"_index":2751,"title":{},"body":{"index.html":{},"license.html":{}}}],["readonly",{"_index":605,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["reason",{"_index":3454,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":3205,"title":{},"body":{"license.html":{}}}],["recast",{"_index":1082,"title":{"classes/Recast.html":{}},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/Content.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Engagement.html":{},"classes/Feature.html":{},"interfaces/IContent.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{},"miscellaneous/enumerations.html":{}}}],["recast/quote",{"_index":1666,"title":{},"body":{"injectables/ContentService.html":{}}}],["recastcontent",{"_index":1456,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentService.html":{}}}],["recastcontent(id",{"_index":1483,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["recastcontentfromuser",{"_index":1624,"title":{},"body":{"injectables/ContentService.html":{}}}],["recasted",{"_index":1083,"title":{},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{}}}],["recastpayload",{"_index":1069,"title":{"classes/RecastPayload.html":{}},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/Content.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"interfaces/IContent.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{}}}],["recastpayload).source",{"_index":1693,"title":{},"body":{"injectables/ContentService.html":{}}}],["receipt",{"_index":3374,"title":{},"body":{"license.html":{}}}],["receive",{"_index":2909,"title":{},"body":{"license.html":{}}}],["received",{"_index":526,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"license.html":{}}}],["receives",{"_index":3391,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":3460,"title":{},"body":{"license.html":{}}}],["recipient",{"_index":3282,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":3452,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":2976,"title":{},"body":{"license.html":{}}}],["recognized",{"_index":3034,"title":{},"body":{"license.html":{}}}],["recover",{"_index":1709,"title":{},"body":{"injectables/ContentService.html":{}}}],["recovercontentfromid",{"_index":1625,"title":{},"body":{"injectables/ContentService.html":{}}}],["recursive",{"_index":1702,"title":{},"body":{"injectables/ContentService.html":{}}}],["redistribute",{"_index":498,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"license.html":{}}}],["reduct",{"_index":272,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["ref",{"_index":151,"title":{},"body":{"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"classes/Content.html":{},"classes/ContentItem.html":{},"injectables/ContentService.html":{},"classes/Engagement.html":{},"classes/HashtagItem.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"classes/Relationship.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UxEngagement.html":{}}}],["refcode",{"_index":371,"title":{},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/GuestLoginDto.html":{},"interfaces/IOtp.html":{},"classes/LoginDto.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"interfaces/SignupRequirements.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["referring",{"_index":2905,"title":{},"body":{"license.html":{}}}],["refers",{"_index":2965,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":2674,"title":{},"body":{"dependencies.html":{}}}],["refrain",{"_index":3490,"title":{},"body":{"license.html":{}}}],["refresh",{"_index":458,"title":{},"body":{"controllers/AppController.html":{}}}],["refreshtoken",{"_index":243,"title":{},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/CreateAccountDto.html":{},"classes/CreateCredentialDto.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"classes/GuestLoginDto.html":{},"interfaces/ICredential-1.html":{},"classes/LoginDto.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/SaveCredentialDto.html":{},"interfaces/SignupRequirements.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["refreshtoken(@req",{"_index":687,"title":{},"body":{"controllers/AppController.html":{}}}],["refreshtoken(req",{"_index":453,"title":{},"body":{"controllers/AppController.html":{}}}],["refreshtokenexpiredate",{"_index":265,"title":{},"body":{"interfaces/AccountRequirements.html":{},"classes/CreateAccountDto.html":{},"classes/CreateCredentialDto.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{},"classes/SaveCredentialDto.html":{},"interfaces/SignupRequirements.html":{}}}],["refreshtokenexpiredate.toisostring",{"_index":1853,"title":{},"body":{"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{}}}],["refreshtokenexpirestime",{"_index":29,"title":{},"body":{"interfaces/AccessTokenPayload.html":{},"interfaces/EmailVerifyToken.html":{},"interfaces/MemberAccessTokenPayload.html":{},"interfaces/RefreshTokenPayload.html":{}}}],["refreshtokenpayload",{"_index":28,"title":{"interfaces/RefreshTokenPayload.html":{}},"body":{"interfaces/AccessTokenPayload.html":{},"interfaces/AccountRequirements.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/EmailVerifyToken.html":{},"interfaces/ICredential-1.html":{},"interfaces/MemberAccessTokenPayload.html":{},"interfaces/RefreshTokenPayload.html":{},"interfaces/SignupRequirements.html":{}}}],["refreshtokenresponse",{"_index":588,"title":{"classes/RefreshTokenResponse.html":{}},"body":{"controllers/AppController.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/GuestLoginDto.html":{},"classes/LoginDto.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["refreshtokenresponse})@apiresponse({status",{"_index":455,"title":{},"body":{"controllers/AppController.html":{}}}],["refreshtokenresult",{"_index":257,"title":{},"body":{"interfaces/AccountRequirements.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{},"interfaces/SignupRequirements.html":{}}}],["refreshtokenresult.refreshtoken",{"_index":264,"title":{},"body":{"interfaces/AccountRequirements.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{},"interfaces/SignupRequirements.html":{}}}],["refreshtokenresult.refreshtokenexpiredate",{"_index":266,"title":{},"body":{"interfaces/AccountRequirements.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{},"interfaces/SignupRequirements.html":{}}}],["refs",{"_index":1342,"title":{},"body":{"classes/Comment-1.html":{},"classes/Content.html":{},"interfaces/IContent.html":{}}}],["regard",{"_index":3307,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":3168,"title":{},"body":{"license.html":{}}}],["regenerate",{"_index":3081,"title":{},"body":{"license.html":{}}}],["register",{"_index":404,"title":{},"body":{"controllers/AppController.html":{}}}],["register(req",{"_index":461,"title":{},"body":{"controllers/AppController.html":{}}}],["registerbyemaildto",{"_index":462,"title":{"classes/RegisterByEmailDto.html":{}},"body":{"controllers/AppController.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/GuestLoginDto.html":{},"classes/LoginDto.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["registerpayload",{"_index":1313,"title":{"classes/RegisterPayload.html":{}},"body":{"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/GuestLoginDto.html":{},"classes/LoginDto.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["reinstated",{"_index":3361,"title":{},"body":{"license.html":{}}}],["reject",{"_index":469,"title":{},"body":{"controllers/AppController.html":{}}}],["relationship",{"_index":1921,"title":{"classes/Relationship.html":{}},"body":{"modules/DatabaseModule.html":{},"interfaces/IUser.html":{},"classes/Relationship.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"license.html":{}}}],["relationship.schema",{"_index":2079,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["relationshipdocument",{"_index":2078,"title":{},"body":{"interfaces/IUser.html":{},"classes/Relationship.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["relationshipmodel",{"_index":2130,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["relationshipmodel.startsession",{"_index":2139,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["relationships",{"_index":2515,"title":{},"body":{"injectables/UserService.html":{}}}],["relationships.map((r",{"_index":2519,"title":{},"body":{"injectables/UserService.html":{}}}],["relationshipschema",{"_index":2339,"title":{},"body":{"classes/Relationship.html":{}}}],["relationshipschemafactory",{"_index":1908,"title":{},"body":{"modules/DatabaseModule.html":{},"classes/Relationship.html":{}}}],["released",{"_index":2957,"title":{},"body":{"license.html":{}}}],["releasing",{"_index":2940,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":3162,"title":{},"body":{"license.html":{}}}],["relicensing",{"_index":2958,"title":{},"body":{"license.html":{}}}],["relying",{"_index":3444,"title":{},"body":{"license.html":{}}}],["remain",{"_index":3226,"title":{},"body":{"license.html":{}}}],["remains",{"_index":2903,"title":{},"body":{"license.html":{}}}],["remote",{"_index":3492,"title":{},"body":{"license.html":{}}}],["remotely",{"_index":3494,"title":{},"body":{"license.html":{}}}],["removal",{"_index":3308,"title":{},"body":{"license.html":{}}}],["remove",{"_index":281,"title":{},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"classes/CastcleName.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"interfaces/IContent.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"interfaces/SignupRequirements.html":{},"injectables/UserService.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"license.html":{}}}],["removeengagementaggregateifdeleted",{"_index":1424,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["rendered",{"_index":3540,"title":{},"body":{"license.html":{}}}],["renewaccesstoken",{"_index":1856,"title":{},"body":{"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{}}}],["renewaccesstoken(payload",{"_index":2040,"title":{},"body":{"interfaces/ICredential-1.html":{}}}],["renewtokens",{"_index":1855,"title":{},"body":{"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{}}}],["renewtokens(accesstokenpayload",{"_index":2042,"title":{},"body":{"interfaces/ICredential-1.html":{}}}],["repair",{"_index":3529,"title":{},"body":{"license.html":{}}}],["replace",{"_index":1274,"title":{},"body":{"classes/CastcleName.html":{}}}],["replace(/[^\\w",{"_index":1272,"title":{},"body":{"classes/CastcleName.html":{}}}],["replacename",{"_index":1285,"title":{},"body":{"classes/CastcleName.html":{}}}],["replacename.slice(0",{"_index":1289,"title":{},"body":{"classes/CastcleName.html":{}}}],["reply",{"_index":1006,"title":{},"body":{"injectables/AppService.html":{}}}],["repository",{"_index":2711,"title":{},"body":{"index.html":{}}}],["represent",{"_index":3267,"title":{},"body":{"license.html":{}}}],["req",{"_index":410,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{},"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["req.$credential",{"_index":633,"title":{},"body":{"controllers/AppController.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["req.$credential._id",{"_index":1565,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["req.$credential.accesstoken",{"_index":682,"title":{},"body":{"controllers/AppController.html":{}}}],["req.$credential.account._id",{"_index":793,"title":{},"body":{"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{}}}],["req.$credential.account.activatedate",{"_index":1498,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["req.$credential.account.isguest",{"_index":1497,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["req.$credential.deviceuuid",{"_index":632,"title":{},"body":{"controllers/AppController.html":{}}}],["req.$credential.refreshtoken",{"_index":683,"title":{},"body":{"controllers/AppController.html":{}}}],["req.$credential.renewtokens",{"_index":638,"title":{},"body":{"controllers/AppController.html":{}}}],["req.$device",{"_index":657,"title":{},"body":{"controllers/AppController.html":{}}}],["req.$language",{"_index":616,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["req.$platform",{"_index":658,"title":{},"body":{"controllers/AppController.html":{}}}],["req.$token",{"_index":692,"title":{},"body":{"controllers/AppController.html":{}}}],["req.body",{"_index":1559,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{},"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{}}}],["req.body.images.avatar",{"_index":1971,"title":{},"body":{"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{}}}],["req.body.images.cover",{"_index":1975,"title":{},"body":{"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{}}}],["req.query.code",{"_index":748,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":483,"title":{},"body":{"controllers/AppController.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{},"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{}}}],["request.$credential",{"_index":1885,"title":{},"body":{"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{}}}],["request.$credential.isaccesstokenvalid",{"_index":1887,"title":{},"body":{"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{}}}],["request.$device",{"_index":1989,"title":{},"body":{"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{}}}],["request.$language",{"_index":1881,"title":{},"body":{"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{},"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{}}}],["request.$platform",{"_index":1992,"title":{},"body":{"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{}}}],["request.$token",{"_index":1883,"title":{},"body":{"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{}}}],["request.headers",{"_index":1990,"title":{},"body":{"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{}}}],["request.headers.device",{"_index":1991,"title":{},"body":{"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{}}}],["request.headers.platform",{"_index":1993,"title":{},"body":{"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{}}}],["request_url_not_found",{"_index":1152,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["requestlinkverify",{"_index":405,"title":{},"body":{"controllers/AppController.html":{}}}],["requestlinkverify(@req",{"_index":706,"title":{},"body":{"controllers/AppController.html":{}}}],["requestlinkverify(req",{"_index":466,"title":{},"body":{"controllers/AppController.html":{}}}],["requestotp",{"_index":715,"title":{},"body":{"controllers/AppController.html":{}}}],["require",{"_index":3075,"title":{},"body":{"license.html":{}}}],["required",{"_index":102,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"classes/ArchiveHashtag.html":{},"classes/Circle.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"classes/ContentItem.html":{},"injectables/ContentService.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"classes/Engagement.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"license.html":{}}}],["requirement",{"_index":3163,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":332,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{},"license.html":{}}}],["requirements.displayid",{"_index":342,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["requirements.displayname",{"_index":341,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["requirements.email",{"_index":334,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["requirements.password",{"_index":336,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["requires",{"_index":2944,"title":{},"body":{"license.html":{}}}],["requiring",{"_index":2982,"title":{},"body":{"license.html":{}}}],["reserve_names",{"_index":1255,"title":{},"body":{"classes/CastcleName.html":{}}}],["reserve_names.find((str",{"_index":1278,"title":{},"body":{"classes/CastcleName.html":{}}}],["reserved",{"_index":492,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{}}}],["reset",{"_index":966,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsPipesModule.html":{},"overview.html":{}}}],["resolved",{"_index":3255,"title":{},"body":{"license.html":{}}}],["respect",{"_index":3139,"title":{},"body":{"license.html":{}}}],["response",{"_index":916,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"injectables/FollowInterceptor.html":{},"interfaces/IUser.html":{},"injectables/ImageInterceptor.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["response.email",{"_index":2121,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["response.images",{"_index":1982,"title":{},"body":{"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{}}}],["response.images.avatar",{"_index":1983,"title":{},"body":{"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{}}}],["response.images.cover",{"_index":1984,"title":{},"body":{"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{}}}],["responsible",{"_index":3392,"title":{},"body":{"license.html":{}}}],["restricting",{"_index":3133,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":3348,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":3344,"title":{},"body":{"license.html":{}}}],["result",{"_index":32,"title":{},"body":{"interfaces/AccessTokenPayload.html":{},"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"injectables/AppService-4.html":{},"injectables/AppService-5.html":{},"injectables/AppService-6.html":{},"classes/ArchiveHashtag.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastLogger.html":{},"classes/CastcleBase.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleException.html":{},"classes/CastcleName.html":{},"classes/CastcleQueryOptions.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/Circle.html":{},"classes/Comment.html":{},"classes/Comment-1.html":{},"injectables/CommonDate.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"classes/ContentItem.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"injectables/ContentsInterceptor.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountDto-1.html":{},"classes/CreateCredentialDto.html":{},"classes/Credential.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialModel.html":{},"interfaces/CredentialRequest.html":{},"modules/DatabaseModule.html":{},"interfaces/EmailVerifyToken.html":{},"classes/Engagement.html":{},"interfaces/ErrorStatus.html":{},"classes/Feature.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"injectables/FollowInterceptor.html":{},"classes/FollowResponse.html":{},"injectables/GuestInterceptor.html":{},"classes/GuestLoginDto.html":{},"interfaces/GuestRequest.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Image.html":{},"injectables/ImageInterceptor.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"injectables/LimitPipe.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"classes/LoginDto.html":{},"interfaces/MemberAccessTokenPayload.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/PageDto.html":{},"injectables/PageInterceptor.html":{},"injectables/PagePipe.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Pagination.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"interfaces/RefreshTokenPayload.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/SaveContentDto.html":{},"classes/SaveCredentialDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"interfaces/SignupRequirements.html":{},"injectables/SortByPipe.html":{},"classes/SuggestCastcleIdReponse.html":{},"interfaces/TokenHeader.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{},"classes/TokenResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Uploader.html":{},"classes/Url.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{},"modules/UtilsAwsModule.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"classes/UxEngagement.html":{},"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{},"injectables/UxEngagementService.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"classes/suggestCastcleIdPayload.html":{},"miscellaneous/typealiases.html":{}}}],["result.accesstoken",{"_index":1868,"title":{},"body":{"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{}}}],["result.accesstokenexpiredate",{"_index":1869,"title":{},"body":{"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{}}}],["result.credentialdocument.accesstoken",{"_index":659,"title":{},"body":{"controllers/AppController.html":{}}}],["result.credentialdocument.refreshtoken",{"_index":660,"title":{},"body":{"controllers/AppController.html":{}}}],["result.deletedcount",{"_index":2155,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["result.quotecontent.tocontentpayload",{"_index":1526,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["result.recastcontent.tocontentpayload",{"_index":1522,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["result.upserted",{"_index":2148,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["resulting",{"_index":2931,"title":{},"body":{"license.html":{}}}],["results",{"_index":34,"title":{},"body":{"interfaces/AccessTokenPayload.html":{},"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"injectables/AppService-4.html":{},"injectables/AppService-5.html":{},"injectables/AppService-6.html":{},"classes/ArchiveHashtag.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastLogger.html":{},"classes/CastcleBase.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleException.html":{},"classes/CastcleName.html":{},"classes/CastcleQueryOptions.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/Circle.html":{},"classes/Comment.html":{},"classes/Comment-1.html":{},"injectables/CommonDate.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"classes/ContentItem.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"injectables/ContentsInterceptor.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountDto-1.html":{},"classes/CreateCredentialDto.html":{},"classes/Credential.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialModel.html":{},"interfaces/CredentialRequest.html":{},"modules/DatabaseModule.html":{},"interfaces/EmailVerifyToken.html":{},"classes/Engagement.html":{},"interfaces/ErrorStatus.html":{},"classes/Feature.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"injectables/FollowInterceptor.html":{},"classes/FollowResponse.html":{},"injectables/GuestInterceptor.html":{},"classes/GuestLoginDto.html":{},"interfaces/GuestRequest.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Image.html":{},"injectables/ImageInterceptor.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"injectables/LimitPipe.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"classes/LoginDto.html":{},"interfaces/MemberAccessTokenPayload.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/PageDto.html":{},"injectables/PageInterceptor.html":{},"injectables/PagePipe.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Pagination.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"interfaces/RefreshTokenPayload.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/SaveContentDto.html":{},"classes/SaveCredentialDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"interfaces/SignupRequirements.html":{},"injectables/SortByPipe.html":{},"classes/SuggestCastcleIdReponse.html":{},"interfaces/TokenHeader.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{},"classes/TokenResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Uploader.html":{},"classes/Url.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{},"modules/UtilsAwsModule.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"classes/UxEngagement.html":{},"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{},"injectables/UxEngagementService.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"classes/suggestCastcleIdPayload.html":{},"miscellaneous/typealiases.html":{}}}],["retains",{"_index":3286,"title":{},"body":{"license.html":{}}}],["return",{"_index":121,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"injectables/AppService-4.html":{},"injectables/AppService-5.html":{},"injectables/AppService-6.html":{},"classes/CastcleName.html":{},"injectables/CommonDate.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"injectables/ContentsInterceptor.html":{},"classes/Credential.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialModel.html":{},"interfaces/CredentialRequest.html":{},"classes/Engagement.html":{},"injectables/FollowInterceptor.html":{},"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Image.html":{},"injectables/ImageInterceptor.html":{},"injectables/LimitPipe.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PageInterceptor.html":{},"injectables/PagePipe.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"interfaces/SignupRequirements.html":{},"injectables/SortByPipe.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{},"classes/Uploader.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{},"injectables/UxEngagementService.html":{},"license.html":{}}}],["returns",{"_index":188,"title":{},"body":{"interfaces/AccountActivationModel.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"injectables/AppService-4.html":{},"injectables/AppService-5.html":{},"injectables/AppService-6.html":{},"classes/CastLogger.html":{},"classes/CastcleName.html":{},"injectables/CommonDate.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"injectables/ContentsInterceptor.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialModel.html":{},"injectables/FollowInterceptor.html":{},"injectables/GuestInterceptor.html":{},"injectables/HeadersInterceptor.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Image.html":{},"injectables/ImageInterceptor.html":{},"injectables/LimitPipe.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PageInterceptor.html":{},"injectables/PagePipe.html":{},"interfaces/SignupRequirements.html":{},"injectables/SortByPipe.html":{},"injectables/TokenInterceptor.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"injectables/UxEngagementService.html":{}}}],["reviewing",{"_index":3551,"title":{},"body":{"license.html":{}}}],["revise",{"_index":1402,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["revised",{"_index":3501,"title":{},"body":{"license.html":{}}}],["revision",{"_index":1439,"title":{"classes/Revision.html":{}},"body":{"classes/Content.html":{},"injectables/ContentService.html":{},"modules/DatabaseModule.html":{},"interfaces/IContent.html":{},"classes/Revision.html":{}}}],["revision.schema",{"_index":1398,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["revisionchema",{"_index":2344,"title":{},"body":{"classes/Revision.html":{}}}],["revisionchemafactory",{"_index":1911,"title":{},"body":{"modules/DatabaseModule.html":{},"classes/Revision.html":{}}}],["revisioncount",{"_index":1334,"title":{},"body":{"classes/Comment-1.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"interfaces/IContent.html":{}}}],["revisiondocument",{"_index":1397,"title":{},"body":{"classes/Content.html":{},"injectables/ContentService.html":{},"interfaces/IContent.html":{},"classes/Revision.html":{},"miscellaneous/typealiases.html":{}}}],["revisionmodel",{"_index":1429,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["revisionmodel.startsession",{"_index":1437,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["revocationdate",{"_index":147,"title":{},"body":{"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/IAccountActivation.html":{}}}],["revokeaccountactivation(accountactivation",{"_index":352,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["reward",{"_index":2746,"title":{},"body":{"index.html":{}}}],["right",{"_index":3280,"title":{},"body":{"license.html":{}}}],["rights",{"_index":491,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"index.html":{},"license.html":{}}}],["rise",{"_index":2798,"title":{},"body":{"index.html":{}}}],["risk",{"_index":3523,"title":{},"body":{"license.html":{}}}],["role",{"_index":13,"title":{},"body":{"interfaces/AccessTokenPayload.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"interfaces/EmailVerifyToken.html":{},"interfaces/MemberAccessTokenPayload.html":{},"interfaces/RefreshTokenPayload.html":{},"interfaces/SignupRequirements.html":{},"index.html":{}}}],["rom",{"_index":3289,"title":{},"body":{"license.html":{}}}],["royalty",{"_index":3408,"title":{},"body":{"license.html":{}}}],["rules",{"_index":3298,"title":{},"body":{"license.html":{}}}],["run",{"_index":2759,"title":{},"body":{"index.html":{},"license.html":{}}}],["running",{"_index":2843,"title":{},"body":{"index.html":{},"license.html":{}}}],["runs",{"_index":3056,"title":{},"body":{"license.html":{}}}],["rxjs",{"_index":1536,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{},"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{},"injectables/PageInterceptor.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{},"dependencies.html":{}}}],["s3",{"_index":2111,"title":{},"body":{"interfaces/IUser.html":{},"classes/Uploader.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0",{"_index":305,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["safest",{"_index":3567,"title":{},"body":{"license.html":{}}}],["sale",{"_index":3418,"title":{},"body":{"license.html":{}}}],["same",{"_index":377,"title":{},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"interfaces/IUser.html":{},"interfaces/SignupRequirements.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"license.html":{}}}],["satisfy",{"_index":3228,"title":{},"body":{"license.html":{}}}],["save",{"_index":1699,"title":{},"body":{"injectables/ContentService.html":{},"injectables/UserService.html":{},"injectables/UxEngagementService.html":{}}}],["savecontentdto",{"_index":1093,"title":{"classes/SaveContentDto.html":{}},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"injectables/ContentsInterceptor.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{}}}],["savecontentdto})@apiokresponse({type",{"_index":1490,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["savecontentdto})@apiresponse({status",{"_index":1464,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["savecredentialdto",{"_index":1816,"title":{"classes/SaveCredentialDto.html":{}},"body":{"classes/CreateAccountDto.html":{},"classes/CreateCredentialDto.html":{},"classes/SaveCredentialDto.html":{}}}],["savedaccount",{"_index":329,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["savename",{"_index":2394,"title":{},"body":{"classes/Uploader.html":{}}}],["saying",{"_index":3224,"title":{},"body":{"license.html":{}}}],["schema",{"_index":76,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"classes/ArchiveHashtag.html":{},"classes/CastcleBase.html":{},"classes/Circle.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"modules/DatabaseModule.html":{},"classes/Engagement.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UxEngagement.html":{}}}],["schemafactory",{"_index":77,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"classes/ArchiveHashtag.html":{},"classes/Circle.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"classes/Engagement.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UxEngagement.html":{}}}],["schemafactory.createforclass(account",{"_index":108,"title":{},"body":{"classes/Account.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{}}}],["schemafactory.createforclass(accountactivation",{"_index":165,"title":{},"body":{"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/IAccountActivation.html":{}}}],["schemafactory.createforclass(accountauthenid",{"_index":200,"title":{},"body":{"classes/AccountAuthenId.html":{}}}],["schemafactory.createforclass(archivehashtag",{"_index":1043,"title":{},"body":{"classes/ArchiveHashtag.html":{}}}],["schemafactory.createforclass(circle",{"_index":1329,"title":{},"body":{"classes/Circle.html":{}}}],["schemafactory.createforclass(comment",{"_index":1344,"title":{},"body":{"classes/Comment-1.html":{}}}],["schemafactory.createforclass(content",{"_index":1409,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["schemafactory.createforclass(credential",{"_index":1842,"title":{},"body":{"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/ICredential-1.html":{}}}],["schemafactory.createforclass(engagement",{"_index":1934,"title":{},"body":{"classes/Engagement.html":{}}}],["schemafactory.createforclass(feature",{"_index":1960,"title":{},"body":{"classes/Feature-1.html":{},"classes/Feature-2.html":{}}}],["schemafactory.createforclass(hashtag",{"_index":2003,"title":{},"body":{"classes/Hashtag.html":{}}}],["schemafactory.createforclass(hashtagitem",{"_index":2011,"title":{},"body":{"classes/HashtagItem.html":{}}}],["schemafactory.createforclass(otp",{"_index":2049,"title":{},"body":{"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{}}}],["schemafactory.createforclass(relationship",{"_index":2340,"title":{},"body":{"classes/Relationship.html":{}}}],["schemafactory.createforclass(revision",{"_index":2345,"title":{},"body":{"classes/Revision.html":{}}}],["schemafactory.createforclass(user",{"_index":2092,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["schemafactory.createforclass(uxengagement",{"_index":2611,"title":{},"body":{"classes/UxEngagement.html":{}}}],["schemas",{"_index":1670,"title":{},"body":{"injectables/ContentService.html":{},"injectables/UserService.html":{}}}],["schemas/account.schema",{"_index":158,"title":{},"body":{"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"interfaces/AccountRequirements.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"modules/DatabaseModule.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential-1.html":{},"interfaces/IUser.html":{},"interfaces/SignupRequirements.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{},"injectables/UxEngagementService.html":{}}}],["schemas/accountactivation.schema",{"_index":210,"title":{},"body":{"interfaces/AccountRequirements.html":{},"modules/DatabaseModule.html":{},"interfaces/SignupRequirements.html":{}}}],["schemas/content.schema",{"_index":1671,"title":{},"body":{"injectables/ContentService.html":{},"modules/DatabaseModule.html":{},"injectables/UserService.html":{}}}],["schemas/credential.schema",{"_index":221,"title":{},"body":{"interfaces/AccountRequirements.html":{},"modules/DatabaseModule.html":{},"interfaces/SignupRequirements.html":{}}}],["schemas/engagement.schema",{"_index":1672,"title":{},"body":{"injectables/ContentService.html":{},"modules/DatabaseModule.html":{}}}],["schemas/otp.schema",{"_index":217,"title":{},"body":{"interfaces/AccountRequirements.html":{},"modules/DatabaseModule.html":{},"interfaces/SignupRequirements.html":{}}}],["schemas/relationship.schema",{"_index":1909,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/UserService.html":{}}}],["schemas/revision.schema",{"_index":1677,"title":{},"body":{"injectables/ContentService.html":{},"modules/DatabaseModule.html":{}}}],["schemas/user.schema",{"_index":213,"title":{},"body":{"interfaces/AccountRequirements.html":{},"injectables/ContentService.html":{},"modules/DatabaseModule.html":{},"interfaces/SignupRequirements.html":{},"injectables/UserService.html":{}}}],["schemas/uxengagement.schema",{"_index":1913,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/UxEngagementService.html":{}}}],["school",{"_index":3588,"title":{},"body":{"license.html":{}}}],["scope",{"_index":3464,"title":{},"body":{"license.html":{}}}],["score",{"_index":1997,"title":{},"body":{"classes/Hashtag.html":{}}}],["screenid",{"_index":2595,"title":{},"body":{"classes/UxEngagement.html":{},"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{}}}],["screeninstance",{"_index":2596,"title":{},"body":{"classes/UxEngagement.html":{},"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{}}}],["scripts",{"_index":3063,"title":{},"body":{"license.html":{}}}],["sdk",{"_index":2168,"title":{},"body":{"classes/Image.html":{},"classes/Uploader.html":{},"dependencies.html":{}}}],["search",{"_index":654,"title":{},"body":{"controllers/AppController.html":{}}}],["secondarily",{"_index":2991,"title":{},"body":{"license.html":{}}}],["secondary",{"_index":2922,"title":{},"body":{"license.html":{}}}],["section",{"_index":2808,"title":{},"body":{"index.html":{},"license.html":{}}}],["sections",{"_index":3188,"title":{},"body":{"license.html":{}}}],["secure",{"_index":992,"title":{},"body":{"injectables/AppService.html":{}}}],["see",{"_index":520,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"index.html":{},"license.html":{}}}],["self",{"_index":1305,"title":{},"body":{"classes/CastcleQueryOptions.html":{},"interfaces/IUser.html":{},"classes/Pagination.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["self._id",{"_index":2103,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["self.displayid",{"_index":2104,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["self.followedcount",{"_index":2107,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["self.followercount",{"_index":2106,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["self.owneraccount.email",{"_index":2122,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["self.profile",{"_index":2097,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["self.profile.birthdate",{"_index":2105,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["self.profile.images",{"_index":2108,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["self.profile.images.avatar",{"_index":2109,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["self.profile.images.cover",{"_index":2112,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["self.profile.overview",{"_index":2114,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["self.profile.socials",{"_index":2098,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["self.profile.websites",{"_index":2099,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["self.profile.websites.length",{"_index":2100,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["self.profile.websites[0].website",{"_index":2102,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["self.verified",{"_index":2115,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["selfsocial",{"_index":2096,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["selfsocial.website",{"_index":2101,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["sell",{"_index":3434,"title":{},"body":{"license.html":{}}}],["selling",{"_index":3417,"title":{},"body":{"license.html":{}}}],["semiconductor",{"_index":2969,"title":{},"body":{"license.html":{}}}],["send",{"_index":678,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["sendregistrationemail",{"_index":976,"title":{},"body":{"injectables/AppService.html":{}}}],["sendregistrationemail(hostname",{"_index":978,"title":{},"body":{"injectables/AppService.html":{}}}],["separable",{"_index":3237,"title":{},"body":{"license.html":{}}}],["separate",{"_index":3174,"title":{},"body":{"license.html":{}}}],["separately",{"_index":3171,"title":{},"body":{"license.html":{}}}],["server",{"_index":2845,"title":{},"body":{"index.html":{},"license.html":{}}}],["servers",{"_index":2933,"title":{},"body":{"license.html":{}}}],["serves",{"_index":3048,"title":{},"body":{"license.html":{}}}],["service",{"_index":2855,"title":{},"body":{"index.html":{},"license.html":{}}}],["service's",{"_index":2851,"title":{},"body":{"index.html":{}}}],["services",{"_index":2715,"title":{},"body":{"index.html":{}}}],["services/authentication.service",{"_index":1902,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["services/content.service",{"_index":1904,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["services/user.service",{"_index":1903,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["services/uxengagement.service",{"_index":1905,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["servicing",{"_index":3528,"title":{},"body":{"license.html":{}}}],["session",{"_index":387,"title":{},"body":{"interfaces/AccountRequirements.html":{},"classes/Content.html":{},"interfaces/IContent.html":{},"interfaces/IUser.html":{},"interfaces/SignupRequirements.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["session.aborttransaction",{"_index":1438,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["session.endsession",{"_index":392,"title":{},"body":{"interfaces/AccountRequirements.html":{},"classes/Content.html":{},"interfaces/IContent.html":{},"interfaces/IUser.html":{},"interfaces/SignupRequirements.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["session.withtransaction(async",{"_index":389,"title":{},"body":{"interfaces/AccountRequirements.html":{},"classes/Content.html":{},"interfaces/IContent.html":{},"interfaces/IUser.html":{},"interfaces/SignupRequirements.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["set",{"_index":292,"title":{},"body":{"interfaces/AccountRequirements.html":{},"injectables/ContentService.html":{},"interfaces/SignupRequirements.html":{}}}],["setobject",{"_index":2140,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["setobject.isfollowpage",{"_index":2145,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["setoninsert",{"_index":2146,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["sflkxwrjsmekkf2qt4fwpmejf36pok6yjv_adqssw5c",{"_index":645,"title":{},"body":{"controllers/AppController.html":{}}}],["shall",{"_index":3119,"title":{},"body":{"license.html":{}}}],["share",{"_index":2756,"title":{},"body":{"index.html":{},"license.html":{}}}],["shared",{"_index":3071,"title":{},"body":{"license.html":{}}}],["short",{"_index":1094,"title":{},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentTypePipe.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{},"miscellaneous/enumerations.html":{}}}],["shortpayload",{"_index":1062,"title":{"classes/ShortPayload.html":{}},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/Content.html":{},"injectables/ContentInterceptor.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentsInterceptor.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"interfaces/IContent.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{}}}],["shortphoto",{"_index":1061,"title":{"classes/ShortPhoto.html":{}},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{}}}],["show",{"_index":359,"title":{},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"interfaces/SignupRequirements.html":{}}}],["sign",{"_index":663,"title":{},"body":{"controllers/AppController.html":{},"license.html":{}}}],["signer",{"_index":2174,"title":{},"body":{"classes/Image.html":{}}}],["signer.getsignedurl",{"_index":2178,"title":{},"body":{"classes/Image.html":{}}}],["significant",{"_index":3268,"title":{},"body":{"license.html":{}}}],["signupbyemail",{"_index":331,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["signuprequirements",{"_index":224,"title":{"interfaces/SignupRequirements.html":{}},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["similar",{"_index":2953,"title":{},"body":{"license.html":{}}}],["simultaneously",{"_index":3484,"title":{},"body":{"license.html":{}}}],["single",{"_index":2736,"title":{},"body":{"index.html":{},"license.html":{}}}],["skip",{"_index":1657,"title":{},"body":{"injectables/ContentService.html":{}}}],["skip(options.page",{"_index":1717,"title":{},"body":{"injectables/ContentService.html":{}}}],["skip(queryoption.page",{"_index":2508,"title":{},"body":{"injectables/UserService.html":{}}}],["skip(queryoptions.page",{"_index":2495,"title":{},"body":{"injectables/UserService.html":{}}}],["slice",{"_index":1234,"title":{},"body":{"classes/CastcleName.html":{}}}],["slug",{"_index":1071,"title":{},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleName.html":{},"classes/Circle.html":{},"classes/Comment.html":{},"classes/Content.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"classes/Feature-1.html":{},"interfaces/IContent.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{}}}],["social",{"_index":2708,"title":{},"body":{"index.html":{}}}],["socialnetworks",{"_index":2473,"title":{},"body":{"injectables/UserService.html":{}}}],["socialnetworks.foreach((social",{"_index":2474,"title":{},"body":{"injectables/UserService.html":{}}}],["socials",{"_index":2088,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["society",{"_index":2792,"title":{},"body":{"index.html":{}}}],["software",{"_index":497,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"license.html":{}}}],["sold",{"_index":3250,"title":{},"body":{"license.html":{}}}],["sole",{"_index":3100,"title":{},"body":{"license.html":{}}}],["solely",{"_index":3112,"title":{},"body":{"license.html":{}}}],["solutions",{"_index":3584,"title":{},"body":{"license.html":{}}}],["something",{"_index":2535,"title":{},"body":{"injectables/UserService.html":{}}}],["somewhere",{"_index":1764,"title":{},"body":{"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{}}}],["soonfetch(\"${verifyurl",{"_index":750,"title":{},"body":{"controllers/AppController.html":{}}}],["sortby",{"_index":842,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleQueryOptions.html":{},"classes/Comment.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/Pagination.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{}}}],["sortbyenum",{"_index":843,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{},"modules/UtilsPipesModule.html":{},"miscellaneous/enumerations.html":{}}}],["sortbyenum.asc",{"_index":1778,"title":{},"body":{"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{}}}],["sortbyenum.desc",{"_index":1777,"title":{},"body":{"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{}}}],["sortbyoption",{"_index":835,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["sortbypipe",{"_index":884,"title":{"injectables/SortByPipe.html":{}},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{},"modules/UtilsPipesModule.html":{},"overview.html":{}}}],["sortbyquery",{"_index":1770,"title":{},"body":{"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{}}}],["sortbyquery.match(/(desc|asc)\\((\\w",{"_index":1774,"title":{},"body":{"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{}}}],["sortbyresult",{"_index":1775,"title":{},"body":{"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{}}}],["sortbyresult[1",{"_index":1776,"title":{},"body":{"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{}}}],["sortbyresult[2",{"_index":1779,"title":{},"body":{"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{}}}],["sorting",{"_index":1656,"title":{},"body":{"injectables/ContentService.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AccessTokenPayload.html":{},"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"injectables/AppService-4.html":{},"injectables/AppService-5.html":{},"injectables/AppService-6.html":{},"classes/ArchiveHashtag.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastLogger.html":{},"classes/CastcleBase.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleException.html":{},"classes/CastcleName.html":{},"classes/CastcleQueryOptions.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/Circle.html":{},"classes/Comment.html":{},"classes/Comment-1.html":{},"injectables/CommonDate.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"classes/ContentItem.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"injectables/ContentsInterceptor.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountDto-1.html":{},"classes/CreateCredentialDto.html":{},"classes/Credential.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialModel.html":{},"interfaces/CredentialRequest.html":{},"modules/DatabaseModule.html":{},"interfaces/EmailVerifyToken.html":{},"classes/Engagement.html":{},"interfaces/ErrorStatus.html":{},"classes/Feature.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"injectables/FollowInterceptor.html":{},"classes/FollowResponse.html":{},"injectables/GuestInterceptor.html":{},"classes/GuestLoginDto.html":{},"interfaces/GuestRequest.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Image.html":{},"injectables/ImageInterceptor.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"injectables/LimitPipe.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"classes/LoginDto.html":{},"interfaces/MemberAccessTokenPayload.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/PageDto.html":{},"injectables/PageInterceptor.html":{},"injectables/PagePipe.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Pagination.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"interfaces/RefreshTokenPayload.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/SaveContentDto.html":{},"classes/SaveCredentialDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"interfaces/SignupRequirements.html":{},"injectables/SortByPipe.html":{},"classes/SuggestCastcleIdReponse.html":{},"interfaces/TokenHeader.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{},"classes/TokenResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Uploader.html":{},"classes/Url.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{},"modules/UtilsAwsModule.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"classes/UxEngagement.html":{},"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{},"injectables/UxEngagementService.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"index.html":{},"license.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["sourcecontent",{"_index":1690,"title":{},"body":{"injectables/ContentService.html":{}}}],["sourcecontent._id",{"_index":1706,"title":{},"body":{"injectables/ContentService.html":{}}}],["sourcecontentid",{"_index":1754,"title":{},"body":{"injectables/ContentService.html":{}}}],["space",{"_index":1239,"title":{},"body":{"classes/CastcleName.html":{}}}],["spare",{"_index":3202,"title":{},"body":{"license.html":{}}}],["speak",{"_index":2904,"title":{},"body":{"license.html":{}}}],["special",{"_index":1230,"title":{},"body":{"classes/CastcleName.html":{},"license.html":{}}}],["specialcharacterrule",{"_index":1281,"title":{},"body":{"classes/CastcleName.html":{}}}],["specific",{"_index":3054,"title":{},"body":{"license.html":{}}}],["specifically",{"_index":2889,"title":{},"body":{"license.html":{}}}],["specified",{"_index":3036,"title":{},"body":{"license.html":{}}}],["specifies",{"_index":3509,"title":{},"body":{"license.html":{}}}],["specify",{"_index":3512,"title":{},"body":{"license.html":{}}}],["speeches",{"_index":2768,"title":{},"body":{"index.html":{}}}],["spirit",{"_index":3502,"title":{},"body":{"license.html":{}}}],["st",{"_index":533,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{}}}],["stack",{"_index":1114,"title":{},"body":{"classes/CastLogger.html":{}}}],["stamp",{"_index":2627,"title":{},"body":{"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{}}}],["standard",{"_index":3032,"title":{},"body":{"license.html":{}}}],["standards",{"_index":3035,"title":{},"body":{"license.html":{}}}],["start",{"_index":2847,"title":{},"body":{"index.html":{},"license.html":{}}}],["started",{"_index":2706,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["state",{"_index":3569,"title":{},"body":{"license.html":{}}}],["stated",{"_index":2807,"title":{},"body":{"index.html":{},"license.html":{}}}],["statement",{"_index":3350,"title":{},"body":{"license.html":{}}}],["static",{"_index":1215,"title":{},"body":{"classes/CastcleName.html":{},"interfaces/IUser.html":{},"classes/Image.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["stating",{"_index":3150,"title":{},"body":{"license.html":{}}}],["status",{"_index":609,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentService.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/UserService.html":{},"license.html":{}}}],["statuscode",{"_index":1205,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{}}}],["step",{"_index":2869,"title":{},"body":{"index.html":{}}}],["steps",{"_index":2833,"title":{},"body":{"index.html":{},"license.html":{}}}],["storage",{"_index":3181,"title":{},"body":{"license.html":{}}}],["str",{"_index":1276,"title":{},"body":{"classes/CastcleName.html":{},"injectables/CommonDate.html":{}}}],["streieng",{"_index":1708,"title":{},"body":{"injectables/ContentService.html":{}}}],["string",{"_index":14,"title":{},"body":{"interfaces/AccessTokenPayload.html":{},"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"injectables/AppService-4.html":{},"injectables/AppService-5.html":{},"injectables/AppService-6.html":{},"classes/ArchiveHashtag.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastLogger.html":{},"classes/CastcleBase.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleException.html":{},"classes/CastcleName.html":{},"classes/CastcleQueryOptions.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/Circle.html":{},"classes/Comment.html":{},"classes/Comment-1.html":{},"injectables/CommonDate.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"classes/ContentItem.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountDto-1.html":{},"classes/CreateCredentialDto.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/EmailVerifyToken.html":{},"classes/Engagement.html":{},"interfaces/ErrorStatus.html":{},"classes/Feature.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"classes/FollowResponse.html":{},"injectables/GuestInterceptor.html":{},"classes/GuestLoginDto.html":{},"interfaces/GuestRequest.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Image.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"injectables/LimitPipe.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"classes/LoginDto.html":{},"interfaces/MemberAccessTokenPayload.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/PageDto.html":{},"injectables/PagePipe.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Pagination.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"interfaces/RefreshTokenPayload.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/SaveContentDto.html":{},"classes/SaveCredentialDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"interfaces/SignupRequirements.html":{},"injectables/SortByPipe.html":{},"classes/SuggestCastcleIdReponse.html":{},"interfaces/TokenHeader.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{},"classes/TokenResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Uploader.html":{},"classes/Url.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{},"classes/UxEngagement.html":{},"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["string(page.owneraccount",{"_index":2285,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["string(req.$credential.account._id",{"_index":2286,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["subdividing",{"_index":3398,"title":{},"body":{"license.html":{}}}],["subject",{"_index":1007,"title":{},"body":{"injectables/AppService.html":{},"classes/CastcleName.html":{},"license.html":{}}}],["sublicenses",{"_index":3430,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":3114,"title":{},"body":{"license.html":{}}}],["subprograms",{"_index":3074,"title":{},"body":{"license.html":{}}}],["subsection",{"_index":3211,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":3263,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":3397,"title":{},"body":{"license.html":{}}}],["success",{"_index":620,"title":{},"body":{"controllers/AppController.html":{},"injectables/ContentService.html":{},"index.html":{}}}],["successful",{"_index":2810,"title":{},"body":{"index.html":{}}}],["such",{"_index":2941,"title":{},"body":{"license.html":{}}}],["sue",{"_index":3442,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":3274,"title":{},"body":{"license.html":{}}}],["suggestcastcleid",{"_index":363,"title":{},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"classes/CastcleName.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/GuestLoginDto.html":{},"classes/LoginDto.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"interfaces/SignupRequirements.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["suggestcastcleid(displayname",{"_index":364,"title":{},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"interfaces/SignupRequirements.html":{}}}],["suggestcastcleid(name",{"_index":1252,"title":{},"body":{"classes/CastcleName.html":{}}}],["suggestcastcleidpayload",{"_index":1315,"title":{"classes/suggestCastcleIdPayload.html":{}},"body":{"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/GuestLoginDto.html":{},"classes/LoginDto.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["suggestcastcleidreponse",{"_index":589,"title":{"classes/SuggestCastcleIdReponse.html":{}},"body":{"controllers/AppController.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/GuestLoginDto.html":{},"classes/LoginDto.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["suggestcastcleidreponse})@post('suggestcastcleid')@httpcode(200",{"_index":472,"title":{},"body":{"controllers/AppController.html":{}}}],["suggestid",{"_index":761,"title":{},"body":{"controllers/AppController.html":{}}}],["suggestname",{"_index":360,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["super(error",{"_index":1208,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{}}}],["super.error.apply(this",{"_index":1129,"title":{},"body":{"classes/CastLogger.html":{}}}],["super.intercept(context",{"_index":1551,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{},"injectables/FollowInterceptor.html":{},"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{},"injectables/ImageInterceptor.html":{},"injectables/PageInterceptor.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{}}}],["super.log.apply(this",{"_index":1127,"title":{},"body":{"classes/CastLogger.html":{}}}],["super.warn.apply(this",{"_index":1130,"title":{},"body":{"classes/CastLogger.html":{}}}],["superresult",{"_index":1550,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{},"injectables/FollowInterceptor.html":{},"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{},"injectables/ImageInterceptor.html":{},"injectables/PageInterceptor.html":{}}}],["superresult.pipe",{"_index":1552,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{},"injectables/FollowInterceptor.html":{},"injectables/ImageInterceptor.html":{},"injectables/PageInterceptor.html":{}}}],["supplement",{"_index":3302,"title":{},"body":{"license.html":{}}}],["support",{"_index":3157,"title":{},"body":{"license.html":{},"modules.html":{}}}],["supports",{"_index":3220,"title":{},"body":{"license.html":{}}}],["sure",{"_index":2132,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"license.html":{}}}],["surrender",{"_index":3479,"title":{},"body":{"license.html":{}}}],["survive",{"_index":3349,"title":{},"body":{"license.html":{}}}],["sustainable",{"_index":2811,"title":{},"body":{"index.html":{}}}],["sustained",{"_index":3543,"title":{},"body":{"license.html":{}}}],["svg",{"_index":3591,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":2677,"title":{},"body":{"dependencies.html":{}}}],["system",{"_index":3040,"title":{},"body":{"license.html":{}}}],["tag",{"_index":1962,"title":{},"body":{"classes/Feature-2.html":{},"classes/Hashtag.html":{}}}],["take",{"_index":2788,"title":{},"body":{"index.html":{},"license.html":{}}}],["tangible",{"_index":3243,"title":{},"body":{"license.html":{}}}],["target",{"_index":2597,"title":{},"body":{"classes/UxEngagement.html":{},"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{}}}],["targetid",{"_index":2598,"title":{},"body":{"classes/UxEngagement.html":{},"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{}}}],["targetref",{"_index":1730,"title":{},"body":{"injectables/ContentService.html":{},"classes/Engagement.html":{}}}],["technical",{"_index":2817,"title":{},"body":{"index.html":{}}}],["technological",{"_index":3121,"title":{},"body":{"license.html":{}}}],["technology",{"_index":2800,"title":{},"body":{"index.html":{}}}],["telegram",{"_index":198,"title":{},"body":{"classes/AccountAuthenId.html":{},"miscellaneous/enumerations.html":{}}}],["tells",{"_index":3019,"title":{},"body":{"license.html":{}}}],["term",{"_index":3086,"title":{},"body":{"license.html":{}}}],["terminal",{"_index":2838,"title":{},"body":{"index.html":{}}}],["terminate",{"_index":3355,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":3375,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":3364,"title":{},"body":{"license.html":{}}}],["termination",{"_index":3352,"title":{},"body":{"license.html":{}}}],["terms",{"_index":501,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"index.html":{},"license.html":{}}}],["test",{"_index":742,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["test:feeds",{"_index":2853,"title":{},"body":{"index.html":{}}}],["test:for",{"_index":2852,"title":{},"body":{"index.html":{}}}],["test:s",{"_index":2857,"title":{},"body":{"index.html":{}}}],["testbucketname",{"_index":2187,"title":{},"body":{"classes/Image.html":{}}}],["testcloudkey",{"_index":2177,"title":{},"body":{"classes/Image.html":{}}}],["testing",{"_index":2849,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2850,"title":{},"body":{"index.html":{}}}],["text",{"_index":1008,"title":{},"body":{"injectables/AppService.html":{}}}],["th",{"_index":754,"title":{},"body":{"controllers/AppController.html":{}}}],["thailand",{"_index":551,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{}}}],["then((data",{"_index":2190,"title":{},"body":{"classes/Image.html":{}}}],["therefore",{"_index":2947,"title":{},"body":{"license.html":{}}}],["things",{"_index":2913,"title":{},"body":{"license.html":{}}}],["third",{"_index":3145,"title":{},"body":{"license.html":{}}}],["this._accountactivationmodel",{"_index":302,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["this._accountactivationmodel.findone",{"_index":300,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["this._accountactivationmodel.generateverifytoken(payload",{"_index":319,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["this._accountmodel",{"_index":249,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["this._accountmodel.findbyid(account._id",{"_index":286,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["this._accountmodel.findbyid(credential.account).exec",{"_index":295,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["this._accountmodel.findbyidanddelete(credential.account",{"_index":284,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["this._accountmodel.startsession",{"_index":388,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["this._accountmodel.updateone",{"_index":2560,"title":{},"body":{"injectables/UserService.html":{}}}],["this._checkpermissionforupdate(content",{"_index":1505,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["this._contentmodel",{"_index":1691,"title":{},"body":{"injectables/ContentService.html":{}}}],["this._contentmodel(newcontent",{"_index":1685,"title":{},"body":{"injectables/ContentService.html":{}}}],["this._contentmodel(newcontent).save",{"_index":1755,"title":{},"body":{"injectables/ContentService.html":{}}}],["this._contentmodel.count(findfilter).exec",{"_index":1720,"title":{},"body":{"injectables/ContentService.html":{}}}],["this._contentmodel.findbyid(id).exec",{"_index":1686,"title":{},"body":{"injectables/ContentService.html":{}}}],["this._credentialmodel",{"_index":240,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["this._credentialmodel.findone",{"_index":244,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["this._credentialmodel.generateaccesstoken(payload",{"_index":315,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["this._credentialmodel.generaterefreshtoken(payload",{"_index":317,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["this._engagementmodel",{"_index":1732,"title":{},"body":{"injectables/ContentService.html":{}}}],["this._engagementmodel.findone",{"_index":1729,"title":{},"body":{"injectables/ContentService.html":{}}}],["this._generateaccesstoken",{"_index":255,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["this._generateemailverifytoken",{"_index":349,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["this._generaterefreshtoken",{"_index":258,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["this._getauthorfromuser(page",{"_index":1681,"title":{},"body":{"injectables/ContentService.html":{}}}],["this._getauthorfromuser(user",{"_index":1679,"title":{},"body":{"injectables/ContentService.html":{}}}],["this._getcontentifexist(id",{"_index":1501,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["this._getpagebyidorcastcleid(id",{"_index":2268,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["this._getuserfromidorcastcleid(authorid",{"_index":942,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["this._getuserfromidorcastcleid(id",{"_index":912,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["this._id",{"_index":2154,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["this._otpmodel",{"_index":379,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["this._otpmodel.generate",{"_index":374,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["this._presuggest(name",{"_index":1291,"title":{},"body":{"classes/CastcleName.html":{}}}],["this._relationshipmodel",{"_index":2506,"title":{},"body":{"injectables/UserService.html":{}}}],["this._relationshipmodel.count(filter).exec",{"_index":2514,"title":{},"body":{"injectables/UserService.html":{}}}],["this._revisionmodel",{"_index":1728,"title":{},"body":{"injectables/ContentService.html":{}}}],["this._uploadimage(body.avatar",{"_index":2260,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["this._uploadimage(body.cover",{"_index":2262,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["this._usermodel",{"_index":339,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{},"injectables/UserService.html":{}}}],["this._usermodel.count",{"_index":2493,"title":{},"body":{"injectables/UserService.html":{}}}],["this._usermodel.countdocuments().exec",{"_index":368,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["this._usermodel.coverttouserresponse(r.followeduser",{"_index":2524,"title":{},"body":{"injectables/UserService.html":{}}}],["this._usermodel.coverttouserresponse(r.user",{"_index":2520,"title":{},"body":{"injectables/UserService.html":{}}}],["this._usermodel.findbyid(contentdto.author.id",{"_index":1680,"title":{},"body":{"injectables/ContentService.html":{}}}],["this._usermodel.findbyidanddelete(id).exec",{"_index":2484,"title":{},"body":{"injectables/UserService.html":{}}}],["this._usermodel.findone",{"_index":298,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["this._uxengagementmodel(uxdto).save",{"_index":2656,"title":{},"body":{"injectables/UxEngagementService.html":{}}}],["this.appservice.getdata",{"_index":789,"title":{},"body":{"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["this.appservice.getdata().message",{"_index":738,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.sendregistrationemail",{"_index":680,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice._credentialmodel",{"_index":634,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.changepassword",{"_index":775,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.createaccount",{"_index":656,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.generateotp(account",{"_index":766,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.getaccountactivationfromcredential",{"_index":707,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.getaccountactivationfromverifytoken(req.$token",{"_index":702,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.getaccountfromcredential",{"_index":666,"title":{},"body":{"controllers/AppController.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["this.authservice.getaccountfromemail(body.payload.email",{"_index":671,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.getaccountfromemail(body.username",{"_index":626,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.getaccountfromemail(email",{"_index":618,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.getcredentialfromaccesstoken",{"_index":1886,"title":{},"body":{"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{}}}],["this.authservice.getcredentialfromrefreshtoken",{"_index":691,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.getguestcredentialfromdeviceuuid",{"_index":652,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.getotpfromaccount(account",{"_index":773,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.getuserfromcastcleid",{"_index":901,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["this.authservice.getuserfromcastcleid(body.castcleid",{"_index":713,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.linkcredentialtoaccount",{"_index":636,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.revokeaccountactivation",{"_index":709,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.signupbyemail",{"_index":673,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.suggestcastcleid(displayname",{"_index":762,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.validateemail(body.payload.email",{"_index":672,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.validateemail(email",{"_index":613,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.verifyaccount(accountactivation",{"_index":704,"title":{},"body":{"controllers/AppController.html":{}}}],["this.bucket",{"_index":2397,"title":{},"body":{"classes/Uploader.html":{}}}],["this.contentservice._contentmodel",{"_index":2537,"title":{},"body":{"injectables/UserService.html":{}}}],["this.contentservice._engagementmodel",{"_index":2547,"title":{},"body":{"injectables/UserService.html":{}}}],["this.contentservice.checkuserpermissionforeditcontent",{"_index":1503,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["this.contentservice.createcontentfromuser(user",{"_index":1499,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["this.contentservice.deletecontentfromid(contentitem._id",{"_index":2540,"title":{},"body":{"injectables/UserService.html":{}}}],["this.contentservice.getcontentfromid(id",{"_index":1502,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["this.contentservice.getcontentsfromuser(page",{"_index":2289,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["this.contentservice.getcontentsfromuser(user",{"_index":925,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["this.contentservice.likecontent(content",{"_index":1517,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["this.contentservice.quotecontentfromuser",{"_index":1525,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["this.contentservice.recastcontentfromuser",{"_index":1521,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["this.contentservice.recovercontentfromid(contentitem._id",{"_index":2565,"title":{},"body":{"injectables/UserService.html":{}}}],["this.contentservice.unlikecontent(content",{"_index":1519,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["this.contentservice.updatecontentfromid",{"_index":1507,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["this.converttoslug(name",{"_index":1277,"title":{},"body":{"classes/CastcleName.html":{}}}],["this.converttoslug(name).length",{"_index":1280,"title":{},"body":{"classes/CastcleName.html":{}}}],["this.converttoslug(newname",{"_index":1293,"title":{},"body":{"classes/CastcleName.html":{}}}],["this.createaccountactivation(account",{"_index":345,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["this.createpagefromuser(user",{"_index":2486,"title":{},"body":{"injectables/UserService.html":{}}}],["this.deactive(p",{"_index":2529,"title":{},"body":{"injectables/UserService.html":{}}}],["this.destination}/${savename",{"_index":2399,"title":{},"body":{"classes/Uploader.html":{}}}],["this.findone",{"_index":2061,"title":{},"body":{"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{}}}],["this.getuserfromcastcleid(name.suggestcastcleid",{"_index":366,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["this.getuserfromcredential(credential",{"_index":2485,"title":{},"body":{"injectables/UserService.html":{}}}],["this.isbanned",{"_index":1263,"title":{},"body":{"classes/CastcleName.html":{}}}],["this.isbannedname(name",{"_index":1284,"title":{},"body":{"classes/CastcleName.html":{}}}],["this.isreserved",{"_index":1265,"title":{},"body":{"classes/CastcleName.html":{}}}],["this.isreservename(name",{"_index":1283,"title":{},"body":{"classes/CastcleName.html":{}}}],["this.isvalid",{"_index":1267,"title":{},"body":{"classes/CastcleName.html":{}}}],["this.isvalidname(newname",{"_index":1292,"title":{},"body":{"classes/CastcleName.html":{}}}],["this.logger.log('health",{"_index":2021,"title":{},"body":{"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{}}}],["this.logger.log('root",{"_index":737,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{}}}],["this.reactive(p",{"_index":2562,"title":{},"body":{"injectables/UserService.html":{}}}],["this.s3",{"_index":2387,"title":{},"body":{"classes/Uploader.html":{}}}],["this.save",{"_index":122,"title":{},"body":{"classes/Account.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{}}}],["this.slug",{"_index":1261,"title":{},"body":{"classes/CastcleName.html":{}}}],["this.suggestcastcleid",{"_index":1269,"title":{},"body":{"classes/CastcleName.html":{}}}],["this.uri",{"_index":2182,"title":{},"body":{"classes/Image.html":{}}}],["this.userservice.createpagefromcredential",{"_index":2263,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["this.userservice.deactive(user",{"_index":921,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["this.userservice.getallpages",{"_index":2279,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["this.userservice.getfollower(user",{"_index":950,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["this.userservice.getfollowing(user",{"_index":955,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["this.userservice.getuserfromcredential(req.$credential",{"_index":906,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["this.userservice.getuserfromid(authorid",{"_index":1515,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["this.userservice.getuserfromid(idorcastcleid",{"_index":899,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["this.userservice.updateuser(user",{"_index":915,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["this.uxengagemenetservice.track(body",{"_index":795,"title":{},"body":{"controllers/AppController-1.html":{}}}],["those",{"_index":2732,"title":{},"body":{"index.html":{},"license.html":{}}}],["though",{"_index":3305,"title":{},"body":{"license.html":{}}}],["three",{"_index":3200,"title":{},"body":{"license.html":{}}}],["through",{"_index":3008,"title":{},"body":{"license.html":{}}}],["throw",{"_index":614,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{},"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/Uploader.html":{}}}],["throws",{"_index":896,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["thus",{"_index":2740,"title":{},"body":{"index.html":{},"license.html":{}}}],["time",{"_index":2626,"title":{},"body":{"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{},"injectables/UxEngagementService.html":{},"license.html":{}}}],["timestamp",{"_index":1136,"title":{},"body":{"classes/CastLogger.html":{},"classes/UxEngagement.html":{},"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{},"injectables/UxEngagementService.html":{}}}],["timestamps",{"_index":101,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"classes/ArchiveHashtag.html":{},"classes/Circle.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"classes/Engagement.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UxEngagement.html":{}}}],["tocontentpayload",{"_index":1407,"title":{},"body":{"classes/Content.html":{},"interfaces/IContent.html":{}}}],["todate",{"_index":1035,"title":{},"body":{"classes/ArchiveHashtag.html":{}}}],["todo",{"_index":271,"title":{},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentTypePipe.html":{},"classes/Engagement.html":{},"interfaces/IContent.html":{},"interfaces/IUser.html":{},"injectables/LimitPipe.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PagePipe.html":{},"classes/Relationship.html":{},"interfaces/SignupRequirements.html":{},"injectables/SortByPipe.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{}}}],["toemail",{"_index":979,"title":{},"body":{"injectables/AppService.html":{}}}],["token",{"_index":160,"title":{},"body":{"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/IAccountActivation.html":{},"interfaces/ICredential-1.html":{},"interfaces/SignupRequirements.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{},"modules/UtilsModule.html":{},"index.html":{}}}],["token'})@apibearerauth()@useinterceptors(tokeninterceptor)@post('refreshtoken",{"_index":459,"title":{},"body":{"controllers/AppController.html":{}}}],["token.generatetoken",{"_index":182,"title":{},"body":{"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/IAccountActivation.html":{},"interfaces/ICredential-1.html":{}}}],["token.istokenvalid",{"_index":168,"title":{},"body":{"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"interfaces/IAccountActivation.html":{},"interfaces/ICredential-1.html":{}}}],["token/token.interceptor",{"_index":1880,"title":{},"body":{"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{},"modules/UtilsInterceptorsModule.html":{}}}],["tokenheader",{"_index":1823,"title":{"interfaces/TokenHeader.html":{}},"body":{"classes/CreateAccountDto-1.html":{},"interfaces/TokenHeader.html":{}}}],["tokeninterceptor",{"_index":567,"title":{"injectables/TokenInterceptor.html":{}},"body":{"controllers/AppController.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{},"modules/UtilsInterceptorsModule.html":{}}}],["tokenomics",{"_index":2814,"title":{},"body":{"index.html":{}}}],["tokenrequest",{"_index":454,"title":{"interfaces/TokenRequest.html":{}},"body":{"controllers/AppController.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{},"modules/UtilsInterceptorsModule.html":{}}}],["tokenresponse",{"_index":585,"title":{"classes/TokenResponse.html":{}},"body":{"controllers/AppController.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/GuestLoginDto.html":{},"classes/LoginDto.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["tokenresponse})@apibody({type",{"_index":442,"title":{},"body":{"controllers/AppController.html":{}}}],["tokenresponse})@useinterceptors(credentialinterceptor)@post('login')@httpcode(200",{"_index":451,"title":{},"body":{"controllers/AppController.html":{}}}],["tokenresponse})@useinterceptors(credentialinterceptor)@post('register",{"_index":464,"title":{},"body":{"controllers/AppController.html":{}}}],["tokenresult",{"_index":637,"title":{},"body":{"controllers/AppController.html":{}}}],["tokenresult.accesstoken",{"_index":639,"title":{},"body":{"controllers/AppController.html":{}}}],["tokenresult.refreshtoken",{"_index":640,"title":{},"body":{"controllers/AppController.html":{}}}],["tolowercase",{"_index":1271,"title":{},"body":{"classes/CastcleName.html":{}}}],["tool",{"_index":2827,"title":{},"body":{"index.html":{}}}],["tools",{"_index":3066,"title":{},"body":{"license.html":{}}}],["topageresponse",{"_index":2070,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["topic",{"_index":1326,"title":{},"body":{"classes/Circle.html":{},"miscellaneous/enumerations.html":{}}}],["tosignurl",{"_index":1543,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{},"injectables/FollowInterceptor.html":{},"classes/Image.html":{},"injectables/ImageInterceptor.html":{}}}],["total",{"_index":1722,"title":{},"body":{"injectables/ContentService.html":{}}}],["totaldocument",{"_index":1719,"title":{},"body":{"injectables/ContentService.html":{}}}],["totalfollower",{"_index":2513,"title":{},"body":{"injectables/UserService.html":{}}}],["totalfollowing",{"_index":2523,"title":{},"body":{"injectables/UserService.html":{}}}],["totaluser",{"_index":367,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["totaluser(if",{"_index":361,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["touserresponse",{"_index":2071,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["track",{"_index":779,"title":{},"body":{"controllers/AppController-1.html":{},"injectables/UxEngagementService.html":{}}}],["track(@body",{"_index":790,"title":{},"body":{"controllers/AppController-1.html":{}}}],["track(body",{"_index":781,"title":{},"body":{"controllers/AppController-1.html":{}}}],["track(info",{"_index":2643,"title":{},"body":{"injectables/UxEngagementService.html":{}}}],["trade",{"_index":3335,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":3334,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":3336,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":2449,"title":{},"body":{"injectables/UserService.html":{},"license.html":{}}}],["transfer",{"_index":3009,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":3281,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":3395,"title":{},"body":{"license.html":{}}}],["transform",{"_index":1642,"title":{},"body":{"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{}}}],["transform(limitquery",{"_index":1787,"title":{},"body":{"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{}}}],["transform(pagequery",{"_index":1782,"title":{},"body":{"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{}}}],["transform(sortbyquery",{"_index":1773,"title":{},"body":{"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{}}}],["transform(typequery",{"_index":1758,"title":{},"body":{"injectables/ContentTypePipe.html":{}}}],["transformcontentpayload",{"_index":1537,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["transformcontentpayload(data.payload",{"_index":1586,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["transformcontentpayload(payload",{"_index":1556,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["transmission",{"_index":3231,"title":{},"body":{"license.html":{}}}],["transporter",{"_index":985,"title":{},"body":{"injectables/AppService.html":{}}}],["transporter.sendmail",{"_index":1005,"title":{},"body":{"injectables/AppService.html":{}}}],["treated",{"_index":3304,"title":{},"body":{"license.html":{}}}],["treaty",{"_index":3127,"title":{},"body":{"license.html":{}}}],["true",{"_index":62,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"injectables/AppService.html":{},"classes/ArchiveHashtag.html":{},"classes/CastLogger.html":{},"classes/CastcleName.html":{},"classes/Circle.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"classes/ContentItem.html":{},"injectables/ContentService.html":{},"injectables/ContentsInterceptor.html":{},"classes/Credential.html":{},"interfaces/CredentialModel.html":{},"classes/Engagement.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"interfaces/SignupRequirements.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{},"classes/UxEngagement.html":{}}}],["true})@apiokresponse({type",{"_index":441,"title":{},"body":{"controllers/AppController.html":{}}}],["trust",{"_index":2801,"title":{},"body":{"index.html":{}}}],["try",{"_index":617,"title":{},"body":{"controllers/AppController.html":{},"classes/Uploader.html":{},"injectables/UserService.html":{},"index.html":{}}}],["tslib",{"_index":2680,"title":{},"body":{"dependencies.html":{}}}],["twitter",{"_index":195,"title":{},"body":{"classes/AccountAuthenId.html":{},"classes/Counter.html":{},"classes/FollowResponse.html":{},"interfaces/IUser.html":{},"classes/Link-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["two",{"_index":2916,"title":{},"body":{"license.html":{}}}],["type",{"_index":15,"title":{},"body":{"interfaces/AccessTokenPayload.html":{},"classes/Account.html":{},"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"classes/AccountAuthenId.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"injectables/AppService-4.html":{},"injectables/AppService-5.html":{},"injectables/AppService-6.html":{},"classes/ArchiveHashtag.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastLogger.html":{},"classes/CastcleBase.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleException.html":{},"classes/CastcleName.html":{},"classes/CastcleQueryOptions.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/Circle.html":{},"classes/Comment.html":{},"classes/Comment-1.html":{},"injectables/CommonDate.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"classes/ContentItem.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"injectables/ContentTypePipe.html":{},"injectables/ContentsInterceptor.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountDto-1.html":{},"classes/CreateCredentialDto.html":{},"classes/Credential.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialModel.html":{},"interfaces/CredentialRequest.html":{},"interfaces/EmailVerifyToken.html":{},"classes/Engagement.html":{},"interfaces/ErrorStatus.html":{},"classes/Feature.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"injectables/FollowInterceptor.html":{},"classes/FollowResponse.html":{},"injectables/GuestInterceptor.html":{},"classes/GuestLoginDto.html":{},"interfaces/GuestRequest.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivation.html":{},"interfaces/IContent.html":{},"interfaces/ICredential.html":{},"interfaces/ICredential-1.html":{},"interfaces/IOtp.html":{},"interfaces/IUser.html":{},"classes/Image.html":{},"injectables/ImageInterceptor.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"injectables/LimitPipe.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"classes/LoginDto.html":{},"interfaces/MemberAccessTokenPayload.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/PageDto.html":{},"injectables/PageInterceptor.html":{},"injectables/PagePipe.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Pagination.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"interfaces/RefreshTokenPayload.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/SaveContentDto.html":{},"classes/SaveCredentialDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"interfaces/SignupRequirements.html":{},"injectables/SortByPipe.html":{},"classes/SuggestCastcleIdReponse.html":{},"interfaces/TokenHeader.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{},"classes/TokenResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Uploader.html":{},"classes/Url.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{},"classes/UxEngagement.html":{},"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{},"injectables/UxEngagementService.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{},"miscellaneous/typealiases.html":{}}}],["type:`desc|asc",{"_index":1768,"title":{},"body":{"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{}}}],["type:desc|asc",{"_index":2362,"title":{},"body":{"injectables/SortByPipe.html":{}}}],["type:string",{"_index":1772,"title":{},"body":{"injectables/ContentTypePipe.html":{},"injectables/LimitPipe.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{}}}],["typealiases",{"_index":3598,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typequery",{"_index":1760,"title":{},"body":{"injectables/ContentTypePipe.html":{}}}],["typical",{"_index":3258,"title":{},"body":{"license.html":{}}}],["ui",{"_index":2678,"title":{},"body":{"dependencies.html":{}}}],["ultimately",{"_index":2757,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":150,"title":{},"body":{"classes/AccountActivation.html":{},"classes/AccountAuthenId.html":{},"classes/ContentItem.html":{},"classes/Engagement.html":{},"injectables/GuestInterceptor.html":{},"interfaces/GuestRequest.html":{},"classes/HashtagItem.html":{},"classes/Otp.html":{},"classes/Relationship.html":{},"classes/User.html":{},"classes/UxEngagement.html":{}}}],["under",{"_index":500,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"index.html":{},"license.html":{}}}],["unfollow",{"_index":815,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"interfaces/IUser.html":{},"injectables/UserService.html":{}}}],["unfollow(id",{"_index":864,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["unfollow(user",{"_index":2076,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["unit",{"_index":2848,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":354,"title":{},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"classes/Content.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentInterceptor.html":{},"injectables/ContentService.html":{},"injectables/ContentsInterceptor.html":{},"classes/Credential.html":{},"injectables/CredentialInterceptor.html":{},"interfaces/CredentialModel.html":{},"injectables/FollowInterceptor.html":{},"interfaces/IContent.html":{},"interfaces/ICredential-1.html":{},"injectables/ImageInterceptor.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/PageInterceptor.html":{},"interfaces/SignupRequirements.html":{},"injectables/UxEngagementService.html":{}}}],["unless",{"_index":3266,"title":{},"body":{"license.html":{}}}],["unlikecontent",{"_index":1457,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentService.html":{}}}],["unlikecontent(id",{"_index":1486,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["unlimited",{"_index":3091,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":2987,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":3115,"title":{},"body":{"license.html":{}}}],["unpacking",{"_index":3301,"title":{},"body":{"license.html":{}}}],["until",{"_index":2053,"title":{},"body":{"interfaces/IOtp.html":{},"classes/Otp.html":{},"interfaces/OtpModel.html":{},"license.html":{}}}],["up",{"_index":664,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["update",{"_index":326,"title":{},"body":{"interfaces/AccountRequirements.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"interfaces/IContent.html":{},"interfaces/SignupRequirements.html":{},"injectables/UserService.html":{}}}],["updatecontentfromid",{"_index":1458,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentService.html":{}}}],["updatecontentfromid(id",{"_index":1489,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["updated",{"_index":1091,"title":{},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/Content.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"classes/Feature.html":{},"classes/FollowResponse.html":{},"interfaces/IContent.html":{},"interfaces/IUser.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Url.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{}}}],["updatedat",{"_index":48,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"classes/AccountAuthenId.html":{},"classes/ArchiveHashtag.html":{},"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleBase.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleQueryOptions.html":{},"classes/Circle.html":{},"classes/Comment.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"classes/ContentItem.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Credential.html":{},"classes/Engagement.html":{},"classes/Feature.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Otp.html":{},"classes/Pagination.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{},"classes/User.html":{},"classes/UxEngagement.html":{}}}],["updatedate",{"_index":1810,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreateAccountDto-1.html":{},"classes/CreateCredentialDto.html":{},"classes/SaveCredentialDto.html":{},"interfaces/TokenHeader.html":{}}}],["updatedcontent",{"_index":1506,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["updatedcontent.tocontentpayload",{"_index":1508,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["updatemany",{"_index":2545,"title":{},"body":{"injectables/UserService.html":{}}}],["updatemydata",{"_index":816,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["updatemydata(req",{"_index":867,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["updateone",{"_index":1705,"title":{},"body":{"injectables/ContentService.html":{},"classes/Engagement.html":{},"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["updateone(r._id",{"_index":2555,"title":{},"body":{"injectables/UserService.html":{}}}],["updatepage",{"_index":2220,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["updatepage(req",{"_index":2239,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["updatepagedto",{"_index":1805,"title":{"classes/UpdatePageDto.html":{}},"body":{"classes/Counter.html":{},"classes/FollowResponse.html":{},"classes/Link-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserImage.html":{},"classes/UserResponseDto.html":{}}}],["updatepagedto})@apiresponse({status",{"_index":2240,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["updateresult",{"_index":1704,"title":{},"body":{"injectables/ContentService.html":{}}}],["updates",{"_index":3291,"title":{},"body":{"license.html":{}}}],["updateuser",{"_index":2438,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdto",{"_index":868,"title":{"classes/UpdateUserDto.html":{}},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"injectables/ContentService.html":{},"classes/Counter.html":{},"injectables/FollowInterceptor.html":{},"classes/FollowResponse.html":{},"injectables/ImageInterceptor.html":{},"classes/Link-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserImage.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{}}}],["updateuserdto.dob",{"_index":2469,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdto.images",{"_index":2479,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdto.images.avatar",{"_index":2480,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdto.images.cover",{"_index":2481,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdto.links",{"_index":2471,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdto.links.website",{"_index":2477,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdto.links[social",{"_index":2475,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdto.overview",{"_index":2467,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdto})@apiokresponse({type",{"_index":869,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["upload",{"_index":2158,"title":{},"body":{"classes/Image.html":{},"classes/Uploader.html":{}}}],["upload(base64",{"_index":2163,"title":{},"body":{"classes/Image.html":{}}}],["upload_failed",{"_index":1162,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["uploadedimages",{"_index":1572,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["uploadedimages[index].uri",{"_index":1580,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["uploader",{"_index":2169,"title":{"classes/Uploader.html":{}},"body":{"classes/Image.html":{},"classes/Uploader.html":{},"modules/UtilsAwsModule.html":{}}}],["uploadfrombase64tos3",{"_index":2381,"title":{},"body":{"classes/Uploader.html":{}}}],["uploadfrombase64tos3(base64",{"_index":2189,"title":{},"body":{"classes/Image.html":{}}}],["uploadoptions",{"_index":2164,"title":{},"body":{"classes/Image.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/Uploader.html":{},"modules/UtilsAwsModule.html":{},"miscellaneous/typealiases.html":{}}}],["uploadresult",{"_index":1570,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["uploadresult.sort((a",{"_index":1573,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["upsert",{"_index":2147,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["uri",{"_index":2157,"title":{},"body":{"classes/Image.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["url",{"_index":1058,"title":{"classes/Url.html":{}},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"injectables/ContentInterceptor.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentsInterceptor.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"interfaces/IUser.html":{},"classes/Image.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["url.url",{"_index":1579,"title":{},"body":{"injectables/ContentInterceptor.html":{},"injectables/ContentsInterceptor.html":{}}}],["usa",{"_index":540,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{}}}],["use",{"_index":741,"title":{},"body":{"controllers/AppController.html":{},"classes/Content.html":{},"classes/ContentItem.html":{},"injectables/ContentService.html":{},"classes/Engagement.html":{},"interfaces/IContent.html":{},"injectables/UserService.html":{},"license.html":{}}}],["used",{"_index":2932,"title":{},"body":{"license.html":{}}}],["usefactory",{"_index":1920,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["useful",{"_index":511,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"license.html":{}}}],["useinterceptors",{"_index":560,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["useinterceptors(contentinterceptor",{"_index":1495,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{}}}],["useinterceptors(contentsinterceptor",{"_index":922,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["useinterceptors(credentialinterceptor",{"_index":623,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["useinterceptors(credentialinterceptor)@apibody({type",{"_index":412,"title":{},"body":{"controllers/AppController.html":{}}}],["useinterceptors(followinterceptor",{"_index":953,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["useinterceptors(guestinterceptor",{"_index":648,"title":{},"body":{"controllers/AppController.html":{}}}],["useinterceptors(imageinterceptor",{"_index":903,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["useinterceptors(pageinterceptor",{"_index":2266,"title":{},"body":{"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["useinterceptors(tokeninterceptor",{"_index":685,"title":{},"body":{"controllers/AppController.html":{}}}],["user",{"_index":93,"title":{"classes/User.html":{}},"body":{"classes/Account.html":{},"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"injectables/AppService.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"classes/ContentItem.html":{},"injectables/ContentService.html":{},"modules/DatabaseModule.html":{},"classes/Engagement.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{},"interfaces/IUser.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/Relationship.html":{},"interfaces/SignupRequirements.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{},"index.html":{},"license.html":{}}}],["user._id",{"_index":1648,"title":{},"body":{"injectables/ContentService.html":{},"injectables/UserService.html":{}}}],["user.delete",{"_index":920,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["user.displayid",{"_index":1749,"title":{},"body":{"injectables/ContentService.html":{}}}],["user.displayname",{"_index":1750,"title":{},"body":{"injectables/ContentService.html":{}}}],["user.follow(followeduser",{"_index":2501,"title":{},"body":{"injectables/UserService.html":{}}}],["user.owneraccount",{"_index":1516,"title":{},"body":{"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/UserService.html":{}}}],["user.profile",{"_index":1746,"title":{},"body":{"injectables/ContentService.html":{},"injectables/UserService.html":{}}}],["user.profile.birthdate",{"_index":2470,"title":{},"body":{"injectables/UserService.html":{}}}],["user.profile.images",{"_index":1747,"title":{},"body":{"injectables/ContentService.html":{},"injectables/UserService.html":{}}}],["user.profile.images.avatar",{"_index":1748,"title":{},"body":{"injectables/ContentService.html":{},"injectables/UserService.html":{}}}],["user.profile.images.cover",{"_index":2482,"title":{},"body":{"injectables/UserService.html":{}}}],["user.profile.overview",{"_index":2468,"title":{},"body":{"injectables/UserService.html":{}}}],["user.profile.socials",{"_index":2472,"title":{},"body":{"injectables/UserService.html":{}}}],["user.profile.socials[social",{"_index":2476,"title":{},"body":{"injectables/UserService.html":{}}}],["user.profile.websites",{"_index":2478,"title":{},"body":{"injectables/UserService.html":{}}}],["user.save",{"_index":344,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{},"injectables/UserService.html":{}}}],["user.schema",{"_index":94,"title":{},"body":{"classes/Account.html":{},"classes/ContentItem.html":{},"classes/Engagement.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{},"classes/Relationship.html":{}}}],["user.touserresponse",{"_index":907,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["user.type",{"_index":1751,"title":{},"body":{"injectables/ContentService.html":{},"injectables/UserService.html":{}}}],["user.unfollow(followeduser",{"_index":2502,"title":{},"body":{"injectables/UserService.html":{}}}],["user.verified",{"_index":1753,"title":{},"body":{"injectables/ContentService.html":{}}}],["user.visibility",{"_index":2557,"title":{},"body":{"injectables/UserService.html":{}}}],["user_id_is_exist",{"_index":1198,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["user_name_is_exist",{"_index":1196,"title":{},"body":{"classes/CastcleException.html":{},"interfaces/ErrorStatus.html":{},"miscellaneous/enumerations.html":{}}}],["useraccount",{"_index":2559,"title":{},"body":{"injectables/UserService.html":{}}}],["userdocument",{"_index":211,"title":{},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"injectables/ContentService.html":{},"interfaces/IUser.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"interfaces/SignupRequirements.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["userdocument)._id",{"_index":2141,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["userdocument).createdat.toisostring",{"_index":2129,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["userdocument).displayid",{"_index":2124,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["userdocument).displayname",{"_index":2125,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["userdocument).followedcount",{"_index":2136,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["userdocument).followercount",{"_index":2137,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["userdocument).profile.images.avatar",{"_index":2126,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["userdocument).profile.images.cover",{"_index":2127,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["userdocument).type",{"_index":2144,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["userdocument).updatedat.toisostring",{"_index":2128,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["userdocument).visibility",{"_index":2135,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["userfromcastcleid",{"_index":900,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["userimage",{"_index":1796,"title":{"classes/UserImage.html":{}},"body":{"classes/Counter.html":{},"classes/FollowResponse.html":{},"classes/Link-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserImage.html":{},"classes/UserResponseDto.html":{}}}],["usermodel",{"_index":2093,"title":{"interfaces/UserModel.html":{}},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{}}}],["username",{"_index":996,"title":{},"body":{"injectables/AppService.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/GuestLoginDto.html":{},"classes/LoginDto.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["userprofile",{"_index":2081,"title":{"interfaces/UserProfile.html":{}},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["userresponsedto",{"_index":883,"title":{"classes/UserResponseDto.html":{}},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"classes/Counter.html":{},"injectables/FollowInterceptor.html":{},"classes/FollowResponse.html":{},"interfaces/IUser.html":{},"injectables/ImageInterceptor.html":{},"classes/Link-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{}}}],["userresponsedto})@apibearerauth()@useinterceptors(imageinterceptor)@get(':id",{"_index":832,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["userresponsedto})@apibearerauth()@useinterceptors(imageinterceptor)@get('me",{"_index":829,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["userresponsedto})@apibearerauth()@useinterceptors(imageinterceptor)@put('me",{"_index":870,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["userresult",{"_index":2558,"title":{},"body":{"injectables/UserService.html":{}}}],["users",{"_index":1030,"title":{},"body":{"injectables/AppService-6.html":{},"index.html":{},"license.html":{}}}],["userschema",{"_index":1906,"title":{},"body":{"modules/DatabaseModule.html":{},"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["userschema.methods.follow",{"_index":2138,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["userschema.methods.topageresponse",{"_index":2123,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["userschema.methods.touserresponse",{"_index":2118,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["userschema.methods.unfollow",{"_index":2152,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["userschema.pre('save",{"_index":2134,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["userschema.statics.coverttouserresponse",{"_index":2116,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["userschemafactory",{"_index":1907,"title":{},"body":{"modules/DatabaseModule.html":{},"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["userservice",{"_index":802,"title":{"injectables/UserService.html":{}},"body":{"controllers/AppController-3.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["userservice.getuserfromid",{"_index":894,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{}}}],["usertype",{"_index":212,"title":{},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"injectables/ContentService.html":{},"interfaces/IUser.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"interfaces/SignupRequirements.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["usertype.page",{"_index":1752,"title":{},"body":{"injectables/ContentService.html":{},"interfaces/IUser.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{}}}],["usertype.people",{"_index":343,"title":{},"body":{"interfaces/AccountRequirements.html":{},"injectables/ContentService.html":{},"interfaces/SignupRequirements.html":{},"injectables/UserService.html":{}}}],["usertypeoption",{"_index":856,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{}}}],["uses",{"_index":2778,"title":{},"body":{"index.html":{},"license.html":{}}}],["using",{"_index":2835,"title":{},"body":{"index.html":{},"license.html":{}}}],["util",{"_index":1879,"title":{},"body":{"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{}}}],["util.getlangaguefromrequest(request",{"_index":1882,"title":{},"body":{"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{},"injectables/HeadersInterceptor.html":{},"interfaces/HeadersRequest.html":{}}}],["util.gettokenfromrequest(request",{"_index":1884,"title":{},"body":{"injectables/CredentialInterceptor.html":{},"interfaces/CredentialRequest.html":{},"injectables/TokenInterceptor.html":{},"interfaces/TokenRequest.html":{}}}],["utils/common",{"_index":1674,"title":{},"body":{"injectables/ContentService.html":{},"injectables/UserService.html":{}}}],["utilsawsmodule",{"_index":2569,"title":{"modules/UtilsAwsModule.html":{}},"body":{"modules/UtilsAwsModule.html":{},"modules.html":{},"overview.html":{}}}],["utilsexceptionmodule",{"_index":2572,"title":{"modules/UtilsExceptionModule.html":{}},"body":{"modules/UtilsExceptionModule.html":{},"modules.html":{}}}],["utilsinterceptorsmodule",{"_index":2576,"title":{"modules/UtilsInterceptorsModule.html":{}},"body":{"modules/UtilsInterceptorsModule.html":{},"modules.html":{},"overview.html":{}}}],["utilsmodule",{"_index":2582,"title":{"modules/UtilsModule.html":{}},"body":{"modules/UtilsModule.html":{},"modules.html":{}}}],["utilspipesmodule",{"_index":2584,"title":{"modules/UtilsPipesModule.html":{}},"body":{"modules/UtilsPipesModule.html":{},"modules.html":{},"overview.html":{}}}],["uxdto",{"_index":2652,"title":{},"body":{"injectables/UxEngagementService.html":{}}}],["uxenagementdto",{"_index":2646,"title":{},"body":{"injectables/UxEngagementService.html":{}}}],["uxengagemenetservice",{"_index":788,"title":{},"body":{"controllers/AppController-1.html":{}}}],["uxengagement",{"_index":1917,"title":{"classes/UxEngagement.html":{}},"body":{"modules/DatabaseModule.html":{},"classes/UxEngagement.html":{},"injectables/UxEngagementService.html":{}}}],["uxengagementbody",{"_index":782,"title":{"classes/UxEngagementBody.html":{}},"body":{"controllers/AppController-1.html":{},"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{},"injectables/UxEngagementService.html":{}}}],["uxengagementbody})@apiresponse({status",{"_index":783,"title":{},"body":{"controllers/AppController-1.html":{}}}],["uxengagementdocument",{"_index":2610,"title":{},"body":{"classes/UxEngagement.html":{},"injectables/UxEngagementService.html":{},"miscellaneous/typealiases.html":{}}}],["uxengagementdto",{"_index":2628,"title":{"classes/UxEngagementDto.html":{}},"body":{"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{},"injectables/UxEngagementService.html":{}}}],["uxengagementschema",{"_index":1912,"title":{},"body":{"modules/DatabaseModule.html":{},"classes/UxEngagement.html":{}}}],["uxengagementservice",{"_index":787,"title":{"injectables/UxEngagementService.html":{}},"body":{"controllers/AppController-1.html":{},"modules/DatabaseModule.html":{},"injectables/UxEngagementService.html":{},"overview.html":{}}}],["uxsessionid",{"_index":2613,"title":{},"body":{"classes/UxEngagementBody.html":{},"classes/UxEngagementDto.html":{}}}],["v3",{"_index":2875,"title":{},"body":{"index.html":{}}}],["valid",{"_index":382,"title":{},"body":{"interfaces/AccountRequirements.html":{},"controllers/AppController.html":{},"classes/CastcleName.html":{},"interfaces/SignupRequirements.html":{},"license.html":{}}}],["validateemail",{"_index":303,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["value",{"_index":850,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/CastcleQueryOptions.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"injectables/ContentService.html":{},"classes/CreateAccountDto.html":{},"classes/Feature-2.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"classes/Uploader.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["values",{"_index":2722,"title":{},"body":{"index.html":{}}}],["vdos",{"_index":2774,"title":{},"body":{"index.html":{}}}],["verbatim",{"_index":2882,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":1134,"title":{},"body":{"classes/CastLogger.html":{}}}],["verification",{"_index":743,"title":{},"body":{"controllers/AppController.html":{}}}],["verificationemail",{"_index":406,"title":{},"body":{"controllers/AppController.html":{}}}],["verificationemail(@req",{"_index":701,"title":{},"body":{"controllers/AppController.html":{}}}],["verificationemail(req",{"_index":474,"title":{},"body":{"controllers/AppController.html":{}}}],["verificationotp",{"_index":724,"title":{},"body":{"controllers/AppController.html":{}}}],["verificationpassword",{"_index":407,"title":{},"body":{"controllers/AppController.html":{}}}],["verificationpassword(password",{"_index":477,"title":{},"body":{"controllers/AppController.html":{}}}],["verificationpasswordbody",{"_index":590,"title":{"classes/VerificationPasswordBody.html":{}},"body":{"controllers/AppController.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/GuestLoginDto.html":{},"classes/LoginDto.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["verificationpasswordbody})@apiresponse({status",{"_index":479,"title":{},"body":{"controllers/AppController.html":{}}}],["verificationpasswordresponse",{"_index":591,"title":{"classes/VerificationPasswordResponse.html":{}},"body":{"controllers/AppController.html":{},"classes/ChangePasswordBody.html":{},"classes/CheckEmailExistDto.html":{},"classes/CheckIdExistDto.html":{},"classes/CheckingResponse.html":{},"classes/GuestLoginDto.html":{},"classes/LoginDto.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterByEmailDto.html":{},"classes/RegisterPayload.html":{},"classes/SuggestCastcleIdReponse.html":{},"classes/TokenResponse.html":{},"classes/VerificationPasswordBody.html":{},"classes/VerificationPasswordResponse.html":{},"classes/suggestCastcleIdPayload.html":{}}}],["verificationpasswordresponse})@useinterceptors(credentialinterceptor)@post('verificationpassword",{"_index":480,"title":{},"body":{"controllers/AppController.html":{}}}],["verified",{"_index":1047,"title":{},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"injectables/ContentService.html":{},"classes/ContentsResponse.html":{},"classes/Counter.html":{},"classes/Feature.html":{},"classes/FollowResponse.html":{},"interfaces/IUser.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Link-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/Url.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{}}}],["verify",{"_index":408,"title":{},"body":{"controllers/AppController.html":{}}}],["verify(@req",{"_index":745,"title":{},"body":{"controllers/AppController.html":{}}}],["verify(req",{"_index":482,"title":{},"body":{"controllers/AppController.html":{}}}],["verifyaccesstoken(accesstoken",{"_index":320,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["verifyaccount(accountactivation",{"_index":323,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["verifylink",{"_index":1003,"title":{},"body":{"injectables/AppService.html":{}}}],["verifylink}?code=${code",{"_index":1009,"title":{},"body":{"injectables/AppService.html":{}}}],["verifypassword",{"_index":2032,"title":{},"body":{"interfaces/IAccount.html":{}}}],["verifypassword(password",{"_index":112,"title":{},"body":{"classes/Account.html":{},"interfaces/IAccount.html":{},"interfaces/ICredential.html":{}}}],["verifytoken",{"_index":148,"title":{},"body":{"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/AccountRequirements.html":{},"interfaces/IAccountActivation.html":{},"interfaces/SignupRequirements.html":{}}}],["verifytokenexpiredate",{"_index":149,"title":{},"body":{"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/AccountRequirements.html":{},"interfaces/IAccountActivation.html":{},"interfaces/SignupRequirements.html":{}}}],["verifytokenexpiredate.toisostring",{"_index":181,"title":{},"body":{"classes/AccountActivation.html":{},"interfaces/AccountActivationModel.html":{},"interfaces/IAccountActivation.html":{}}}],["verifytokenexpirestime",{"_index":31,"title":{},"body":{"interfaces/AccessTokenPayload.html":{},"interfaces/EmailVerifyToken.html":{},"interfaces/MemberAccessTokenPayload.html":{},"interfaces/RefreshTokenPayload.html":{}}}],["verifyurl",{"_index":746,"title":{},"body":{"controllers/AppController.html":{}}}],["version",{"_index":505,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"license.html":{}}}],["version('beta",{"_index":739,"title":{},"body":{"controllers/AppController.html":{}}}],["version('beta')@get",{"_index":433,"title":{},"body":{"controllers/AppController.html":{}}}],["versions",{"_index":2901,"title":{},"body":{"license.html":{}}}],["via",{"_index":2870,"title":{},"body":{"index.html":{}}}],["view",{"_index":3022,"title":{},"body":{"license.html":{}}}],["viewer",{"_index":1078,"title":{},"body":{"classes/Author.html":{},"classes/AuthorDto.html":{},"classes/BlogPayload.html":{},"classes/BlogPhoto.html":{},"classes/CastcleContentQueryOptions.html":{},"classes/Comment.html":{},"classes/ContentItem.html":{},"classes/ContentPayloadDto.html":{},"classes/ContentResponse.html":{},"classes/ContentsResponse.html":{},"classes/Feature.html":{},"classes/ImagePayload.html":{},"classes/Like.html":{},"classes/Link.html":{},"classes/Participant.html":{},"classes/QuotePayload.html":{},"classes/Recast.html":{},"classes/RecastPayload.html":{},"classes/SaveContentDto.html":{},"classes/ShortPayload.html":{},"classes/ShortPhoto.html":{},"classes/Url.html":{}}}],["viewer:account",{"_index":1600,"title":{},"body":{"classes/ContentItem.html":{}}}],["violated",{"_index":2790,"title":{},"body":{"index.html":{}}}],["violates",{"_index":3297,"title":{},"body":{"license.html":{}}}],["violation",{"_index":3359,"title":{},"body":{"license.html":{}}}],["violence",{"_index":2773,"title":{},"body":{"index.html":{}}}],["visibility",{"_index":49,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivation.html":{},"classes/AccountAuthenId.html":{},"interfaces/AccountRequirements.html":{},"classes/ArchiveHashtag.html":{},"classes/CastcleBase.html":{},"classes/Circle.html":{},"classes/Comment-1.html":{},"classes/Content.html":{},"classes/ContentItem.html":{},"injectables/ContentService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateCredentialDto.html":{},"classes/Credential.html":{},"classes/Engagement.html":{},"classes/Feature-1.html":{},"classes/Feature-2.html":{},"classes/Hashtag.html":{},"classes/HashtagItem.html":{},"classes/Otp.html":{},"classes/Relationship.html":{},"classes/Revision.html":{},"classes/SaveCredentialDto.html":{},"interfaces/SignupRequirements.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/UxEngagement.html":{}}}],["visible",{"_index":3017,"title":{},"body":{"license.html":{}}}],["visit",{"_index":553,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{}}}],["void",{"_index":1118,"title":{},"body":{"classes/CastLogger.html":{},"license.html":{}}}],["volume",{"_index":3180,"title":{},"body":{"license.html":{}}}],["waive",{"_index":3135,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":3556,"title":{},"body":{"license.html":{}}}],["want",{"_index":2910,"title":{},"body":{"license.html":{}}}],["warn",{"_index":1112,"title":{},"body":{"classes/CastLogger.html":{}}}],["warn(message",{"_index":1121,"title":{},"body":{"classes/CastLogger.html":{}}}],["warranties",{"_index":3020,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":513,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"license.html":{}}}],["way",{"_index":2448,"title":{},"body":{"injectables/UserService.html":{},"license.html":{}}}],["ways",{"_index":3191,"title":{},"body":{"license.html":{}}}],["we're",{"_index":2793,"title":{},"body":{"index.html":{}}}],["web",{"_index":3580,"title":{},"body":{"license.html":{}}}],["website",{"_index":1799,"title":{},"body":{"classes/Counter.html":{},"classes/FollowResponse.html":{},"interfaces/IUser.html":{},"classes/Link-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{}}}],["websites",{"_index":2086,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{}}}],["welcome",{"_index":1001,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"injectables/AppService-4.html":{},"injectables/AppService-5.html":{},"injectables/AppService-6.html":{}}}],["well",{"_index":2745,"title":{},"body":{"index.html":{},"license.html":{}}}],["whatever",{"_index":3400,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1739,"title":{},"body":{"injectables/ContentService.html":{},"license.html":{}}}],["whitepaper",{"_index":2813,"title":{},"body":{"index.html":{}}}],["whole",{"_index":2739,"title":{},"body":{"index.html":{},"license.html":{}}}],["whose",{"_index":3239,"title":{},"body":{"license.html":{}}}],["widely",{"_index":3038,"title":{},"body":{"license.html":{}}}],["widespread",{"_index":2926,"title":{},"body":{"license.html":{}}}],["window",{"_index":3053,"title":{},"body":{"license.html":{}}}],["windows",{"_index":2837,"title":{},"body":{"index.html":{}}}],["wipo",{"_index":3126,"title":{},"body":{"license.html":{}}}],["wish",{"_index":2908,"title":{},"body":{"license.html":{}}}],["within",{"_index":3345,"title":{},"body":{"license.html":{}}}],["without",{"_index":512,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"index.html":{},"license.html":{}}}],["work",{"_index":528,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{},"license.html":{}}}],["work's",{"_index":3065,"title":{},"body":{"license.html":{}}}],["working",{"_index":3039,"title":{},"body":{"license.html":{}}}],["works",{"_index":2083,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"index.html":{},"license.html":{}}}],["worldwide",{"_index":3433,"title":{},"body":{"license.html":{}}}],["write",{"_index":529,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"classes/CastLogger.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{}}}],["writing",{"_index":3520,"title":{},"body":{"license.html":{}}}],["written",{"_index":3199,"title":{},"body":{"license.html":{}}}],["www.castcle.com",{"_index":554,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AppController-4.html":{},"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"modules/AppModule.html":{},"controllers/ContentController.html":{},"controllers/ContentController-1.html":{},"modules/DatabaseModule.html":{},"controllers/HealthyController.html":{},"controllers/HealthyController-1.html":{},"controllers/HealthyController-2.html":{},"controllers/HealthyController-3.html":{},"controllers/HealthyController-4.html":{},"controllers/HealthyController-5.html":{},"controllers/PageController.html":{},"controllers/PageController-1.html":{},"modules/UtilsExceptionModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsModule.html":{},"modules/UtilsPipesModule.html":{}}}],["xxxxxxxx",{"_index":716,"title":{},"body":{"controllers/AppController.html":{}}}],["year",{"_index":1361,"title":{},"body":{"injectables/CommonDate.html":{}}}],["years",{"_index":3201,"title":{},"body":{"license.html":{}}}],["years').calendar",{"_index":1387,"title":{},"body":{"injectables/CommonDate.html":{}}}],["yes",{"_index":860,"title":{},"body":{"controllers/AppController-5.html":{},"controllers/AppController-6.html":{},"classes/CastLogger.html":{},"injectables/ContentTypePipe.html":{},"interfaces/IAccount.html":{},"classes/Image.html":{},"injectables/LimitPipe.html":{},"injectables/PagePipe.html":{},"injectables/SortByPipe.html":{}}}],["yourself",{"_index":3448,"title":{},"body":{"license.html":{}}}],["youth",{"_index":2783,"title":{},"body":{"index.html":{}}}],["youtube",{"_index":1797,"title":{},"body":{"classes/Counter.html":{},"classes/FollowResponse.html":{},"interfaces/IUser.html":{},"classes/Link-1.html":{},"classes/PageDto.html":{},"classes/PageResponse.html":{},"classes/PageResponseDto.html":{},"classes/PagesResponse.html":{},"classes/UpdatePageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserImage.html":{},"interfaces/UserModel.html":{},"interfaces/UserProfile.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{}}}],["yy",{"_index":736,"title":{},"body":{"controllers/AppController.html":{}}}],["yyyy",{"_index":733,"title":{},"body":{"controllers/AppController.html":{},"injectables/CommonDate.html":{}}}],["z",{"_index":309,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["z]{2",{"_index":312,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["za",{"_index":308,"title":{},"body":{"interfaces/AccountRequirements.html":{},"interfaces/SignupRequirements.html":{}}}],["zoom",{"_index":965,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UtilsInterceptorsModule.html":{},"modules/UtilsPipesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AccessTokenPayload.html":{"url":"interfaces/AccessTokenPayload.html","title":"interface - AccessTokenPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AccessTokenPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/token.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            accessTokenExpiresTime\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            preferredLanguage\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessTokenExpiresTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessTokenExpiresTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preferredLanguage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preferredLanguage:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     \"member\" | \"guest\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"member\" | \"guest\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AccessTokenPayload {\n  id: string;\n  preferredLanguage: string[];\n  role: 'member' | 'guest'; // member or guest\n  accessTokenExpiresTime?: string; // 30 นาทีจาก create\n}\n\nexport interface MemberAccessTokenPayload extends AccessTokenPayload {\n  role: 'member';\n  castcleId: string;\n  displayName: string;\n  email?: string;\n  avatar?: string;\n}\n\nexport interface RefreshTokenPayload {\n  id: string;\n  role: 'member' | 'guest';\n  refreshTokenExpiresTime?: string;\n}\n\nexport interface EmailVerifyToken {\n  id: string;\n  verifyTokenExpiresTime?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Account.html":{"url":"classes/Account.html","title":"class - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/schemas/account.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CastcleBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activateDate\n                            \n                            \n                                credentials\n                            \n                            \n                                email\n                            \n                            \n                                isGuest\n                            \n                            \n                                mobile\n                            \n                            \n                                password\n                            \n                            \n                                preferences\n                            \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                visibility\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activateDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/account.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        credentials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ICredential[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/account.schema.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/account.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGuest\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/account.schema.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/account.schema.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/account.schema.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preferences\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/account.schema.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        visibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityVisibility\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:37\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Document, Model, model } from 'mongoose';\nimport { CastcleBase } from './base.schema';\nimport { AccountActivationDocument } from './accountActivation.schema';\nimport { Environment as env } from '@castcle-api/environments';\nimport { CredentialDocument, CredentialSchema } from './credential.schema';\nimport { Password } from '@castcle-api/utils';\nimport { User } from './user.schema';\nimport { EntityVisibility } from '../dtos/common.dto';\nexport type AccountDocument = Account & IAccount;\n\nexport enum AccountRole {\n  Member = 'member',\n  Guest = 'guest'\n}\n\ninterface ICredential {\n  _id: any;\n  deviceUUID: string;\n}\n\n@Schema({ timestamps: true })\nexport class Account extends CastcleBase {\n  @Prop()\n  email: string;\n\n  @Prop()\n  password: string;\n\n  @Prop()\n  activateDate: Date;\n\n  @Prop({ required: true })\n  isGuest: boolean;\n\n  @Prop({ required: true, type: Object })\n  preferences: {\n    langagues: string[];\n  };\n\n  @Prop({ type: Object })\n  mobile: {\n    countryCode: string;\n    number: string;\n  };\n\n  @Prop({ type: Array })\n  credentials: ICredential[];\n}\nexport const AccountSchema = SchemaFactory.createForClass(Account);\n\nexport interface IAccount extends Document {\n  changePassword(\n    pasword: string,\n    email?: string\n  ): Promise;\n  verifyPassword(password: string): boolean;\n}\nAccountSchema.methods.changePassword = async function (\n  password: string,\n  email?: string\n) {\n  const encryptPassword = await Password.create(password);\n  if (encryptPassword) {\n    (this as AccountDocument).password = encryptPassword;\n    if (email) (this as AccountDocument).email = email;\n    return this.save();\n  } else return null;\n};\nAccountSchema.methods.verifyPassword = function (password: string) {\n  return Password.verify(password, (this as AccountDocument).password);\n};\n\nexport const AccountSchemaFactory = (\n  credentialModel: Model\n): mongoose.Schema => {\n  AccountSchema.pre('save', function (next) {\n    if (!(this as AccountDocument).visibility)\n      (this as AccountDocument).visibility = EntityVisibility.Publish;\n    next();\n  });\n  AccountSchema.post('save', async function (doc, next) {\n    await credentialModel\n      .findOneAndUpdate(\n        { 'account._id': doc._id },\n        {\n          'account.isGuest': (doc as AccountDocument).isGuest,\n          'account.activateDate': (doc as AccountDocument).activateDate,\n          'account.visibility': (doc as AccountDocument).visibility\n        }\n      )\n      .exec();\n    next();\n  });\n  return AccountSchema;\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountActivation.html":{"url":"classes/AccountActivation.html","title":"class - AccountActivation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountActivation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/schemas/accountActivation.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CastcleBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                activationDate\n                            \n                            \n                                revocationDate\n                            \n                            \n                                type\n                            \n                            \n                                verifyToken\n                            \n                            \n                                verifyTokenExpireDate\n                            \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                visibility\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Account\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined, ref: 'Account'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/accountActivation.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        activationDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/accountActivation.schema.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        revocationDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/accountActivation.schema.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/accountActivation.schema.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/accountActivation.schema.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyTokenExpireDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/accountActivation.schema.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        visibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityVisibility\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:37\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { env } from '../environment';\nimport { Document, Model } from 'mongoose';\nimport { Account } from '../schemas/account.schema';\nimport { CastcleBase } from './base.schema';\nimport { EmailVerifyToken } from '../dtos/token.dto';\nimport { Token } from '@castcle-api/utils';\n\nexport type AccountActivationDocument = AccountActivation & IAccountActivation;\n\nexport enum AccountActivationType {\n  Email = 'email',\n  Mobile = 'mobile'\n}\n\n@Schema({ timestamps: true })\nexport class AccountActivation extends CastcleBase {\n  @Prop({\n    required: true,\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Account'\n  })\n  account: Account;\n\n  @Prop({ required: true })\n  type: string;\n\n  @Prop({ required: true })\n  verifyToken: string;\n\n  @Prop({ required: true })\n  verifyTokenExpireDate: Date;\n\n  @Prop()\n  activationDate: Date;\n\n  @Prop()\n  revocationDate: Date;\n}\n\nexport const AccountActivationSchema =\n  SchemaFactory.createForClass(AccountActivation);\n\nexport interface IAccountActivation extends Document {\n  isVerifyTokenValid(): boolean;\n}\n\nAccountActivationSchema.methods.isVerifyTokenValid = function () {\n  return Token.isTokenValid(\n    (this as AccountActivationDocument).verifyToken,\n    env.jwt_verify_secret\n  );\n};\n\nexport interface AccountActivationModel\n  extends Model {\n  generateVerifyToken(payload: EmailVerifyToken): {\n    verifyToken: string;\n    verifyTokenExpireDate: Date;\n  };\n}\n\nAccountActivationSchema.statics.generateVerifyToken = function (\n  payload: EmailVerifyToken\n) {\n  const now = new Date();\n  const verifyTokenExpireDate = new Date(\n    now.getTime() + Number(env.jwt_verify_expires_in) * 1000\n  );\n  payload.verifyTokenExpiresTime = verifyTokenExpireDate.toISOString();\n  const verifyToken = Token.generateToken(\n    payload,\n    env.jwt_verify_secret,\n    Number(env.jwt_verify_expires_in)\n  );\n  return {\n    verifyToken,\n    verifyTokenExpireDate\n  };\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AccountActivationModel.html":{"url":"interfaces/AccountActivationModel.html","title":"interface - AccountActivationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AccountActivationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/schemas/accountActivation.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        generateVerifyToken\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateVerifyToken\n                        \n                    \n                \n            \n            \n                \ngenerateVerifyToken(payload: EmailVerifyToken)\n                \n            \n\n\n            \n                \n                    Defined in libs/database/src/lib/schemas/accountActivation.schema.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                EmailVerifyToken\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { env } from '../environment';\nimport { Document, Model } from 'mongoose';\nimport { Account } from '../schemas/account.schema';\nimport { CastcleBase } from './base.schema';\nimport { EmailVerifyToken } from '../dtos/token.dto';\nimport { Token } from '@castcle-api/utils';\n\nexport type AccountActivationDocument = AccountActivation & IAccountActivation;\n\nexport enum AccountActivationType {\n  Email = 'email',\n  Mobile = 'mobile'\n}\n\n@Schema({ timestamps: true })\nexport class AccountActivation extends CastcleBase {\n  @Prop({\n    required: true,\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Account'\n  })\n  account: Account;\n\n  @Prop({ required: true })\n  type: string;\n\n  @Prop({ required: true })\n  verifyToken: string;\n\n  @Prop({ required: true })\n  verifyTokenExpireDate: Date;\n\n  @Prop()\n  activationDate: Date;\n\n  @Prop()\n  revocationDate: Date;\n}\n\nexport const AccountActivationSchema =\n  SchemaFactory.createForClass(AccountActivation);\n\nexport interface IAccountActivation extends Document {\n  isVerifyTokenValid(): boolean;\n}\n\nAccountActivationSchema.methods.isVerifyTokenValid = function () {\n  return Token.isTokenValid(\n    (this as AccountActivationDocument).verifyToken,\n    env.jwt_verify_secret\n  );\n};\n\nexport interface AccountActivationModel\n  extends Model {\n  generateVerifyToken(payload: EmailVerifyToken): {\n    verifyToken: string;\n    verifyTokenExpireDate: Date;\n  };\n}\n\nAccountActivationSchema.statics.generateVerifyToken = function (\n  payload: EmailVerifyToken\n) {\n  const now = new Date();\n  const verifyTokenExpireDate = new Date(\n    now.getTime() + Number(env.jwt_verify_expires_in) * 1000\n  );\n  payload.verifyTokenExpiresTime = verifyTokenExpireDate.toISOString();\n  const verifyToken = Token.generateToken(\n    payload,\n    env.jwt_verify_secret,\n    Number(env.jwt_verify_expires_in)\n  );\n  return {\n    verifyToken,\n    verifyTokenExpireDate\n  };\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountAuthenId.html":{"url":"classes/AccountAuthenId.html","title":"class - AccountAuthenId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountAuthenId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/schemas/accountAuthenId.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CastcleBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                type\n                            \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                visibility\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Account\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined, ref: 'Account'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/accountAuthenId.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/accountAuthenId.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        visibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityVisibility\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:37\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Document } from 'mongoose';\nimport { Account } from '../schemas/account.schema';\nimport { CastcleBase } from './base.schema';\n\nexport type AccountAuthenIdDocument = AccountAuthenId & Document;\n\nexport enum AccountAuthenIdType {\n  Twitter = 'twitter',\n  Facebook = 'facebook',\n  Google = 'google',\n  Telegram = 'telegram'\n}\n\n@Schema({ timestamps: true })\nexport class AccountAuthenId extends CastcleBase {\n  @Prop({\n    required: true,\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Account'\n  })\n  account: Account;\n\n  @Prop({ required: true })\n  type: string;\n}\n\nexport const AccountAuthenIdSchema =\n  SchemaFactory.createForClass(AccountAuthenId);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AccountRequirements.html":{"url":"interfaces/AccountRequirements.html","title":"interface - AccountRequirements","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AccountRequirements\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/services/authentication.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            device\n                                        \n                                \n                                \n                                        \n                                            deviceUUID\n                                        \n                                \n                                \n                                        \n                                            header\n                                        \n                                \n                                \n                                        \n                                            languagesPreferences\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        device\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        device:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deviceUUID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deviceUUID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        languagesPreferences\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        languagesPreferences:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model } from 'mongoose';\nimport { Inject, Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { AccountDocument, AccountSchema } from '../schemas/account.schema';\nimport {\n  AccountActivationDocument,\n  AccountActivationModel\n} from '../schemas/accountActivation.schema';\nimport { UserDocument, UserType } from '../schemas/user.schema';\nimport { OtpDocument, OtpModel, OtpObjective } from '../schemas/otp.schema';\nimport * as mongoose from 'mongoose';\nimport { CreateCredentialDto, CreateAccountDto } from '../dtos/account.dto';\nimport {\n  CredentialDocument,\n  CredentialModel\n} from '../schemas/credential.schema';\nimport { CastcleName, Token } from '@castcle-api/utils';\nimport {\n  AccessTokenPayload,\n  RefreshTokenPayload,\n  EmailVerifyToken,\n  MemberAccessTokenPayload\n} from '../dtos/token.dto';\nimport { EntityVisibility } from '../dtos/common.dto';\n\nexport interface AccountRequirements {\n  header: {\n    platform: string;\n  };\n  device: string;\n  deviceUUID: string;\n  languagesPreferences: string[];\n}\n\nexport interface SignupRequirements {\n  email: string;\n  password: string;\n  displayName: string;\n  displayId: string;\n}\n\n@Injectable()\nexport class AuthenticationService {\n  constructor(\n    @InjectModel('Account') public _accountModel: Model,\n    @InjectModel('Credential')\n    public _credentialModel: CredentialModel,\n    @InjectModel('AccountActivation')\n    public _accountActivationModel: AccountActivationModel,\n    @InjectModel('User')\n    public _userModel: Model,\n    @InjectModel('Otp')\n    public _otpModel: OtpModel\n  ) {}\n\n  getGuestCredentialFromDeviceUUID = (deviceUUID: string) =>\n    this._credentialModel\n      .findOne({ deviceUUID: deviceUUID, 'account.isGuest': true })\n      .exec();\n\n  getCredentialFromRefreshToken = (refreshToken: string) =>\n    this._credentialModel.findOne({ refreshToken: refreshToken }).exec();\n\n  getCredentialFromAccessToken = (accessToken: string) =>\n    this._credentialModel.findOne({ accessToken: accessToken }).exec();\n\n  async createAccount(accountRequirements: AccountRequirements) {\n    const newAccount = new this._accountModel({\n      isGuest: true,\n      preferences: {\n        languages: accountRequirements.languagesPreferences\n      }\n    } as CreateAccountDto);\n    newAccount.visibility = EntityVisibility.Publish;\n    const accountDocument = await newAccount.save();\n    const accessTokenResult = this._generateAccessToken({\n      id: accountDocument._id as string,\n      preferredLanguage: accountRequirements.languagesPreferences,\n      role: 'guest'\n    });\n    const refreshTokenResult = this._generateRefreshToken({\n      id: accountDocument._id as string,\n      role: 'guest'\n    });\n    const credential = new this._credentialModel({\n      account: {\n        _id: mongoose.Types.ObjectId(accountDocument._id),\n        isGuest: true,\n        visibility: EntityVisibility.Publish\n      },\n      accessToken: accessTokenResult.accessToken,\n      accessTokenExpireDate: accessTokenResult.accessTokenExpireDate,\n      refreshToken: refreshTokenResult.refreshToken,\n      refreshTokenExpireDate: refreshTokenResult.refreshTokenExpireDate,\n      device: accountRequirements.device,\n      platform: accountRequirements.header.platform,\n      deviceUUID: accountRequirements.deviceUUID\n    } as CreateCredentialDto);\n    const credentialDocument = await credential.save();\n    //TODO !!! : how to reduct this\n    if (!newAccount.credentials) newAccount.credentials = [];\n    newAccount.credentials.push({\n      _id: mongoose.Types.ObjectId(credentialDocument._id),\n      deviceUUID: credentialDocument.deviceUUID\n    });\n    await newAccount.save();\n    return { accountDocument, credentialDocument };\n  }\n\n  async linkCredentialToAccount(\n    credential: CredentialDocument,\n    account: AccountDocument\n  ) {\n    if (account._id === credential.account) {\n      return credential; // already link\n    }\n    //remove account old crdentiial\n    await this._accountModel.findByIdAndDelete(credential.account);\n    credential.account = account._id;\n    const credentialAccount = await this._accountModel.findById(account._id);\n    if (credentialAccount) {\n      if (!credentialAccount.credentials) credentialAccount.credentials = [];\n      credentialAccount.credentials.push({\n        _id: mongoose.Types.ObjectId(credential._id),\n        deviceUUID: credential.deviceUUID\n      });\n      await credentialAccount.save();\n    }\n    //set new account credential to current account\n    return credential.save();\n  }\n\n  getAccountFromCredential = (credential: CredentialDocument) =>\n    this._accountModel.findById(credential.account).exec();\n\n  getAccountFromEmail = (email: string) =>\n    this._accountModel\n      .findOne({ email: email, visibility: EntityVisibility.Publish })\n      .exec();\n\n  getUserFromCastcleId = (id: string) => {\n    return this._userModel.findOne({ displayId: id }).exec();\n  };\n\n  getAccountActivationFromVerifyToken = (token: string) =>\n    this._accountActivationModel.findOne({ verifyToken: token }).exec();\n\n  getAccountActivationFromCredential = (credential: CredentialDocument) =>\n    this._accountActivationModel\n      .findOne({ account: credential.account })\n      .exec();\n\n  validateEmail = (email: string) => {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email.toLowerCase());\n  };\n\n  _generateAccessToken = (payload: AccessTokenPayload) =>\n    this._credentialModel.generateAccessToken(payload);\n  _generateRefreshToken = (payload: RefreshTokenPayload) =>\n    this._credentialModel.generateRefreshToken(payload);\n  _generateEmailVerifyToken = (payload: EmailVerifyToken) =>\n    this._accountActivationModel.generateVerifyToken(payload);\n\n  async verifyAccessToken(accessToken: string) {\n    const credentialDocument = await this._credentialModel\n      .findOne({ accessToken: accessToken })\n      .exec();\n    if (credentialDocument && credentialDocument.isAccessTokenValid())\n      return true;\n    else return false;\n  }\n\n  async verifyAccount(accountActivation: AccountActivationDocument) {\n    const now = new Date();\n    accountActivation.activationDate = now;\n    await accountActivation.save();\n    //update ac\n    const account = await this._accountModel\n      .findById(accountActivation.account)\n      .exec();\n    account.isGuest = false;\n    account.activateDate = now;\n    const savedAccount = await account.save();\n    return savedAccount;\n  }\n\n  async signupByEmail(\n    account: AccountDocument,\n    requirements: SignupRequirements\n  ) {\n    account.isGuest = false;\n    //account.email = requirements.email;\n    //account.password =  requirements.password;\n    await account.changePassword(requirements.password, requirements.email);\n    //create user here\n    const user = new this._userModel({\n      ownerAccount: account._id,\n      displayName: requirements.displayName,\n      displayId: requirements.displayId,\n      type: UserType.People\n    });\n    await user.save();\n    return this.createAccountActivation(account, 'email');\n  }\n\n  createAccountActivation(account: AccountDocument, type: 'email' | 'phone') {\n    const emailTokenResult = this._generateEmailVerifyToken({\n      id: account._id\n    });\n    const accountActivation = new this._accountActivationModel({\n      account: account._id,\n      type: type,\n      verifyToken: emailTokenResult.verifyToken,\n      verifyTokenExpireDate: emailTokenResult.verifyTokenExpireDate\n    });\n    return accountActivation.save();\n  }\n\n  revokeAccountActivation(accountActivation: AccountActivationDocument) {\n    const emailTokenResult = this._generateEmailVerifyToken({\n      id: accountActivation.account as unknown as string\n    });\n    accountActivation.revocationDate = new Date();\n    accountActivation.verifyToken = emailTokenResult.verifyToken;\n    accountActivation.verifyTokenExpireDate =\n      emailTokenResult.verifyTokenExpireDate;\n    return accountActivation.save();\n  }\n\n  /**\n   *\n   * @param {string} displayName this will show suggestName + totalUser(if suggestName is already exist)\n   * @returns {Promise} suggestCastCleId\n   */\n  async suggestCastcleId(displayName: string) {\n    const name = new CastcleName(displayName);\n    const result = await this.getUserFromCastcleId(name.suggestCastcleId);\n    if (result) {\n      const totalUser = await this._userModel.countDocuments().exec();\n      return name.suggestCastcleId + totalUser;\n    } else return name.suggestCastcleId;\n  }\n\n  /**\n   * generate refCode and create Otp Document\n   * @param {AccountDocument} account\n   * @returns {OtpDocument}\n   */\n  async generateOtp(account: AccountDocument) {\n    const otp = await this._otpModel.generate(\n      account._id,\n      OtpObjective.ChangePassword\n    );\n    return otp;\n  }\n\n  /**\n   * find refCode that has the same refCode and\n   * @param {AccountDocument} account\n   * @param {string} refCode\n   * @returns {OtpDocument}\n   */\n  async getOtpFromAccount(account: AccountDocument, refCode: string) {\n    return this._otpModel\n      .findOne({ account: account._id, refCode: refCode })\n      .exec();\n  }\n\n  /**\n   * this will assume that we already check otp is valid. this function will change current account password and delete otp then return newly change password account\n   * @param {AccountDocument} account\n   * @param {OtpDocument} otp\n   * @param {string} newPassword\n   * @returns {Promise}\n   */\n  async changePassword(\n    account: AccountDocument,\n    otp: OtpDocument,\n    newPassword: string\n  ) {\n    let newAccount: AccountDocument;\n    const session = await this._accountModel.startSession();\n    session.withTransaction(async () => {\n      newAccount = await account.changePassword(newPassword);\n      await otp.delete();\n    });\n    session.endSession();\n    return newAccount;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/authentications/src/app/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePasswordSubmit\n                            \n                            \n                                    Async\n                                checkCastcleIdExists\n                            \n                            \n                                    Async\n                                checkEmailExists\n                            \n                            \n                                getData\n                            \n                            \n                                getDataBeta\n                            \n                            \n                                    Async\n                                guestLogin\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                refreshToken\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                requestLinkVerify\n                            \n                            \n                                    Async\n                                suggestCastcleId\n                            \n                            \n                                    Async\n                                verificationEmail\n                            \n                            \n                                    Async\n                                verificationPassword\n                            \n                            \n                                verify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        changePasswordSubmit\n                        \n                    \n                \n            \n            \n                \n                    \n                    changePasswordSubmit(refCode: string, newPassword: string, req: CredentialRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(CredentialInterceptor)@ApiBody({type: ChangePasswordBody})@ApiResponse({status: 204})@Post('changePasswordSubmit')@HttpCode(204)\n                \n            \n\n            \n                \n                    Defined in apps/authentications/src/app/app.controller.ts:547\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkCastcleIdExists\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkCastcleIdExists(body: CheckIdExistDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({type: CheckingResponse})@Post('checkCastcleIdExists')@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in apps/authentications/src/app/app.controller.ts:424\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CheckIdExistDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkEmailExists\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkEmailExists(req: HeadersRequest, email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 400, description: 'will show if some of header is missing'})@ApiOkResponse({status: 201, type: CheckingResponse})@ApiBody({type: CheckEmailExistDto})@Post('checkEmailExists')@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in apps/authentications/src/app/app.controller.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                HeadersRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/authentications/src/app/app.controller.ts:459\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataBeta\n                        \n                    \n                \n            \n            \n                \ngetDataBeta()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Version('beta')@Get()\n                \n            \n\n            \n                \n                    Defined in apps/authentications/src/app/app.controller.ts:471\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        guestLogin\n                        \n                    \n                \n            \n            \n                \n                    \n                    guestLogin(req: GuestRequest, body: GuestLoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiHeader({name: 'Device', description: 'Device name', example: 'iPhone', required: true})@ApiOkResponse({type: TokenResponse})@ApiBody({type: GuestLoginDto})@ApiResponse({status: 400, description: 'will show if some of header is missing'})@UseInterceptors(GuestInterceptor)@Post('guestLogin')\n                \n            \n\n            \n                \n                    Defined in apps/authentications/src/app/app.controller.ts:213\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                GuestRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                GuestLoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req: CredentialRequest, body: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiBody({type: LoginDto})@ApiOkResponse({status: 200, type: TokenResponse})@UseInterceptors(CredentialInterceptor)@Post('login')@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in apps/authentications/src/app/app.controller.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshToken(req: TokenRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 201, type: RefreshTokenResponse})@ApiResponse({status: 400, description: 'will show if some of header is missing or invalid refresh token'})@ApiBearerAuth()@UseInterceptors(TokenInterceptor)@Post('refreshToken')\n                \n            \n\n            \n                \n                    Defined in apps/authentications/src/app/app.controller.ts:320\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                TokenRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(req: CredentialRequest, body: RegisterByEmailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiResponse({status: 201, type: TokenResponse})@UseInterceptors(CredentialInterceptor)@Post('register')\n                \n            \n\n            \n                \n                    Defined in apps/authentications/src/app/app.controller.ts:253\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                RegisterByEmailDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        requestLinkVerify\n                        \n                    \n                \n            \n            \n                \n                    \n                    requestLinkVerify(req: CredentialRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiResponse({status: 204})@ApiResponse({status: 403, description: 'will reject if token is invalid'})@Post('requestLinkVerify')@HttpCode(204)@UseInterceptors(CredentialInterceptor)\n                \n            \n\n            \n                \n                    Defined in apps/authentications/src/app/app.controller.ts:388\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        suggestCastcleId\n                        \n                    \n                \n            \n            \n                \n                    \n                    suggestCastcleId(displayName: string, req: CredentialRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({type: SuggestCastcleIdReponse})@Post('suggestCastcleId')@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in apps/authentications/src/app/app.controller.ts:499\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    displayName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verificationEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    verificationEmail(req: TokenRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiResponse({status: 204})@ApiResponse({status: 403, description: 'will reject if token is invalid'})@Post('verificationEmail')@HttpCode(204)@UseInterceptors(TokenInterceptor)\n                \n            \n\n            \n                \n                    Defined in apps/authentications/src/app/app.controller.ts:358\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                TokenRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verificationPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    verificationPassword(password: string, req: CredentialRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: VerificationPasswordBody})@ApiResponse({status: 201, type: VerificationPasswordResponse})@UseInterceptors(CredentialInterceptor)@Post('verificationPassword')\n                \n            \n\n            \n                \n                    Defined in apps/authentications/src/app/app.controller.ts:520\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verify\n                        \n                    \n                \n            \n            \n                \nverify(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('verify')\n                \n            \n\n            \n                \n                    Defined in apps/authentications/src/app/app.controller.ts:479\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright (c) 2021, Castcle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 3 only, as\n * published by the Free Software Foundation.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n * version 3 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 3 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Castcle, 22 Phet Kasem 47/2 Alley, Bang Khae, Bangkok,\n * Thailand 10160, or visit www.castcle.com if you need additional information\n * or have any questions.\n */\n\nimport {\n  Body,\n  Controller,\n  Get,\n  Post,\n  UseInterceptors,\n  Version\n} from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { CommonDate } from '@castcle-api/commonDate';\nimport { Configs, Environment as env } from '@castcle-api/environments';\nimport {\n  HeadersRequest,\n  HeadersInterceptor,\n  TokenInterceptor,\n  TokenRequest,\n  CredentialInterceptor,\n  CredentialRequest\n} from '@castcle-api/utils/interceptors';\nimport { Request } from 'express';\nimport { CastLogger, CastLoggerOptions } from '@castcle-api/logger';\nimport { CastcleStatus, CastcleException } from '@castcle-api/utils/exception';\nimport { AuthenticationService } from '@castcle-api/database';\nimport { Host } from '@castcle-api/utils';\nimport {\n  ApiResponse,\n  ApiOkResponse,\n  ApiHeader,\n  ApiBody,\n  ApiBearerAuth\n} from '@nestjs/swagger';\nimport {\n  GuestLoginDto,\n  TokenResponse,\n  CheckEmailExistDto,\n  CheckingResponse,\n  RefreshTokenResponse,\n  LoginDto,\n  RegisterByEmailDto,\n  CheckIdExistDto,\n  SuggestCastcleIdReponse,\n  VerificationPasswordBody,\n  VerificationPasswordResponse,\n  ChangePasswordBody\n} from './dtos/dto';\nimport {\n  GuestInterceptor,\n  GuestRequest\n} from './interceptors/guest.interceptor';\nimport { HttpCode } from '@nestjs/common';\nimport { Req } from '@nestjs/common';\n\n@ApiHeader({\n  name: Configs.RequiredHeaders.AcceptLanguague.name,\n  description: Configs.RequiredHeaders.AcceptLanguague.description,\n  example: Configs.RequiredHeaders.AcceptLanguague.example,\n  required: true\n})\n@ApiHeader({\n  name: Configs.RequiredHeaders.AcceptVersion.name,\n  description: Configs.RequiredHeaders.AcceptVersion.description,\n  example: Configs.RequiredHeaders.AcceptVersion.example,\n  required: true\n})\n@Controller({\n  version: '1.0'\n})\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private authService: AuthenticationService\n  ) {}\n  private readonly logger = new CastLogger(\n    AppController.name,\n    CastLoggerOptions\n  );\n\n  @ApiResponse({\n    status: 400,\n    description: 'will show if some of header is missing'\n  })\n  @ApiOkResponse({\n    status: 201,\n    type: CheckingResponse\n  })\n  @ApiBody({\n    type: CheckEmailExistDto\n  })\n  @Post('checkEmailExists')\n  @HttpCode(200)\n  async checkEmailExists(\n    @Req() req: HeadersRequest,\n    @Body('email') email: string\n  ) {\n    //if there is no email in the request and email is not valid (not email )\n    if (!(email && this.authService.validateEmail(email)))\n      throw new CastcleException(CastcleStatus.INVALID_EMAIL, req.$language);\n    try {\n      const account = await this.authService.getAccountFromEmail(email);\n      return {\n        message: 'success message',\n        payload: {\n          exist: account ? true : false // true=มีในระบบ, false=ไม่มีในระบบ\n        }\n      };\n    } catch (error) {\n      throw new CastcleException(CastcleStatus.INVALID_EMAIL, req.$language);\n    }\n  }\n\n  @ApiBearerAuth()\n  @ApiBody({\n    type: LoginDto\n  })\n  @ApiOkResponse({\n    status: 200,\n    type: TokenResponse\n  })\n  @UseInterceptors(CredentialInterceptor)\n  @Post('login')\n  @HttpCode(200)\n  async login(@Req() req: CredentialRequest, @Body() body: LoginDto) {\n    const account = await this.authService.getAccountFromEmail(body.username);\n    if (!account)\n      throw new CastcleException(CastcleStatus.INVALID_EMAIL, req.$language);\n    if (await account.verifyPassword(body.password)) {\n      const embedCredentialByDeviceUUID = account.credentials.find(\n        (item) => item.deviceUUID === req.$credential.deviceUUID\n      );\n      if (embedCredentialByDeviceUUID) {\n        req.$credential = await this.authService._credentialModel\n          .findById(embedCredentialByDeviceUUID._id)\n          .exec();\n      } else {\n        await this.authService.linkCredentialToAccount(\n          req.$credential,\n          account\n        );\n      }\n\n      const tokenResult: TokenResponse = await req.$credential.renewTokens(\n        {\n          id: account as unknown as string,\n          preferredLanguage: [req.$language, req.$language],\n          role: account.activateDate ? 'member' : 'guest'\n        },\n        {\n          id: account as unknown as string,\n          role: account.activateDate ? 'member' : 'guest'\n        }\n      );\n      return {\n        accessToken: tokenResult.accessToken,\n        refreshToken: tokenResult.refreshToken\n      } as TokenResponse;\n    } else\n      throw new CastcleException(\n        CastcleStatus.INVALID_EMAIL_OR_PASSWORD,\n        req.$language\n      );\n  }\n\n  // PLAN : !!!\n  /*@Post('loginWithSocial')\n  loginWithSocial() {\n    return {\n      accessToken: 'SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c',\n      refreshToken: 'dmInNOX3-Pj_52rubA56xY37Na4EW3TPvwsj5SHiPF8'\n    };\n  }*/\n\n  @ApiHeader({\n    name: 'Device',\n    description: 'Device name',\n    example: 'iPhone',\n    required: true\n  })\n  @ApiOkResponse({\n    type: TokenResponse\n  })\n  @ApiBody({\n    type: GuestLoginDto\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'will show if some of header is missing'\n  })\n  @UseInterceptors(GuestInterceptor)\n  @Post('guestLogin')\n  async guestLogin(@Req() req: GuestRequest, @Body() body: GuestLoginDto) {\n    const deviceUUID = body.deviceUUID;\n    const credential = await this.authService.getGuestCredentialFromDeviceUUID(\n      deviceUUID\n    );\n    console.log('--search credential', credential);\n    if (credential) {\n      const tokenResult: TokenResponse = await credential.renewTokens(\n        {\n          id: credential.account as unknown as string,\n          preferredLanguage: [req.$language, req.$language],\n          role: 'guest'\n        },\n        {\n          id: credential.account as unknown as string,\n          role: 'guest'\n        }\n      );\n      return tokenResult;\n    } else {\n      const result = await this.authService.createAccount({\n        device: req.$device,\n        deviceUUID: deviceUUID,\n        header: { platform: req.$platform },\n        languagesPreferences: [req.$language, req.$language]\n      });\n      return {\n        accessToken: result.credentialDocument.accessToken,\n        refreshToken: result.credentialDocument.refreshToken\n      } as TokenResponse;\n    }\n  }\n\n  @ApiBearerAuth()\n  @ApiResponse({\n    status: 201,\n    type: TokenResponse\n  })\n  @UseInterceptors(CredentialInterceptor)\n  @Post('register')\n  async register(\n    @Req() req: CredentialRequest,\n    @Body() body: RegisterByEmailDto\n  ) {\n    if (body.channel === 'email') {\n      //check if this account already sign up\n      const currentAccount = await this.authService.getAccountFromCredential(\n        req.$credential\n      );\n      if (\n        currentAccount &&\n        currentAccount.email &&\n        currentAccount.email === body.payload.email\n      )\n        throw new CastcleException(\n          CastcleStatus.EMAIL_OR_PHONE_IS_EXIST,\n          req.$language\n        );\n      //check if account already activate\n      //check if email exist and not the same\n      if (await this.authService.getAccountFromEmail(body.payload.email))\n        throw new CastcleException(\n          CastcleStatus.EMAIL_OR_PHONE_IS_EXIST,\n          req.$language\n        );\n      if (!this.authService.validateEmail(body.payload.email))\n        throw new CastcleException(CastcleStatus.INVALID_EMAIL, req.$language);\n      const accountActivation = await this.authService.signupByEmail(\n        currentAccount,\n        {\n          displayId: body.payload.castcleId,\n          displayName: body.payload.displayName,\n          email: body.payload.email,\n          password: body.payload.password\n        }\n      );\n      //check if display id exist\n      //send an email\n      console.log('send email with token => ', accountActivation.verifyToken);\n      await this.appService.sendRegistrationEmail(\n        Host.getHostname(req),\n        body.payload.email,\n        accountActivation.verifyToken\n      );\n      return {\n        accessToken: req.$credential.accessToken,\n        refreshToken: req.$credential.refreshToken\n      } as TokenResponse;\n    }\n    throw new CastcleException(\n      CastcleStatus.PAYLOAD_CHANNEL_MISMATCH,\n      req.$language\n    );\n  }\n\n  @ApiResponse({\n    status: 201,\n    type: RefreshTokenResponse\n  })\n  @ApiResponse({\n    status: 400,\n    description:\n      'will show if some of header is missing or invalid refresh token'\n  })\n  @ApiBearerAuth()\n  @UseInterceptors(TokenInterceptor)\n  @Post('refreshToken')\n  async refreshToken(@Req() req: TokenRequest) {\n    /*\n     * TODO: !!!\n     * should embed  account and user for better performance\n     */\n    const credential = await this.authService.getCredentialFromRefreshToken(\n      req.$token\n    );\n    if (credential && credential.isRefreshTokenValid()) {\n      const account = await this.authService.getAccountFromCredential(\n        credential\n      );\n      const newAccessToken = await credential.renewAccessToken({\n        id: account._id,\n        role: account.isGuest ? 'guest' : 'member',\n        preferredLanguage: account.preferences.langagues\n      });\n      return {\n        accessToken: newAccessToken\n      };\n    }\n    throw new CastcleException(\n      CastcleStatus.INVALID_REFRESH_TOKEN,\n      req.$language\n    );\n  }\n\n  @ApiBearerAuth()\n  @ApiResponse({\n    status: 204\n  })\n  @ApiResponse({\n    status: 403,\n    description: 'will reject if token is invalid'\n  })\n  @Post('verificationEmail')\n  @HttpCode(204)\n  @UseInterceptors(TokenInterceptor)\n  async verificationEmail(@Req() req: TokenRequest) {\n    const accountActivation =\n      await this.authService.getAccountActivationFromVerifyToken(req.$token);\n    if (accountActivation && accountActivation.isVerifyTokenValid()) {\n      //verify email\n      const account = await this.authService.verifyAccount(accountActivation);\n      if (!account)\n        throw new CastcleException(\n          CastcleStatus.INVALID_REFRESH_TOKEN,\n          req.$language\n        );\n      return '';\n    }\n    throw new CastcleException(\n      CastcleStatus.INVALID_REFRESH_TOKEN,\n      req.$language\n    );\n  }\n\n  @ApiBearerAuth()\n  @ApiResponse({\n    status: 204\n  })\n  @ApiResponse({\n    status: 403,\n    description: 'will reject if token is invalid'\n  })\n  @Post('requestLinkVerify')\n  @HttpCode(204)\n  @UseInterceptors(CredentialInterceptor)\n  async requestLinkVerify(@Req() req: CredentialRequest) {\n    const accountActivation =\n      await this.authService.getAccountActivationFromCredential(\n        req.$credential\n      );\n    if (!accountActivation)\n      throw new CastcleException(\n        CastcleStatus.INVALID_REFRESH_TOKEN,\n        req.$language\n      );\n    const newAccountActivation = await this.authService.revokeAccountActivation(\n      accountActivation\n    );\n    if (!accountActivation)\n      throw new CastcleException(\n        CastcleStatus.INVALID_REFRESH_TOKEN,\n        req.$language\n      );\n    const account = await this.authService.getAccountFromCredential(\n      req.$credential\n    );\n    if (!(account && account.email))\n      throw new CastcleException(CastcleStatus.INVALID_EMAIL, req.$language);\n    this.appService.sendRegistrationEmail(\n      Host.getHostname(req),\n      account.email,\n      newAccountActivation.verifyToken\n    );\n    return '';\n  }\n\n  @ApiOkResponse({\n    type: CheckingResponse\n  })\n  @Post('checkCastcleIdExists')\n  @HttpCode(200)\n  async checkCastcleIdExists(@Body() body: CheckIdExistDto) {\n    const user = await this.authService.getUserFromCastcleId(body.castcleId);\n    return {\n      message: 'success message',\n      payload: {\n        exist: user ? true : false // true=มีในระบบ, false=ไม่มีในระบบ\n      }\n    } as CheckingResponse;\n  }\n\n  // PLAN : !!!\n  /* @Post('requestOTP')\n  requestOTP() {\n    return {\n      refCode: 'xxxxxxxx', // 8 หลัก\n      objective: 'mergeAccount',\n      expiresTime: '2021–06–16T11:22:33Z' // 5 นาทีจาก create\n    };\n  }\n\n  @Post('verificationOTP')\n  @HttpCode(204)\n  verificationOTP() {\n    return '';\n  }\n\n  @Post('forgotPasswordRequestOTP')\n  forgotPasswordRequestOTP() {\n    return {\n      refCode: 'xxxxxxxx', // 8 หลัก\n      expiresTime: '2021–06–16T11:22:33Z' // 5 นาทีจาก create\n    };\n  }*/\n\n  @Get()\n  getData() {\n    const dt = new CommonDate();\n    const birthDay = dt.getDateFormat(\n      dt.getDateFromString('1981-11-10', 'YYYY-MM-DD'),\n      'DD-MM-YY'\n    );\n    this.logger.log('Root');\n    return this.appService.getData().message + birthDay;\n  }\n\n  @Version('beta')\n  @Get()\n  getDataBeta() {\n    return 'hello';\n  }\n\n  /*\n   * TODO: !!! use for test link verification only will remove in production\n   */\n  @Get('verify')\n  verify(@Req() req: Request) {\n    const verifyUrl =\n      Host.getHostname(req) + '/authentications/verificationEmail';\n    if (req.query.code) {\n      return `will call post request soonfetch(\"${verifyUrl}\", {\n        headers: {\n          Accept: \"*/*\",\n          \"Accept-Language\": \"th\",\n          Authorization: \"Bearer ${req.query.code}\"\n        },\n        method: \"POST\"\n      })`;\n    } else throw new CastcleException(CastcleStatus.REQUEST_URL_NOT_FOUND);\n  }\n\n  @ApiOkResponse({\n    type: SuggestCastcleIdReponse\n  })\n  @Post('suggestCastcleId')\n  @HttpCode(200)\n  async suggestCastcleId(\n    @Body('displayName') displayName: string,\n    @Req() req: CredentialRequest\n  ): Promise {\n    const suggestId = await this.authService.suggestCastcleId(displayName);\n    return {\n      payload: {\n        suggestCastcleId: suggestId\n      }\n    };\n  }\n\n  @ApiBody({\n    type: VerificationPasswordBody\n  })\n  @ApiResponse({\n    status: 201,\n    type: VerificationPasswordResponse\n  })\n  @UseInterceptors(CredentialInterceptor)\n  @Post('verificationPassword')\n  async verificationPassword(\n    @Body('password') password: string,\n    @Req() req: CredentialRequest\n  ): Promise {\n    //req.$credential.\n    const account = await this.authService.getAccountFromCredential(\n      req.$credential\n    );\n    if (account.verifyPassword(password)) {\n      const otp = await this.authService.generateOtp(account);\n      return {\n        refCode: otp.refCode,\n        expiresTime: otp.expireDate.toISOString()\n      };\n    } else\n      throw new CastcleException(CastcleStatus.INVALID_PASSWORD, req.$language);\n  }\n\n  @UseInterceptors(CredentialInterceptor)\n  @ApiBody({\n    type: ChangePasswordBody\n  })\n  @ApiResponse({\n    status: 204\n  })\n  @Post('changePasswordSubmit')\n  @HttpCode(204)\n  async changePasswordSubmit(\n    @Body('refCode') refCode: string,\n    @Body('newPassword') newPassword: string,\n    @Req() req: CredentialRequest\n  ) {\n    const account = await this.authService.getAccountFromCredential(\n      req.$credential\n    );\n    const otp = await this.authService.getOtpFromAccount(account, refCode);\n    if (otp && otp.isValid()) {\n      //change password\n      const result = await this.authService.changePassword(\n        account,\n        otp,\n        newPassword\n      );\n      return '';\n    } else\n      throw new CastcleException(CastcleStatus.INVLAID_REFCODE, req.$language);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController-1.html":{"url":"controllers/AppController-1.html","title":"controller - AppController-1","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/engagements/src/app/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                    Async\n                                track\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/engagements/src/app/app.controller.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        track\n                        \n                    \n                \n            \n            \n                \n                    \n                    track(body: UxEngagementBody, req: CredentialRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: UxEngagementBody})@ApiResponse({status: 204})@UseInterceptors(CredentialInterceptor)@HttpCode(204)@Post()\n                \n            \n\n            \n                \n                    Defined in apps/engagements/src/app/app.controller.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                UxEngagementBody\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright (c) 2021, Castcle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 3 only, as\n * published by the Free Software Foundation.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n * version 3 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 3 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Castcle, 22 Phet Kasem 47/2 Alley, Bang Khae, Bangkok,\n * Thailand 10160, or visit www.castcle.com if you need additional information\n * or have any questions.\n */\n\nimport {\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  Post,\n  Req,\n  UseInterceptors\n} from '@nestjs/common';\nimport { UxEngagementBody } from '@castcle-api/database/dtos';\nimport { CastcleException, CastcleStatus } from '@castcle-api/utils/exception';\nimport {\n  CredentialInterceptor,\n  CredentialRequest\n} from '@castcle-api/utils/interceptors';\nimport * as mongoose from 'mongoose';\nimport { UxEngagementService } from '@castcle-api/database';\nimport { AppService } from './app.service';\nimport { ApiBody, ApiHeader, ApiResponse } from '@nestjs/swagger';\nimport { Configs } from '@castcle-api/environments';\n\n@ApiHeader({\n  name: Configs.RequiredHeaders.AcceptLanguague.name,\n  description: Configs.RequiredHeaders.AcceptLanguague.description,\n  example: Configs.RequiredHeaders.AcceptLanguague.example,\n  required: true\n})\n@ApiHeader({\n  name: Configs.RequiredHeaders.AcceptVersion.name,\n  description: Configs.RequiredHeaders.AcceptVersion.description,\n  example: Configs.RequiredHeaders.AcceptVersion.example,\n  required: true\n})\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private uxEngagemenetService: UxEngagementService\n  ) {}\n\n  @Get()\n  getData() {\n    return this.appService.getData();\n  }\n\n  @ApiBody({\n    type: UxEngagementBody\n  })\n  @ApiResponse({\n    status: 204\n  })\n  @UseInterceptors(CredentialInterceptor)\n  @HttpCode(204)\n  @Post()\n  async track(@Body() body: UxEngagementBody, @Req() req: CredentialRequest) {\n    //check if they have the same id\n    const accountId = mongoose.Types.ObjectId(body.accountId);\n    if (accountId !== req.$credential.account._id)\n      throw new CastcleException(CastcleStatus.FORBIDDEN_REQUEST);\n    const result = this.uxEngagemenetService.track(body);\n    if (result) return '';\n    else throw new CastcleException(CastcleStatus.FORBIDDEN_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController-2.html":{"url":"controllers/AppController-2.html","title":"controller - AppController-2","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backgrounds/src/app/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/backgrounds/src/app/app.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright (c) 2021, Castcle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 3 only, as\n * published by the Free Software Foundation.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n * version 3 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 3 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Castcle, 22 Phet Kasem 47/2 Alley, Bang Khae, Bangkok,\n * Thailand 10160, or visit www.castcle.com if you need additional information\n * or have any questions.\n */\n\nimport { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getData() {\n    return this.appService.getData();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController-3.html":{"url":"controllers/AppController-3.html","title":"controller - AppController-3","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/bases/src/app/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/bases/src/app/app.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright (c) 2021, Castcle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 3 only, as\n * published by the Free Software Foundation.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n * version 3 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 3 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Castcle, 22 Phet Kasem 47/2 Alley, Bang Khae, Bangkok,\n * Thailand 10160, or visit www.castcle.com if you need additional information\n * or have any questions.\n */\n\nimport { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { AuthenticationService, UserService } from '@castcle-api/database';\nimport { CastLogger, CastLoggerOptions } from '@castcle-api/logger';\n\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private authService: AuthenticationService,\n    private userService: UserService\n  ) {}\n  private readonly logger = new CastLogger(\n    AppController.name,\n    CastLoggerOptions\n  );\n\n  @Get()\n  getData() {\n    this.logger.log('Root');\n    return this.appService.getData();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController-4.html":{"url":"controllers/AppController-4.html","title":"controller - AppController-4","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/metadata/src/app/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/metadata/src/app/app.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright (c) 2021, Castcle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 3 only, as\n * published by the Free Software Foundation.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n * version 3 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 3 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Castcle, 22 Phet Kasem 47/2 Alley, Bang Khae, Bangkok,\n * Thailand 10160, or visit www.castcle.com if you need additional information\n * or have any questions.\n */\n\nimport { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { CastLogger, CastLoggerOptions } from '@castcle-api/logger';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n  private readonly logger = new CastLogger(\n    AppController.name,\n    CastLoggerOptions\n  );\n\n  @Get()\n  getData() {\n    this.logger.log('Root');\n    return this.appService.getData();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController-5.html":{"url":"controllers/AppController-5.html","title":"controller - AppController-5","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/users/src/app/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteMyData\n                            \n                            \n                                    Async\n                                follow\n                            \n                            \n                                getData\n                            \n                            \n                                    Async\n                                getMyContents\n                            \n                            \n                                    Async\n                                getMyData\n                            \n                            \n                                    Async\n                                getUserById\n                            \n                            \n                                    Async\n                                getUserContents\n                            \n                            \n                                    Async\n                                getUserFollower\n                            \n                            \n                                    Async\n                                getUserFollowing\n                            \n                            \n                                    Async\n                                unfollow\n                            \n                            \n                                    Async\n                                updateMyData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteMyData\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMyData(req: CredentialRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 204})@ApiBearerAuth()@UseInterceptors(CredentialInterceptor)@Delete('me')\n                \n            \n\n            \n                \n                    Defined in apps/users/src/app/app.controller.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        follow\n                        \n                    \n                \n            \n            \n                \n                    \n                    follow(id: string, req: CredentialRequest, authorId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 204})@ApiBearerAuth()@UseInterceptors(CredentialInterceptor)@Put(':id/follow')\n                \n            \n\n            \n                \n                    Defined in apps/users/src/app/app.controller.ts:297\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    authorId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/users/src/app/app.controller.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMyContents\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMyContents(req: CredentialRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({type: ContentsResponse})@ApiBearerAuth()@UseInterceptors(ContentsInterceptor)@Get('me/contents')\n                \n            \n\n            \n                \n                    Defined in apps/users/src/app/app.controller.ts:217\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMyData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMyData(req: CredentialRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({type: UserResponseDto})@ApiBearerAuth()@UseInterceptors(ImageInterceptor)@Get('me')\n                \n            \n\n            \n                \n                    Defined in apps/users/src/app/app.controller.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserById(req: CredentialRequest, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({type: UserResponseDto})@ApiBearerAuth()@UseInterceptors(ImageInterceptor)@Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/users/src/app/app.controller.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserContents\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserContents(id: string, req: CredentialRequest, sortByOption: literal type, pageOption: number, limitOption: number, contentTypeOption: ContentType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({type: ContentsResponse})@ApiQuery({name: 'type', enum: ContentType})@ApiBearerAuth()@ApiQuery({name: 'sortBy', enum: SortByEnum, required: false})@ApiQuery({name: 'page', type: Number, required: false})@ApiQuery({name: 'limit', type: Number, required: false})@ApiQuery({name: 'type', enum: ContentType, required: false})@UseInterceptors(ContentsInterceptor)@Get(':id/contents')\n                \n            \n\n            \n                \n                    Defined in apps/users/src/app/app.controller.ts:262\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    sortByOption\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.sortBy\n                                    \n\n                                \n                                \n                                    pageOption\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.page\n                                    \n\n                                \n                                \n                                    limitOption\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.limit\n                                    \n\n                                \n                                \n                                    contentTypeOption\n                                    \n                                                ContentType\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.type\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserFollower\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserFollower(id: string, req: CredentialRequest, sortByOption: literal type, pageOption: number, limitOption: number, userTypeOption?: UserType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({type: FollowResponse})@ApiBearerAuth()@ApiQuery({name: 'sortBy', enum: SortByEnum, required: false})@ApiQuery({name: 'page', type: Number, required: false})@ApiQuery({name: 'limit', type: Number, required: false})@ApiQuery({name: 'type', enum: UserType, required: false})@UseInterceptors(CredentialInterceptor)@Get(':id/follower')\n                \n            \n\n            \n                \n                    Defined in apps/users/src/app/app.controller.ts:361\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    sortByOption\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.sortBy\n                                    \n\n                                \n                                \n                                    pageOption\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.page\n                                    \n\n                                \n                                \n                                    limitOption\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.limit\n                                    \n\n                                \n                                \n                                    userTypeOption\n                                    \n                                                UserType\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserFollowing\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserFollowing(id: string, req: CredentialRequest, sortByOption: literal type, pageOption: number, limitOption: number, userTypeOption?: UserType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({type: FollowResponse})@ApiBearerAuth()@ApiQuery({name: 'sortBy', enum: SortByEnum, required: false})@ApiQuery({name: 'page', type: Number, required: false})@ApiQuery({name: 'limit', type: Number, required: false})@ApiQuery({name: 'type', enum: UserType, required: false})@UseInterceptors(FollowInterceptor)@Get(':id/following')\n                \n            \n\n            \n                \n                    Defined in apps/users/src/app/app.controller.ts:416\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    sortByOption\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.sortBy\n                                    \n\n                                \n                                \n                                    pageOption\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.page\n                                    \n\n                                \n                                \n                                    limitOption\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.limit\n                                    \n\n                                \n                                \n                                    userTypeOption\n                                    \n                                                UserType\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        unfollow\n                        \n                    \n                \n            \n            \n                \n                    \n                    unfollow(id: string, req: CredentialRequest, authorId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 204})@ApiBearerAuth()@UseInterceptors(CredentialInterceptor)@Put(':id/unfollow')\n                \n            \n\n            \n                \n                    Defined in apps/users/src/app/app.controller.ts:319\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    authorId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateMyData\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMyData(req: CredentialRequest, body: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: UpdateUserDto})@ApiOkResponse({type: UserResponseDto})@ApiBearerAuth()@UseInterceptors(ImageInterceptor)@Put('me')\n                \n            \n\n            \n                \n                    Defined in apps/users/src/app/app.controller.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright (c) 2021, Castcle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 3 only, as\n * published by the Free Software Foundation.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n * version 3 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 3 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Castcle, 22 Phet Kasem 47/2 Alley, Bang Khae, Bangkok,\n * Thailand 10160, or visit www.castcle.com if you need additional information\n * or have any questions.\n */\n\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Put,\n  Req,\n  UseInterceptors\n} from '@nestjs/common';\nimport { AppService } from './app.service';\nimport {\n  UserService,\n  ContentService,\n  AuthenticationService\n} from '@castcle-api/database';\nimport {\n  ImageInterceptor,\n  FollowInterceptor\n} from './interceptors/image.interceptor';\nimport {\n  CredentialInterceptor,\n  CredentialRequest,\n  ContentsInterceptor\n} from '@castcle-api/utils/interceptors';\nimport { CastLogger, CastLoggerOptions } from '@castcle-api/logger';\nimport { CastcleException, CastcleStatus } from '@castcle-api/utils/exception';\nimport {\n  ApiBearerAuth,\n  ApiBody,\n  ApiHeader,\n  ApiOkResponse,\n  ApiProperty,\n  ApiQuery,\n  ApiResponse\n} from '@nestjs/swagger';\nimport {\n  ContentPayloadDto,\n  ContentType,\n  DEFAULT_CONTENT_QUERY_OPTIONS,\n  FollowResponse,\n  UpdateUserDto,\n  UserResponseDto\n} from '@castcle-api/database/dtos';\nimport {\n  SortByPipe,\n  PagePipe,\n  LimitPipe,\n  ContentTypePipe,\n  SortByEnum\n} from '@castcle-api/utils/pipes';\nimport { UserDocument, UserType } from '@castcle-api/database/schemas';\nimport { ContentsResponse } from '@castcle-api/database/dtos';\nimport { Query } from '@nestjs/common';\nimport { Configs } from '@castcle-api/environments';\nlet logger: CastLogger;\n\n@ApiHeader({\n  name: Configs.RequiredHeaders.AcceptLanguague.name,\n  description: Configs.RequiredHeaders.AcceptLanguague.description,\n  example: Configs.RequiredHeaders.AcceptLanguague.example,\n  required: true\n})\n@ApiHeader({\n  name: Configs.RequiredHeaders.AcceptVersion.name,\n  description: Configs.RequiredHeaders.AcceptVersion.description,\n  example: Configs.RequiredHeaders.AcceptVersion.example,\n  required: true\n})\n@Controller({\n  version: '1.0'\n})\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private userService: UserService,\n    private contentService: ContentService,\n    private authService: AuthenticationService\n  ) {\n    logger = new CastLogger(AppController.name, CastLoggerOptions);\n  }\n\n  /**\n   *\n   * @param {string} idOrCastcleId\n   * @param {CredentialRequest} req\n   * @returns {UserDocument} from userService.getUserFromId() or authService.getUserFromCastcleId\n   * @throws {CastcleException} with CastcleStatus.REQUEST_URL_NOT_FOUND\n   */\n  _getUserFromIdOrCastcleId = async (\n    idOrCastcleId: string,\n    req: CredentialRequest\n  ) => {\n    const user = await this.userService.getUserFromId(idOrCastcleId);\n    if (user) return user;\n    const userFromCastcleId = await this.authService.getUserFromCastcleId(\n      idOrCastcleId\n    );\n    if (userFromCastcleId) return userFromCastcleId;\n    else\n      throw new CastcleException(\n        CastcleStatus.REQUEST_URL_NOT_FOUND,\n        req.$language\n      );\n  };\n\n  @Get()\n  getData() {\n    logger.log('Root');\n    return this.appService.getData();\n  }\n\n  @ApiOkResponse({\n    type: UserResponseDto\n  })\n  @ApiBearerAuth()\n  @UseInterceptors(ImageInterceptor)\n  @Get('me')\n  async getMyData(@Req() req: CredentialRequest) {\n    //UserService\n    const user = await this.userService.getUserFromCredential(req.$credential);\n    if (user) return await user.toUserResponse();\n    else\n      throw new CastcleException(\n        CastcleStatus.INVALID_ACCESS_TOKEN,\n        req.$language\n      );\n  }\n\n  @ApiOkResponse({\n    type: UserResponseDto\n  })\n  @ApiBearerAuth()\n  @UseInterceptors(ImageInterceptor)\n  @Get(':id')\n  async getUserById(@Req() req: CredentialRequest, @Param('id') id: string) {\n    //UserService\n    const user = await this._getUserFromIdOrCastcleId(id, req);\n    return await user.toUserResponse();\n  }\n\n  @ApiBody({\n    type: UpdateUserDto\n  })\n  @ApiOkResponse({\n    type: UserResponseDto\n  })\n  @ApiBearerAuth()\n  @UseInterceptors(ImageInterceptor)\n  @Put('me')\n  async updateMyData(\n    @Req() req: CredentialRequest,\n    @Body() body: UpdateUserDto\n  ) {\n    const user = await this.userService.getUserFromCredential(req.$credential);\n    if (user) {\n      const afterUpdateUser = await this.userService.updateUser(user, body);\n      const response = await afterUpdateUser.toUserResponse();\n      return response;\n    } else\n      throw new CastcleException(\n        CastcleStatus.INVALID_ACCESS_TOKEN,\n        req.$language\n      );\n  }\n\n  @ApiResponse({\n    status: 204\n  })\n  @ApiBearerAuth()\n  @UseInterceptors(CredentialInterceptor)\n  @Delete('me')\n  async deleteMyData(@Req() req: CredentialRequest) {\n    const user = await this.userService.getUserFromCredential(req.$credential);\n    if (user) {\n      //await user.delete();\n      await this.userService.deactive(user);\n      return '';\n    } else {\n      throw new CastcleException(\n        CastcleStatus.INVALID_ACCESS_TOKEN,\n        req.$language\n      );\n    }\n  }\n\n  @ApiOkResponse({\n    type: ContentsResponse\n  })\n  @ApiBearerAuth()\n  @UseInterceptors(ContentsInterceptor)\n  @Get('me/contents')\n  async getMyContents(\n    @Req() req: CredentialRequest\n  ): Promise {\n    //UserService\n    const user = await this.userService.getUserFromCredential(req.$credential);\n    if (user) {\n      const contents = await this.contentService.getContentsFromUser(user);\n      return {\n        payload: contents.items.map((item) => item.toContentPayload()),\n        pagination: contents.pagination\n      } as ContentsResponse;\n    } else\n      throw new CastcleException(\n        CastcleStatus.INVALID_ACCESS_TOKEN,\n        req.$language\n      );\n  }\n\n  @ApiOkResponse({\n    type: ContentsResponse\n  })\n  @ApiQuery({ name: 'type', enum: ContentType })\n  @ApiBearerAuth()\n  @ApiQuery({\n    name: 'sortBy',\n    enum: SortByEnum,\n    required: false\n  })\n  @ApiQuery({\n    name: 'page',\n    type: Number,\n    required: false\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: Number,\n    required: false\n  })\n  @ApiQuery({\n    name: 'type',\n    enum: ContentType,\n    required: false\n  })\n  @UseInterceptors(ContentsInterceptor)\n  @Get(':id/contents')\n  async getUserContents(\n    @Param('id') id: string,\n    @Req() req: CredentialRequest,\n    @Query('sortBy', SortByPipe)\n    sortByOption: {\n      field: string;\n      type: 'desc' | 'asc';\n    } = DEFAULT_CONTENT_QUERY_OPTIONS.sortBy,\n    @Query('page', PagePipe)\n    pageOption: number = DEFAULT_CONTENT_QUERY_OPTIONS.page,\n    @Query('limit', LimitPipe)\n    limitOption: number = DEFAULT_CONTENT_QUERY_OPTIONS.limit,\n    @Query('type', ContentTypePipe)\n    contentTypeOption: ContentType = DEFAULT_CONTENT_QUERY_OPTIONS.type\n  ): Promise {\n    //UserService\n    const user = await this._getUserFromIdOrCastcleId(id, req);\n    const contents = await this.contentService.getContentsFromUser(user, {\n      limit: limitOption,\n      page: pageOption,\n      sortBy: sortByOption,\n      type: contentTypeOption\n    });\n    return {\n      payload: contents.items.map((item) => item.toContentPayload()),\n      pagination: contents.pagination\n    } as ContentsResponse;\n  }\n\n  @ApiResponse({\n    status: 204\n  })\n  @ApiBearerAuth()\n  @UseInterceptors(CredentialInterceptor)\n  @Put(':id/follow')\n  async follow(\n    @Param('id') id: string,\n    @Req() req: CredentialRequest,\n    @Body('authorId') authorId: string\n  ) {\n    const followedUser = await this._getUserFromIdOrCastcleId(id, req);\n    const currentUser = await this._getUserFromIdOrCastcleId(authorId, req);\n    if (!currentUser.ownerAccount === req.$credential.account._id)\n      throw new CastcleException(\n        CastcleStatus.FORBIDDEN_REQUEST,\n        req.$language\n      );\n    await currentUser.follow(followedUser);\n    return '';\n  }\n\n  @ApiResponse({\n    status: 204\n  })\n  @ApiBearerAuth()\n  @UseInterceptors(CredentialInterceptor)\n  @Put(':id/unfollow')\n  async unfollow(\n    @Param('id') id: string,\n    @Req() req: CredentialRequest,\n    @Body('authorId') authorId: string\n  ) {\n    const followedUser = await this._getUserFromIdOrCastcleId(id, req);\n    const currentUser = await this._getUserFromIdOrCastcleId(authorId, req);\n    if (!currentUser.ownerAccount === req.$credential.account._id)\n      throw new CastcleException(\n        CastcleStatus.FORBIDDEN_REQUEST,\n        req.$language\n      );\n    await currentUser.unfollow(followedUser);\n    return '';\n  }\n\n  @ApiOkResponse({\n    type: FollowResponse\n  })\n  @ApiBearerAuth()\n  @ApiQuery({\n    name: 'sortBy',\n    enum: SortByEnum,\n    required: false\n  })\n  @ApiQuery({\n    name: 'page',\n    type: Number,\n    required: false\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: Number,\n    required: false\n  })\n  @ApiQuery({\n    name: 'type',\n    enum: UserType,\n    required: false\n  })\n  @UseInterceptors(CredentialInterceptor)\n  @Get(':id/follower')\n  async getUserFollower(\n    @Param('id') id: string,\n    @Req() req: CredentialRequest,\n    @Query('sortBy', SortByPipe)\n    sortByOption: {\n      field: string;\n      type: 'desc' | 'asc';\n    } = DEFAULT_CONTENT_QUERY_OPTIONS.sortBy,\n    @Query('page', PagePipe)\n    pageOption: number = DEFAULT_CONTENT_QUERY_OPTIONS.page,\n    @Query('limit', LimitPipe)\n    limitOption: number = DEFAULT_CONTENT_QUERY_OPTIONS.limit,\n    @Query('type')\n    userTypeOption?: UserType\n  ): Promise {\n    //UserService\n    const user = await this._getUserFromIdOrCastcleId(id, req);\n    const followers = await this.userService.getFollower(user, {\n      limit: limitOption,\n      page: pageOption,\n      sortBy: sortByOption,\n      type: userTypeOption\n    });\n    return {\n      payload: followers.items,\n      pagination: followers.pagination\n    } as FollowResponse;\n  }\n\n  @ApiOkResponse({\n    type: FollowResponse\n  })\n  @ApiBearerAuth()\n  @ApiQuery({\n    name: 'sortBy',\n    enum: SortByEnum,\n    required: false\n  })\n  @ApiQuery({\n    name: 'page',\n    type: Number,\n    required: false\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: Number,\n    required: false\n  })\n  @ApiQuery({\n    name: 'type',\n    enum: UserType,\n    required: false\n  })\n  @UseInterceptors(FollowInterceptor)\n  @Get(':id/following')\n  async getUserFollowing(\n    @Param('id') id: string,\n    @Req() req: CredentialRequest,\n    @Query('sortBy', SortByPipe)\n    sortByOption: {\n      field: string;\n      type: 'desc' | 'asc';\n    } = DEFAULT_CONTENT_QUERY_OPTIONS.sortBy,\n    @Query('page', PagePipe)\n    pageOption: number = DEFAULT_CONTENT_QUERY_OPTIONS.page,\n    @Query('limit', LimitPipe)\n    limitOption: number = DEFAULT_CONTENT_QUERY_OPTIONS.limit,\n    @Query('type')\n    userTypeOption?: UserType\n  ): Promise {\n    //UserService\n    const user = await this._getUserFromIdOrCastcleId(id, req);\n    const followers = await this.userService.getFollowing(user, {\n      limit: limitOption,\n      page: pageOption,\n      sortBy: sortByOption,\n      type: userTypeOption\n    });\n    return {\n      payload: followers.items,\n      pagination: followers.pagination\n    } as FollowResponse;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController-6.html":{"url":"controllers/AppController-6.html","title":"controller - AppController-6","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/users/src/app/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteMyData\n                            \n                            \n                                    Async\n                                follow\n                            \n                            \n                                getData\n                            \n                            \n                                    Async\n                                getMyContents\n                            \n                            \n                                    Async\n                                getMyData\n                            \n                            \n                                    Async\n                                getUserById\n                            \n                            \n                                    Async\n                                getUserContents\n                            \n                            \n                                    Async\n                                getUserFollower\n                            \n                            \n                                    Async\n                                getUserFollowing\n                            \n                            \n                                    Async\n                                unfollow\n                            \n                            \n                                    Async\n                                updateMyData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteMyData\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMyData(req: CredentialRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 204})@ApiBearerAuth()@UseInterceptors(CredentialInterceptor)@Delete('me')\n                \n            \n\n            \n                \n                    Defined in apps/users/src/app/app.controller.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        follow\n                        \n                    \n                \n            \n            \n                \n                    \n                    follow(id: string, req: CredentialRequest, authorId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 204})@ApiBearerAuth()@UseInterceptors(CredentialInterceptor)@Put(':id/follow')\n                \n            \n\n            \n                \n                    Defined in apps/users/src/app/app.controller.ts:297\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    authorId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/users/src/app/app.controller.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMyContents\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMyContents(req: CredentialRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({type: ContentsResponse})@ApiBearerAuth()@UseInterceptors(ContentsInterceptor)@Get('me/contents')\n                \n            \n\n            \n                \n                    Defined in apps/users/src/app/app.controller.ts:217\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMyData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMyData(req: CredentialRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({type: UserResponseDto})@ApiBearerAuth()@UseInterceptors(ImageInterceptor)@Get('me')\n                \n            \n\n            \n                \n                    Defined in apps/users/src/app/app.controller.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserById(req: CredentialRequest, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({type: UserResponseDto})@ApiBearerAuth()@UseInterceptors(ImageInterceptor)@Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/users/src/app/app.controller.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserContents\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserContents(id: string, req: CredentialRequest, sortByOption: literal type, pageOption: number, limitOption: number, contentTypeOption: ContentType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({type: ContentsResponse})@ApiQuery({name: 'type', enum: ContentType})@ApiBearerAuth()@ApiQuery({name: 'sortBy', enum: SortByEnum, required: false})@ApiQuery({name: 'page', type: Number, required: false})@ApiQuery({name: 'limit', type: Number, required: false})@ApiQuery({name: 'type', enum: ContentType, required: false})@UseInterceptors(ContentsInterceptor)@Get(':id/contents')\n                \n            \n\n            \n                \n                    Defined in apps/users/src/app/app.controller.ts:262\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    sortByOption\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.sortBy\n                                    \n\n                                \n                                \n                                    pageOption\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.page\n                                    \n\n                                \n                                \n                                    limitOption\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.limit\n                                    \n\n                                \n                                \n                                    contentTypeOption\n                                    \n                                                ContentType\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.type\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserFollower\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserFollower(id: string, req: CredentialRequest, sortByOption: literal type, pageOption: number, limitOption: number, userTypeOption?: UserType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({type: FollowResponse})@ApiBearerAuth()@ApiQuery({name: 'sortBy', enum: SortByEnum, required: false})@ApiQuery({name: 'page', type: Number, required: false})@ApiQuery({name: 'limit', type: Number, required: false})@ApiQuery({name: 'type', enum: UserType, required: false})@UseInterceptors(CredentialInterceptor)@Get(':id/follower')\n                \n            \n\n            \n                \n                    Defined in apps/users/src/app/app.controller.ts:361\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    sortByOption\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.sortBy\n                                    \n\n                                \n                                \n                                    pageOption\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.page\n                                    \n\n                                \n                                \n                                    limitOption\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.limit\n                                    \n\n                                \n                                \n                                    userTypeOption\n                                    \n                                                UserType\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserFollowing\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserFollowing(id: string, req: CredentialRequest, sortByOption: literal type, pageOption: number, limitOption: number, userTypeOption?: UserType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({type: FollowResponse})@ApiBearerAuth()@ApiQuery({name: 'sortBy', enum: SortByEnum, required: false})@ApiQuery({name: 'page', type: Number, required: false})@ApiQuery({name: 'limit', type: Number, required: false})@ApiQuery({name: 'type', enum: UserType, required: false})@UseInterceptors(FollowInterceptor)@Get(':id/following')\n                \n            \n\n            \n                \n                    Defined in apps/users/src/app/app.controller.ts:416\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    sortByOption\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.sortBy\n                                    \n\n                                \n                                \n                                    pageOption\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.page\n                                    \n\n                                \n                                \n                                    limitOption\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.limit\n                                    \n\n                                \n                                \n                                    userTypeOption\n                                    \n                                                UserType\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        unfollow\n                        \n                    \n                \n            \n            \n                \n                    \n                    unfollow(id: string, req: CredentialRequest, authorId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 204})@ApiBearerAuth()@UseInterceptors(CredentialInterceptor)@Put(':id/unfollow')\n                \n            \n\n            \n                \n                    Defined in apps/users/src/app/app.controller.ts:319\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    authorId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateMyData\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMyData(req: CredentialRequest, body: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: UpdateUserDto})@ApiOkResponse({type: UserResponseDto})@ApiBearerAuth()@UseInterceptors(ImageInterceptor)@Put('me')\n                \n            \n\n            \n                \n                    Defined in apps/users/src/app/app.controller.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright (c) 2021, Castcle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 3 only, as\n * published by the Free Software Foundation.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n * version 3 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 3 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Castcle, 22 Phet Kasem 47/2 Alley, Bang Khae, Bangkok,\n * Thailand 10160, or visit www.castcle.com if you need additional information\n * or have any questions.\n */\n\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Put,\n  Req,\n  UseInterceptors\n} from '@nestjs/common';\nimport { AppService } from './app.service';\nimport {\n  UserService,\n  ContentService,\n  AuthenticationService\n} from '@castcle-api/database';\nimport {\n  ImageInterceptor,\n  FollowInterceptor\n} from './interceptors/image.interceptor';\nimport {\n  CredentialInterceptor,\n  CredentialRequest,\n  ContentsInterceptor\n} from '@castcle-api/utils/interceptors';\nimport { CastLogger, CastLoggerOptions } from '@castcle-api/logger';\nimport { CastcleException, CastcleStatus } from '@castcle-api/utils/exception';\nimport {\n  ApiBearerAuth,\n  ApiBody,\n  ApiHeader,\n  ApiOkResponse,\n  ApiProperty,\n  ApiQuery,\n  ApiResponse\n} from '@nestjs/swagger';\nimport {\n  ContentPayloadDto,\n  ContentType,\n  DEFAULT_CONTENT_QUERY_OPTIONS,\n  FollowResponse,\n  UpdateUserDto,\n  UserResponseDto\n} from '@castcle-api/database/dtos';\nimport {\n  SortByPipe,\n  PagePipe,\n  LimitPipe,\n  ContentTypePipe,\n  SortByEnum\n} from '@castcle-api/utils/pipes';\nimport { UserDocument, UserType } from '@castcle-api/database/schemas';\nimport { ContentsResponse } from '@castcle-api/database/dtos';\nimport { Query } from '@nestjs/common';\nimport { Configs } from '@castcle-api/environments';\nlet logger: CastLogger;\n\n@ApiHeader({\n  name: Configs.RequiredHeaders.AcceptLanguague.name,\n  description: Configs.RequiredHeaders.AcceptLanguague.description,\n  example: Configs.RequiredHeaders.AcceptLanguague.example,\n  required: true\n})\n@ApiHeader({\n  name: Configs.RequiredHeaders.AcceptVersion.name,\n  description: Configs.RequiredHeaders.AcceptVersion.description,\n  example: Configs.RequiredHeaders.AcceptVersion.example,\n  required: true\n})\n@Controller({\n  version: '1.0'\n})\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private userService: UserService,\n    private contentService: ContentService,\n    private authService: AuthenticationService\n  ) {\n    logger = new CastLogger(AppController.name, CastLoggerOptions);\n  }\n\n  /**\n   *\n   * @param {string} idOrCastcleId\n   * @param {CredentialRequest} req\n   * @returns {UserDocument} from userService.getUserFromId() or authService.getUserFromCastcleId\n   * @throws {CastcleException} with CastcleStatus.REQUEST_URL_NOT_FOUND\n   */\n  _getUserFromIdOrCastcleId = async (\n    idOrCastcleId: string,\n    req: CredentialRequest\n  ) => {\n    const user = await this.userService.getUserFromId(idOrCastcleId);\n    if (user) return user;\n    const userFromCastcleId = await this.authService.getUserFromCastcleId(\n      idOrCastcleId\n    );\n    if (userFromCastcleId) return userFromCastcleId;\n    else\n      throw new CastcleException(\n        CastcleStatus.REQUEST_URL_NOT_FOUND,\n        req.$language\n      );\n  };\n\n  @Get()\n  getData() {\n    logger.log('Root');\n    return this.appService.getData();\n  }\n\n  @ApiOkResponse({\n    type: UserResponseDto\n  })\n  @ApiBearerAuth()\n  @UseInterceptors(ImageInterceptor)\n  @Get('me')\n  async getMyData(@Req() req: CredentialRequest) {\n    //UserService\n    const user = await this.userService.getUserFromCredential(req.$credential);\n    if (user) return await user.toUserResponse();\n    else\n      throw new CastcleException(\n        CastcleStatus.INVALID_ACCESS_TOKEN,\n        req.$language\n      );\n  }\n\n  @ApiOkResponse({\n    type: UserResponseDto\n  })\n  @ApiBearerAuth()\n  @UseInterceptors(ImageInterceptor)\n  @Get(':id')\n  async getUserById(@Req() req: CredentialRequest, @Param('id') id: string) {\n    //UserService\n    const user = await this._getUserFromIdOrCastcleId(id, req);\n    return await user.toUserResponse();\n  }\n\n  @ApiBody({\n    type: UpdateUserDto\n  })\n  @ApiOkResponse({\n    type: UserResponseDto\n  })\n  @ApiBearerAuth()\n  @UseInterceptors(ImageInterceptor)\n  @Put('me')\n  async updateMyData(\n    @Req() req: CredentialRequest,\n    @Body() body: UpdateUserDto\n  ) {\n    const user = await this.userService.getUserFromCredential(req.$credential);\n    if (user) {\n      const afterUpdateUser = await this.userService.updateUser(user, body);\n      const response = await afterUpdateUser.toUserResponse();\n      return response;\n    } else\n      throw new CastcleException(\n        CastcleStatus.INVALID_ACCESS_TOKEN,\n        req.$language\n      );\n  }\n\n  @ApiResponse({\n    status: 204\n  })\n  @ApiBearerAuth()\n  @UseInterceptors(CredentialInterceptor)\n  @Delete('me')\n  async deleteMyData(@Req() req: CredentialRequest) {\n    const user = await this.userService.getUserFromCredential(req.$credential);\n    if (user) {\n      //await user.delete();\n      await this.userService.deactive(user);\n      return '';\n    } else {\n      throw new CastcleException(\n        CastcleStatus.INVALID_ACCESS_TOKEN,\n        req.$language\n      );\n    }\n  }\n\n  @ApiOkResponse({\n    type: ContentsResponse\n  })\n  @ApiBearerAuth()\n  @UseInterceptors(ContentsInterceptor)\n  @Get('me/contents')\n  async getMyContents(\n    @Req() req: CredentialRequest\n  ): Promise {\n    //UserService\n    const user = await this.userService.getUserFromCredential(req.$credential);\n    if (user) {\n      const contents = await this.contentService.getContentsFromUser(user);\n      return {\n        payload: contents.items.map((item) => item.toContentPayload()),\n        pagination: contents.pagination\n      } as ContentsResponse;\n    } else\n      throw new CastcleException(\n        CastcleStatus.INVALID_ACCESS_TOKEN,\n        req.$language\n      );\n  }\n\n  @ApiOkResponse({\n    type: ContentsResponse\n  })\n  @ApiQuery({ name: 'type', enum: ContentType })\n  @ApiBearerAuth()\n  @ApiQuery({\n    name: 'sortBy',\n    enum: SortByEnum,\n    required: false\n  })\n  @ApiQuery({\n    name: 'page',\n    type: Number,\n    required: false\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: Number,\n    required: false\n  })\n  @ApiQuery({\n    name: 'type',\n    enum: ContentType,\n    required: false\n  })\n  @UseInterceptors(ContentsInterceptor)\n  @Get(':id/contents')\n  async getUserContents(\n    @Param('id') id: string,\n    @Req() req: CredentialRequest,\n    @Query('sortBy', SortByPipe)\n    sortByOption: {\n      field: string;\n      type: 'desc' | 'asc';\n    } = DEFAULT_CONTENT_QUERY_OPTIONS.sortBy,\n    @Query('page', PagePipe)\n    pageOption: number = DEFAULT_CONTENT_QUERY_OPTIONS.page,\n    @Query('limit', LimitPipe)\n    limitOption: number = DEFAULT_CONTENT_QUERY_OPTIONS.limit,\n    @Query('type', ContentTypePipe)\n    contentTypeOption: ContentType = DEFAULT_CONTENT_QUERY_OPTIONS.type\n  ): Promise {\n    //UserService\n    const user = await this._getUserFromIdOrCastcleId(id, req);\n    const contents = await this.contentService.getContentsFromUser(user, {\n      limit: limitOption,\n      page: pageOption,\n      sortBy: sortByOption,\n      type: contentTypeOption\n    });\n    return {\n      payload: contents.items.map((item) => item.toContentPayload()),\n      pagination: contents.pagination\n    } as ContentsResponse;\n  }\n\n  @ApiResponse({\n    status: 204\n  })\n  @ApiBearerAuth()\n  @UseInterceptors(CredentialInterceptor)\n  @Put(':id/follow')\n  async follow(\n    @Param('id') id: string,\n    @Req() req: CredentialRequest,\n    @Body('authorId') authorId: string\n  ) {\n    const followedUser = await this._getUserFromIdOrCastcleId(id, req);\n    const currentUser = await this._getUserFromIdOrCastcleId(authorId, req);\n    if (!currentUser.ownerAccount === req.$credential.account._id)\n      throw new CastcleException(\n        CastcleStatus.FORBIDDEN_REQUEST,\n        req.$language\n      );\n    await currentUser.follow(followedUser);\n    return '';\n  }\n\n  @ApiResponse({\n    status: 204\n  })\n  @ApiBearerAuth()\n  @UseInterceptors(CredentialInterceptor)\n  @Put(':id/unfollow')\n  async unfollow(\n    @Param('id') id: string,\n    @Req() req: CredentialRequest,\n    @Body('authorId') authorId: string\n  ) {\n    const followedUser = await this._getUserFromIdOrCastcleId(id, req);\n    const currentUser = await this._getUserFromIdOrCastcleId(authorId, req);\n    if (!currentUser.ownerAccount === req.$credential.account._id)\n      throw new CastcleException(\n        CastcleStatus.FORBIDDEN_REQUEST,\n        req.$language\n      );\n    await currentUser.unfollow(followedUser);\n    return '';\n  }\n\n  @ApiOkResponse({\n    type: FollowResponse\n  })\n  @ApiBearerAuth()\n  @ApiQuery({\n    name: 'sortBy',\n    enum: SortByEnum,\n    required: false\n  })\n  @ApiQuery({\n    name: 'page',\n    type: Number,\n    required: false\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: Number,\n    required: false\n  })\n  @ApiQuery({\n    name: 'type',\n    enum: UserType,\n    required: false\n  })\n  @UseInterceptors(CredentialInterceptor)\n  @Get(':id/follower')\n  async getUserFollower(\n    @Param('id') id: string,\n    @Req() req: CredentialRequest,\n    @Query('sortBy', SortByPipe)\n    sortByOption: {\n      field: string;\n      type: 'desc' | 'asc';\n    } = DEFAULT_CONTENT_QUERY_OPTIONS.sortBy,\n    @Query('page', PagePipe)\n    pageOption: number = DEFAULT_CONTENT_QUERY_OPTIONS.page,\n    @Query('limit', LimitPipe)\n    limitOption: number = DEFAULT_CONTENT_QUERY_OPTIONS.limit,\n    @Query('type')\n    userTypeOption?: UserType\n  ): Promise {\n    //UserService\n    const user = await this._getUserFromIdOrCastcleId(id, req);\n    const followers = await this.userService.getFollower(user, {\n      limit: limitOption,\n      page: pageOption,\n      sortBy: sortByOption,\n      type: userTypeOption\n    });\n    return {\n      payload: followers.items,\n      pagination: followers.pagination\n    } as FollowResponse;\n  }\n\n  @ApiOkResponse({\n    type: FollowResponse\n  })\n  @ApiBearerAuth()\n  @ApiQuery({\n    name: 'sortBy',\n    enum: SortByEnum,\n    required: false\n  })\n  @ApiQuery({\n    name: 'page',\n    type: Number,\n    required: false\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: Number,\n    required: false\n  })\n  @ApiQuery({\n    name: 'type',\n    enum: UserType,\n    required: false\n  })\n  @UseInterceptors(FollowInterceptor)\n  @Get(':id/following')\n  async getUserFollowing(\n    @Param('id') id: string,\n    @Req() req: CredentialRequest,\n    @Query('sortBy', SortByPipe)\n    sortByOption: {\n      field: string;\n      type: 'desc' | 'asc';\n    } = DEFAULT_CONTENT_QUERY_OPTIONS.sortBy,\n    @Query('page', PagePipe)\n    pageOption: number = DEFAULT_CONTENT_QUERY_OPTIONS.page,\n    @Query('limit', LimitPipe)\n    limitOption: number = DEFAULT_CONTENT_QUERY_OPTIONS.limit,\n    @Query('type')\n    userTypeOption?: UserType\n  ): Promise {\n    //UserService\n    const user = await this._getUserFromIdOrCastcleId(id, req);\n    const followers = await this.userService.getFollowing(user, {\n      limit: limitOption,\n      page: pageOption,\n      sortBy: sortByOption,\n      type: userTypeOption\n    });\n    return {\n      payload: followers.items,\n      pagination: followers.pagination\n    } as FollowResponse;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/authentications/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            HealthyController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright (c) 2021, Castcle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 3 only, as\n * published by the Free Software Foundation.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n * version 3 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 3 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Castcle, 22 Phet Kasem 47/2 Alley, Bang Khae, Bangkok,\n * Thailand 10160, or visit www.castcle.com if you need additional information\n * or have any questions.\n */\n\nimport { Module } from '@nestjs/common';\nimport { DatabaseModule } from '@castcle-api/database';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { HealthyController } from './controllers/healthy/healthy.controller';\n\n@Module({\n  imports: [DatabaseModule],\n  controllers: [AppController, HealthyController],\n  providers: [AppService]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/authentications/src/app/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                    Async\n                                sendRegistrationEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in apps/authentications/src/app/app.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendRegistrationEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendRegistrationEmail(hostname: string, toEmail: string, code: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/authentications/src/app/app.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hostname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toEmail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { getSignupHtml } from './configs/signupEmail';\nimport * as nodemailer from 'nodemailer';\nimport { Environment as env } from '@castcle-api/environments';\n/*\n * TODO: !!!\n */\nconst transporter = nodemailer.createTransport({\n  host: env.smtp_host ? env.smtp_host : 'http://localhost:3334',\n  port: env.smtp_port ? env.smtp_port : 465,\n  secure: true, // true for 465, false for other ports\n  auth: {\n    user: env.smtp_username ? env.smtp_username : 'username', // generated ethereal user\n    pass: env.smtp_password ? env.smtp_password : 'password' // generated ethereal password\n  }\n});\n\n@Injectable()\nexport class AppService {\n  getData(): { message: string } {\n    return { message: 'Welcome to authentications!' };\n  }\n\n  async sendRegistrationEmail(hostname: string, toEmail: string, code: string) {\n    const verifyLink = `${hostname}/authentications/verify`;\n    const info = await transporter.sendMail({\n      from: 'No Reply\" ',\n      subject: 'Welcome to Castcle',\n      to: toEmail,\n      text: `Welcome to castcle here is a link embed code ${verifyLink}?code=${code}`,\n      html: getSignupHtml(\n        toEmail,\n        `${verifyLink}?code=${code}`,\n        'admin@castcle.com'\n      )\n    });\n    console.log(`Email is send `, info.messageId, info);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService-1.html":{"url":"injectables/AppService-1.html","title":"injectable - AppService-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/engagements/src/app/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in apps/engagements/src/app/app.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getData(): { message: string } {\n    return { message: 'Welcome to engagements!' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService-2.html":{"url":"injectables/AppService-2.html","title":"injectable - AppService-2","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backgrounds/src/app/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in apps/backgrounds/src/app/app.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getData(): { message: string } {\n    return { message: 'Welcome to backgrounds!' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService-3.html":{"url":"injectables/AppService-3.html","title":"injectable - AppService-3","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/contents/src/app/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in apps/contents/src/app/app.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getData(): { message: string } {\n    return { message: 'Welcome to contents!' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService-4.html":{"url":"injectables/AppService-4.html","title":"injectable - AppService-4","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/bases/src/app/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in apps/bases/src/app/app.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getData(): { message: string } {\n    return { message: 'Welcome to bases!' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService-5.html":{"url":"injectables/AppService-5.html","title":"injectable - AppService-5","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/metadata/src/app/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in apps/metadata/src/app/app.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getData(): { message: string } {\n    return { message: 'Welcome to metadata!' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService-6.html":{"url":"injectables/AppService-6.html","title":"injectable - AppService-6","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/users/src/app/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in apps/users/src/app/app.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getData(): { message: string } {\n    return { message: 'Welcome to users!' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ArchiveHashtag.html":{"url":"classes/ArchiveHashtag.html","title":"class - ArchiveHashtag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArchiveHashtag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/schemas/archiveHashtag.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CastcleBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fromDate\n                            \n                            \n                                hashtags\n                            \n                            \n                                toDate\n                            \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                visibility\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fromDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/archiveHashtag.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hashtags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Hashtag[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: Array})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/archiveHashtag.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/archiveHashtag.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        visibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityVisibility\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:37\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { Hashtag } from './hashtag.schema';\nimport { CastcleBase } from './base.schema';\n\nexport type ArchiveHashtagDocument = ArchiveHashtag & Document;\n\n@Schema({ timestamps: true })\nexport class ArchiveHashtag extends CastcleBase {\n  @Prop({ required: true, type: Array })\n  hashtags: Hashtag[];\n\n  @Prop({ required: true })\n  fromDate: Date;\n\n  @Prop({ required: true })\n  toDate: Date;\n}\n\nexport const ArchiveHashtagSchema =\n  SchemaFactory.createForClass(ArchiveHashtag);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Author.html":{"url":"classes/Author.html","title":"class - Author","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Author\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/content.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avatar\n                            \n                            \n                                castcleId\n                            \n                            \n                                displayName\n                            \n                            \n                                followed\n                            \n                            \n                                id\n                            \n                            \n                                type\n                            \n                            \n                                verified\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:144\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        castcleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:140\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:142\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        followed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:148\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:136\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"people\" | \"page\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:138\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:146\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Pagination } from './common.dto';\nimport { CastcleQueryOptions } from './common.dto';\n\nclass Url {\n  @ApiProperty()\n  url: string;\n}\n\nclass Link {\n  @ApiProperty()\n  type: string;\n\n  @ApiProperty()\n  url: string;\n}\n\nclass BlogPhoto {\n  @ApiProperty()\n  cover: Url;\n\n  @ApiProperty()\n  contents: Url[];\n}\n\nclass ShortPhoto {\n  @ApiProperty()\n  contents: Url[];\n}\n\nexport class ShortPayload {\n  @ApiProperty()\n  message?: string;\n  @ApiProperty()\n  photo?: ShortPhoto;\n  @ApiProperty()\n  link?: Link[];\n}\n\nexport class ImagePayload {\n  @ApiProperty()\n  photo?: ShortPhoto;\n}\n\nexport class BlogPayload {\n  @ApiProperty()\n  header: string;\n  @ApiProperty()\n  message: string;\n  @ApiProperty()\n  photo?: BlogPhoto;\n\n  link?: Link[];\n}\n\nexport class QuotePayload {\n  source: any; //contain content._id\n  message?: string;\n  photo?: ShortPhoto;\n}\n\nexport class RecastPayload {\n  source: any; //contain content._id\n  photo?: ShortPhoto;\n}\n\nclass Feature {\n  @ApiProperty()\n  slug: 'feed';\n  @ApiProperty()\n  name: 'Feed';\n  @ApiProperty()\n  key: 'feature.feed';\n}\n\nclass Participant {\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  name: string;\n}\n\nclass Like {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  liked: boolean; // viewer like it or not\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Comment {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  commented: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Recast {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  recasted: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nexport class Author {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  castcleId: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  avatar: string | null;\n  @ApiProperty()\n  verified: boolean;\n  @ApiProperty()\n  followed: boolean;\n}\n\nexport class ContentPayloadDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  type:\n    | ContentType.Short\n    | ContentType.Blog\n    | ContentType.Image\n    | ContentType.Quote\n    | ContentType.Recast;\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | QuotePayload | RecastPayload;\n\n  @ApiProperty()\n  feature: Feature;\n\n  @ApiProperty()\n  liked: Like;\n\n  @ApiProperty()\n  commented: Comment;\n\n  @ApiProperty()\n  recasted?: Recast;\n\n  @ApiProperty()\n  quoteCast?: ContentPayloadDto;\n\n  @ApiProperty()\n  author: Author;\n\n  @ApiProperty()\n  created: string;\n  @ApiProperty()\n  updated: string;\n}\n\nclass AuthorDto {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n}\n\nexport class SaveContentDto {\n  @ApiProperty()\n  type: 'short' | 'blog' | 'image';\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | ImagePayload;\n\n  @ApiProperty()\n  author?: AuthorDto;\n}\n\nexport enum ContentType {\n  Short = 'short',\n  Blog = 'blog',\n  Image = 'image',\n  Recast = 'recast',\n  Quote = 'quote'\n}\n\nexport class CastcleContentQueryOptions extends CastcleQueryOptions {\n  type?: ContentType;\n}\n\nexport const DEFAULT_CONTENT_QUERY_OPTIONS = {\n  sortBy: {\n    field: 'updatedAt',\n    type: 'desc'\n  },\n  type: ContentType.Short,\n  page: 1,\n  limit: 25\n} as CastcleContentQueryOptions;\n\nexport class ContentResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto;\n}\n\nexport class ContentsResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthorDto.html":{"url":"classes/AuthorDto.html","title":"class - AuthorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/content.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:192\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"people\" | \"page\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:194\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Pagination } from './common.dto';\nimport { CastcleQueryOptions } from './common.dto';\n\nclass Url {\n  @ApiProperty()\n  url: string;\n}\n\nclass Link {\n  @ApiProperty()\n  type: string;\n\n  @ApiProperty()\n  url: string;\n}\n\nclass BlogPhoto {\n  @ApiProperty()\n  cover: Url;\n\n  @ApiProperty()\n  contents: Url[];\n}\n\nclass ShortPhoto {\n  @ApiProperty()\n  contents: Url[];\n}\n\nexport class ShortPayload {\n  @ApiProperty()\n  message?: string;\n  @ApiProperty()\n  photo?: ShortPhoto;\n  @ApiProperty()\n  link?: Link[];\n}\n\nexport class ImagePayload {\n  @ApiProperty()\n  photo?: ShortPhoto;\n}\n\nexport class BlogPayload {\n  @ApiProperty()\n  header: string;\n  @ApiProperty()\n  message: string;\n  @ApiProperty()\n  photo?: BlogPhoto;\n\n  link?: Link[];\n}\n\nexport class QuotePayload {\n  source: any; //contain content._id\n  message?: string;\n  photo?: ShortPhoto;\n}\n\nexport class RecastPayload {\n  source: any; //contain content._id\n  photo?: ShortPhoto;\n}\n\nclass Feature {\n  @ApiProperty()\n  slug: 'feed';\n  @ApiProperty()\n  name: 'Feed';\n  @ApiProperty()\n  key: 'feature.feed';\n}\n\nclass Participant {\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  name: string;\n}\n\nclass Like {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  liked: boolean; // viewer like it or not\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Comment {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  commented: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Recast {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  recasted: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nexport class Author {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  castcleId: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  avatar: string | null;\n  @ApiProperty()\n  verified: boolean;\n  @ApiProperty()\n  followed: boolean;\n}\n\nexport class ContentPayloadDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  type:\n    | ContentType.Short\n    | ContentType.Blog\n    | ContentType.Image\n    | ContentType.Quote\n    | ContentType.Recast;\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | QuotePayload | RecastPayload;\n\n  @ApiProperty()\n  feature: Feature;\n\n  @ApiProperty()\n  liked: Like;\n\n  @ApiProperty()\n  commented: Comment;\n\n  @ApiProperty()\n  recasted?: Recast;\n\n  @ApiProperty()\n  quoteCast?: ContentPayloadDto;\n\n  @ApiProperty()\n  author: Author;\n\n  @ApiProperty()\n  created: string;\n  @ApiProperty()\n  updated: string;\n}\n\nclass AuthorDto {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n}\n\nexport class SaveContentDto {\n  @ApiProperty()\n  type: 'short' | 'blog' | 'image';\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | ImagePayload;\n\n  @ApiProperty()\n  author?: AuthorDto;\n}\n\nexport enum ContentType {\n  Short = 'short',\n  Blog = 'blog',\n  Image = 'image',\n  Recast = 'recast',\n  Quote = 'quote'\n}\n\nexport class CastcleContentQueryOptions extends CastcleQueryOptions {\n  type?: ContentType;\n}\n\nexport const DEFAULT_CONTENT_QUERY_OPTIONS = {\n  sortBy: {\n    field: 'updatedAt',\n    type: 'desc'\n  },\n  type: ContentType.Short,\n  page: 1,\n  limit: 25\n} as CastcleContentQueryOptions;\n\nexport class ContentResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto;\n}\n\nexport class ContentsResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BlogPayload.html":{"url":"classes/BlogPayload.html","title":"class - BlogPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BlogPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/content.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                header\n                            \n                            \n                                    Optional\n                                link\n                            \n                            \n                                message\n                            \n                            \n                                    Optional\n                                photo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        header\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        link\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Link[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        photo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlogPhoto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Pagination } from './common.dto';\nimport { CastcleQueryOptions } from './common.dto';\n\nclass Url {\n  @ApiProperty()\n  url: string;\n}\n\nclass Link {\n  @ApiProperty()\n  type: string;\n\n  @ApiProperty()\n  url: string;\n}\n\nclass BlogPhoto {\n  @ApiProperty()\n  cover: Url;\n\n  @ApiProperty()\n  contents: Url[];\n}\n\nclass ShortPhoto {\n  @ApiProperty()\n  contents: Url[];\n}\n\nexport class ShortPayload {\n  @ApiProperty()\n  message?: string;\n  @ApiProperty()\n  photo?: ShortPhoto;\n  @ApiProperty()\n  link?: Link[];\n}\n\nexport class ImagePayload {\n  @ApiProperty()\n  photo?: ShortPhoto;\n}\n\nexport class BlogPayload {\n  @ApiProperty()\n  header: string;\n  @ApiProperty()\n  message: string;\n  @ApiProperty()\n  photo?: BlogPhoto;\n\n  link?: Link[];\n}\n\nexport class QuotePayload {\n  source: any; //contain content._id\n  message?: string;\n  photo?: ShortPhoto;\n}\n\nexport class RecastPayload {\n  source: any; //contain content._id\n  photo?: ShortPhoto;\n}\n\nclass Feature {\n  @ApiProperty()\n  slug: 'feed';\n  @ApiProperty()\n  name: 'Feed';\n  @ApiProperty()\n  key: 'feature.feed';\n}\n\nclass Participant {\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  name: string;\n}\n\nclass Like {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  liked: boolean; // viewer like it or not\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Comment {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  commented: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Recast {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  recasted: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nexport class Author {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  castcleId: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  avatar: string | null;\n  @ApiProperty()\n  verified: boolean;\n  @ApiProperty()\n  followed: boolean;\n}\n\nexport class ContentPayloadDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  type:\n    | ContentType.Short\n    | ContentType.Blog\n    | ContentType.Image\n    | ContentType.Quote\n    | ContentType.Recast;\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | QuotePayload | RecastPayload;\n\n  @ApiProperty()\n  feature: Feature;\n\n  @ApiProperty()\n  liked: Like;\n\n  @ApiProperty()\n  commented: Comment;\n\n  @ApiProperty()\n  recasted?: Recast;\n\n  @ApiProperty()\n  quoteCast?: ContentPayloadDto;\n\n  @ApiProperty()\n  author: Author;\n\n  @ApiProperty()\n  created: string;\n  @ApiProperty()\n  updated: string;\n}\n\nclass AuthorDto {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n}\n\nexport class SaveContentDto {\n  @ApiProperty()\n  type: 'short' | 'blog' | 'image';\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | ImagePayload;\n\n  @ApiProperty()\n  author?: AuthorDto;\n}\n\nexport enum ContentType {\n  Short = 'short',\n  Blog = 'blog',\n  Image = 'image',\n  Recast = 'recast',\n  Quote = 'quote'\n}\n\nexport class CastcleContentQueryOptions extends CastcleQueryOptions {\n  type?: ContentType;\n}\n\nexport const DEFAULT_CONTENT_QUERY_OPTIONS = {\n  sortBy: {\n    field: 'updatedAt',\n    type: 'desc'\n  },\n  type: ContentType.Short,\n  page: 1,\n  limit: 25\n} as CastcleContentQueryOptions;\n\nexport class ContentResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto;\n}\n\nexport class ContentsResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BlogPhoto.html":{"url":"classes/BlogPhoto.html","title":"class - BlogPhoto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BlogPhoto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/content.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contents\n                            \n                            \n                                cover\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contents\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Url[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cover\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Url\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Pagination } from './common.dto';\nimport { CastcleQueryOptions } from './common.dto';\n\nclass Url {\n  @ApiProperty()\n  url: string;\n}\n\nclass Link {\n  @ApiProperty()\n  type: string;\n\n  @ApiProperty()\n  url: string;\n}\n\nclass BlogPhoto {\n  @ApiProperty()\n  cover: Url;\n\n  @ApiProperty()\n  contents: Url[];\n}\n\nclass ShortPhoto {\n  @ApiProperty()\n  contents: Url[];\n}\n\nexport class ShortPayload {\n  @ApiProperty()\n  message?: string;\n  @ApiProperty()\n  photo?: ShortPhoto;\n  @ApiProperty()\n  link?: Link[];\n}\n\nexport class ImagePayload {\n  @ApiProperty()\n  photo?: ShortPhoto;\n}\n\nexport class BlogPayload {\n  @ApiProperty()\n  header: string;\n  @ApiProperty()\n  message: string;\n  @ApiProperty()\n  photo?: BlogPhoto;\n\n  link?: Link[];\n}\n\nexport class QuotePayload {\n  source: any; //contain content._id\n  message?: string;\n  photo?: ShortPhoto;\n}\n\nexport class RecastPayload {\n  source: any; //contain content._id\n  photo?: ShortPhoto;\n}\n\nclass Feature {\n  @ApiProperty()\n  slug: 'feed';\n  @ApiProperty()\n  name: 'Feed';\n  @ApiProperty()\n  key: 'feature.feed';\n}\n\nclass Participant {\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  name: string;\n}\n\nclass Like {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  liked: boolean; // viewer like it or not\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Comment {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  commented: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Recast {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  recasted: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nexport class Author {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  castcleId: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  avatar: string | null;\n  @ApiProperty()\n  verified: boolean;\n  @ApiProperty()\n  followed: boolean;\n}\n\nexport class ContentPayloadDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  type:\n    | ContentType.Short\n    | ContentType.Blog\n    | ContentType.Image\n    | ContentType.Quote\n    | ContentType.Recast;\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | QuotePayload | RecastPayload;\n\n  @ApiProperty()\n  feature: Feature;\n\n  @ApiProperty()\n  liked: Like;\n\n  @ApiProperty()\n  commented: Comment;\n\n  @ApiProperty()\n  recasted?: Recast;\n\n  @ApiProperty()\n  quoteCast?: ContentPayloadDto;\n\n  @ApiProperty()\n  author: Author;\n\n  @ApiProperty()\n  created: string;\n  @ApiProperty()\n  updated: string;\n}\n\nclass AuthorDto {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n}\n\nexport class SaveContentDto {\n  @ApiProperty()\n  type: 'short' | 'blog' | 'image';\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | ImagePayload;\n\n  @ApiProperty()\n  author?: AuthorDto;\n}\n\nexport enum ContentType {\n  Short = 'short',\n  Blog = 'blog',\n  Image = 'image',\n  Recast = 'recast',\n  Quote = 'quote'\n}\n\nexport class CastcleContentQueryOptions extends CastcleQueryOptions {\n  type?: ContentType;\n}\n\nexport const DEFAULT_CONTENT_QUERY_OPTIONS = {\n  sortBy: {\n    field: 'updatedAt',\n    type: 'desc'\n  },\n  type: ContentType.Short,\n  page: 1,\n  limit: 25\n} as CastcleContentQueryOptions;\n\nexport class ContentResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto;\n}\n\nexport class ContentsResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CastLogger.html":{"url":"classes/CastLogger.html","title":"class - CastLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CastLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/logger/src/lib/logger.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    ConsoleLogger\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: any, stack?: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/logger/src/lib/logger.ts:42\n                \n            \n\n\n            \n                \n                    Write an 'error' level log.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    stack\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/logger/src/lib/logger.ts:31\n                \n            \n\n\n            \n                \n                    Write a 'log' level log.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/logger/src/lib/logger.ts:56\n                \n            \n\n\n            \n                \n                    Write a 'warn' level log.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ConsoleLogger, ConsoleLoggerOptions, LogLevel } from '@nestjs/common';\nimport { Environment as env } from '@castcle-api/environments';\n\nexport class CastLogger extends ConsoleLogger {\n  /**\n   * Write a 'log' level log.\n   */\n  log(message: any, context?: string) {\n    const argArray: Array = [message];\n    if (context) {\n      argArray.push(context);\n    }\n    super.log.apply(this, argArray);\n  }\n\n  /**\n   * Write an 'error' level log.\n   */\n  error(message: any, stack?: string, context?: string) {\n    const argArray: Array = [message];\n    if (stack) {\n      argArray.push(stack);\n    }\n    if (context) {\n      argArray.push(context);\n    }\n    super.error.apply(this, argArray);\n  }\n\n  /**\n   * Write a 'warn' level log.\n   */\n  warn(message: any, context?: string) {\n    const argArray: Array = [message];\n    if (context) {\n      argArray.push(context);\n    }\n    super.warn.apply(this, argArray);\n  }\n}\n\nexport const CastLoggerLevel: LogLevel[] = env.production\n  ? ['log', 'error', 'warn']\n  : ['log', 'error', 'warn', 'debug', 'verbose'];\nexport const CastLoggerOptions: ConsoleLoggerOptions = {\n  logLevels: CastLoggerLevel,\n  timestamp: true\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CastcleBase.html":{"url":"classes/CastcleBase.html","title":"class - CastcleBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CastcleBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/schemas/base.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                visibility\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/base.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/base.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/base.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        visibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityVisibility\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/base.schema.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema } from '@nestjs/mongoose';\nimport { EntityVisibility } from '../dtos/common.dto';\n\n@Schema()\nexport class CastcleBase {\n  _id?: any;\n\n  @Prop()\n  createdAt?: Date;\n\n  @Prop()\n  updatedAt?: Date;\n\n  @Prop({ type: String })\n  visibility?: EntityVisibility;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CastcleContentQueryOptions.html":{"url":"classes/CastcleContentQueryOptions.html","title":"class - CastcleContentQueryOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CastcleContentQueryOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/content.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CastcleQueryOptions\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                type\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                page\n                            \n                            \n                                    Optional\n                                sortBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ContentType\n\n                    \n                \n                        \n                            \n                                Inherited from         CastcleQueryOptions\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleQueryOptions:217\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 25\n                    \n                \n                        \n                            \n                                Inherited from         CastcleQueryOptions\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleQueryOptions:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                Inherited from         CastcleQueryOptions\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleQueryOptions:45\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sortBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    field: 'updatedAt',\n    type: 'desc'\n  }\n                    \n                \n                        \n                            \n                                Inherited from         CastcleQueryOptions\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleQueryOptions:37\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Pagination } from './common.dto';\nimport { CastcleQueryOptions } from './common.dto';\n\nclass Url {\n  @ApiProperty()\n  url: string;\n}\n\nclass Link {\n  @ApiProperty()\n  type: string;\n\n  @ApiProperty()\n  url: string;\n}\n\nclass BlogPhoto {\n  @ApiProperty()\n  cover: Url;\n\n  @ApiProperty()\n  contents: Url[];\n}\n\nclass ShortPhoto {\n  @ApiProperty()\n  contents: Url[];\n}\n\nexport class ShortPayload {\n  @ApiProperty()\n  message?: string;\n  @ApiProperty()\n  photo?: ShortPhoto;\n  @ApiProperty()\n  link?: Link[];\n}\n\nexport class ImagePayload {\n  @ApiProperty()\n  photo?: ShortPhoto;\n}\n\nexport class BlogPayload {\n  @ApiProperty()\n  header: string;\n  @ApiProperty()\n  message: string;\n  @ApiProperty()\n  photo?: BlogPhoto;\n\n  link?: Link[];\n}\n\nexport class QuotePayload {\n  source: any; //contain content._id\n  message?: string;\n  photo?: ShortPhoto;\n}\n\nexport class RecastPayload {\n  source: any; //contain content._id\n  photo?: ShortPhoto;\n}\n\nclass Feature {\n  @ApiProperty()\n  slug: 'feed';\n  @ApiProperty()\n  name: 'Feed';\n  @ApiProperty()\n  key: 'feature.feed';\n}\n\nclass Participant {\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  name: string;\n}\n\nclass Like {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  liked: boolean; // viewer like it or not\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Comment {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  commented: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Recast {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  recasted: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nexport class Author {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  castcleId: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  avatar: string | null;\n  @ApiProperty()\n  verified: boolean;\n  @ApiProperty()\n  followed: boolean;\n}\n\nexport class ContentPayloadDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  type:\n    | ContentType.Short\n    | ContentType.Blog\n    | ContentType.Image\n    | ContentType.Quote\n    | ContentType.Recast;\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | QuotePayload | RecastPayload;\n\n  @ApiProperty()\n  feature: Feature;\n\n  @ApiProperty()\n  liked: Like;\n\n  @ApiProperty()\n  commented: Comment;\n\n  @ApiProperty()\n  recasted?: Recast;\n\n  @ApiProperty()\n  quoteCast?: ContentPayloadDto;\n\n  @ApiProperty()\n  author: Author;\n\n  @ApiProperty()\n  created: string;\n  @ApiProperty()\n  updated: string;\n}\n\nclass AuthorDto {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n}\n\nexport class SaveContentDto {\n  @ApiProperty()\n  type: 'short' | 'blog' | 'image';\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | ImagePayload;\n\n  @ApiProperty()\n  author?: AuthorDto;\n}\n\nexport enum ContentType {\n  Short = 'short',\n  Blog = 'blog',\n  Image = 'image',\n  Recast = 'recast',\n  Quote = 'quote'\n}\n\nexport class CastcleContentQueryOptions extends CastcleQueryOptions {\n  type?: ContentType;\n}\n\nexport const DEFAULT_CONTENT_QUERY_OPTIONS = {\n  sortBy: {\n    field: 'updatedAt',\n    type: 'desc'\n  },\n  type: ContentType.Short,\n  page: 1,\n  limit: 25\n} as CastcleContentQueryOptions;\n\nexport class ContentResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto;\n}\n\nexport class ContentsResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CastcleException.html":{"url":"classes/CastcleException.html","title":"class - CastcleException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CastcleException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/utils/exception/src/lib/castcle.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(castcleStatus: CastcleStatus, language: string)\n                    \n                \n                        \n                            \n                                Defined in libs/utils/exception/src/lib/castcle.exception.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        castcleStatus\n                                                  \n                                                        \n                                                                        CastcleStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        language\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\nimport { ErrorMessages } from './messages/default';\n\nexport enum CastcleStatus {\n  REQUEST_URL_NOT_FOUND = '1001',\n  MISSING_AUTHORIZATION_HEADER = '1002',\n  INVALID_ACCESS_TOKEN = '1003',\n  INVALID_REFRESH_TOKEN = '1004',\n  INVALID_FORMAT = '1005',\n  UPLOAD_FAILED = '1006',\n  FORBIDDEN_REQUEST = '1007',\n  INVLAID_AUTH_TOKEN = '3001',\n  INVALID_EMAIL_OR_PASSWORD = '3002',\n  INVALID_EMAIL = '3003',\n  INVALID_PHONE_NUMBER = '3004',\n  PAYLOAD_CHANNEL_MISMATCH = '3005',\n  EMAIL_OR_PHONE_NOTFOUND = '3006',\n  PLEASE_TRY_AGAIN = '3007',\n  INVALID_OTP = '3008',\n  EXPIRED_OTP = '3009',\n  LOCKED_OTP = '3010',\n  INVALID_PASSWORD = '3011',\n  INVLAID_REFCODE = '3012',\n  INVALID_ROLE = '3013',\n  EMAIL_OR_PHONE_IS_EXIST = '3014',\n  PAGE_IS_EXIST = '3015',\n  USER_NAME_IS_EXIST = '3016',\n  USER_ID_IS_EXIST = '3017',\n  FEATURE_NOT_EXIST = '5001',\n  PAYLOAD_TYPE_MISMATCH = '5002'\n}\n\ninterface ErrorStatus {\n  statusCode: string;\n  code: string;\n  message: string;\n}\n\nexport class CastcleException extends HttpException {\n  constructor(castcleStatus: CastcleStatus, language = 'en') {\n    const error: ErrorStatus = ErrorMessages[castcleStatus];\n    super(error, Number(error.statusCode));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CastcleName.html":{"url":"classes/CastcleName.html","title":"class - CastcleName","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CastcleName\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/utils/src/lib/castcle-name.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isBanned\n                            \n                            \n                                isReserved\n                            \n                            \n                                isValid\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                slug\n                            \n                            \n                                suggestCastcleId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                _preSuggest\n                            \n                            \n                                    Static\n                                convertToSlug\n                            \n                            \n                                    Static\n                                isBannedName\n                            \n                            \n                                    Static\n                                isReserveName\n                            \n                            \n                                    Static\n                                isValidName\n                            \n                            \n                                    Static\n                                suggestCastcleId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in libs/utils/src/lib/castcle-name.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isBanned\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in libs/utils/src/lib/castcle-name.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isReserved\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in libs/utils/src/lib/castcle-name.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in libs/utils/src/lib/castcle-name.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/utils/src/lib/castcle-name.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/utils/src/lib/castcle-name.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        suggestCastcleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/utils/src/lib/castcle-name.ts:37\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        _preSuggest\n                        \n                    \n                \n            \n            \n                \n                    \n                    _preSuggest(name: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/utils/src/lib/castcle-name.ts:104\n                \n            \n\n\n            \n                \n                    remove all special character and if length is more than LENGTH_MAX slice it to the maxium length\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        convertToSlug\n                        \n                    \n                \n            \n            \n                \n                    \n                    convertToSlug(name: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/utils/src/lib/castcle-name.ts:51\n                \n            \n\n\n            \n                \n                    Change name to lowercase + remove all space\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isBannedName\n                        \n                    \n                \n            \n            \n                \n                    \n                    isBannedName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/utils/src/lib/castcle-name.ts:63\n                \n            \n\n\n            \n                \n                    convert name to slug and check if it exist in configs/names/ban.names\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        return true if the name is ban name\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isReserveName\n                        \n                    \n                \n            \n            \n                \n                    \n                    isReserveName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/utils/src/lib/castcle-name.ts:74\n                \n            \n\n\n            \n                \n                    convert name to slug and check if it exist in configs/names/reserve.names\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isValidName\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/utils/src/lib/castcle-name.ts:85\n                \n            \n\n\n            \n                \n                    convert name to slug and check if length in ranges(in config) and if it has any special character\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        return true if name is valid\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        suggestCastcleId\n                        \n                    \n                \n            \n            \n                \n                    \n                    suggestCastcleId(name: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/utils/src/lib/castcle-name.ts:120\n                \n            \n\n\n            \n                \n                    get name from _preSuggest and check\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BANNED_NAMES,\n  RESERVE_NAMES,\n  RANDOM_ADJECTIVE,\n  RANDOM_SUBJECTS,\n  LENGTH_MAX,\n  LENGTH_MIN\n} from './configs/names';\n\nexport class CastcleName {\n  slug: string;\n  isBanned: boolean;\n  isReserved: boolean;\n  isValid: boolean;\n  suggestCastcleId: string;\n  constructor(public name: string) {\n    this.slug = CastcleName.convertToSlug(name);\n    this.isBanned = CastcleName.isBannedName(name);\n    this.isReserved = CastcleName.isReserveName(name);\n    this.isValid = CastcleName.isValidName(name);\n    this.suggestCastcleId = CastcleName.suggestCastcleId(name);\n  }\n\n  /**\n   * Change name to lowercase + remove all space\n   * @param {string }name\n   * @returns {string}\n   */\n  static convertToSlug(name: string) {\n    return name\n      .toLowerCase()\n      .replace(/[^\\w ]+/g, '')\n      .replace(/ +/g, '');\n  }\n\n  /**\n   * convert name to slug and check if it exist in configs/names/ban.names\n   * @param {string }name\n   * @returns {boolean} return true if the name is ban name\n   */\n  static isBannedName(name: string) {\n    return BANNED_NAMES.find((str) => str === this.convertToSlug(name))\n      ? true\n      : false;\n  }\n\n  /**\n   * convert name to slug and check if it exist in configs/names/reserve.names\n   * @param {string} name\n   * @returns {boolean}\n   */\n  static isReserveName(name: string) {\n    return RESERVE_NAMES.find((str) => str === this.convertToSlug(name))\n      ? true\n      : false;\n  }\n\n  /**\n   * convert name to slug and check if length in ranges(in config) and if it has any special character\n   * @param {string} name\n   * @returns {boolean} return true if name is valid\n   */\n  static isValidName(name: string) {\n    const lengthRule =\n      this.convertToSlug(name).length >= LENGTH_MIN &&\n      this.convertToSlug(name).length \\/?~]/;\n    const specialCharacterRule = !format.test(name);\n    return (\n      lengthRule &&\n      specialCharacterRule &&\n      !this.isReserveName(name) &&\n      !this.isBannedName(name)\n    );\n  }\n\n  /**\n   * remove all special character and if length is more than LENGTH_MAX slice it to the maxium length\n   * @param {string} name\n   * @returns {string}\n   */\n  static _preSuggest(name: string) {\n    //remove any special character\n    let replaceName = name.replace(\n      /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/g,\n      ''\n    );\n    if (name.length >= LENGTH_MAX)\n      replaceName = replaceName.slice(0, LENGTH_MAX - 1);\n    return replaceName;\n  }\n\n  /**\n   * get name from _preSuggest and check\n   * @param {string} name\n   * @returns {string}\n   */\n  static suggestCastcleId(name: string) {\n    const newName = this._preSuggest(name);\n    if (this.isValidName(newName)) return this.convertToSlug(newName);\n    const subject =\n      RANDOM_SUBJECTS[Math.floor(Math.random() * RANDOM_SUBJECTS.length)];\n    const adjective =\n      RANDOM_ADJECTIVE[Math.floor(Math.random() * RANDOM_ADJECTIVE.length)];\n    return adjective + subject;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CastcleQueryOptions.html":{"url":"classes/CastcleQueryOptions.html","title":"class - CastcleQueryOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CastcleQueryOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/common.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                page\n                            \n                            \n                                    Optional\n                                sortBy\n                            \n                            \n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 25\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/common.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/common.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sortBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    field: 'updatedAt',\n    type: 'desc'\n  }\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/common.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/common.dto.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class Pagination {\n  @ApiProperty()\n  previous?: number;\n  @ApiProperty()\n  self?: number;\n  @ApiProperty()\n  next?: number;\n  @ApiProperty()\n  limit?: number;\n}\n\nexport class CastcleQueryOptions {\n  sortBy?: {\n    field: string;\n    type: 'desc' | 'asc';\n  } = {\n    field: 'updatedAt',\n    type: 'desc'\n  };\n  type?: string;\n  page?: number = 1;\n  limit?: number = 25;\n}\n\nexport const DEFAULT_QUERY_OPTIONS = {\n  sortBy: {\n    field: 'updatedAt',\n    type: 'desc'\n  },\n  page: 1,\n  limit: 25\n} as CastcleQueryOptions;\n\nexport enum EntityVisibility {\n  Hidden = 'hidden',\n  Publish = 'publish',\n  Deleted = 'deleted'\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePasswordBody.html":{"url":"classes/ChangePasswordBody.html","title":"class - ChangePasswordBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePasswordBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/authentications/src/app/dtos/dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newPassword\n                            \n                            \n                                refCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/authentications/src/app/dtos/dto.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/authentications/src/app/dtos/dto.ts:100\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nexport class GuestLoginDto {\n  @ApiProperty()\n  deviceUUID: string;\n}\n\nexport class CheckEmailExistDto {\n  @ApiProperty()\n  email: string;\n}\n\nexport class LoginDto {\n  @ApiProperty()\n  username: string;\n  @ApiProperty()\n  password: string;\n}\n\nclass RegisterPayload {\n  @ApiProperty()\n  email: string;\n  @ApiProperty()\n  password: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  castcleId: string;\n}\n\nexport class RegisterByEmailDto {\n  @ApiProperty()\n  channel: 'email';\n  @ApiProperty()\n  payload: RegisterPayload;\n}\n\nexport class CheckIdExistDto {\n  @ApiProperty()\n  castcleId: string;\n}\n\nexport class TokenResponse {\n  @ApiProperty()\n  accessToken: string;\n\n  @ApiProperty()\n  refreshToken: string;\n}\n\nexport class CheckingResponse {\n  @ApiProperty()\n  message: string;\n\n  @ApiProperty()\n  payload: {\n    exist: boolean;\n  };\n}\n\nexport class RefreshTokenResponse {\n  @ApiProperty()\n  accessToken: string;\n}\n\nclass suggestCastcleIdPayload {\n  @ApiProperty()\n  suggestCastcleId: string;\n}\n\nexport class SuggestCastcleIdReponse {\n  @ApiProperty()\n  payload: suggestCastcleIdPayload;\n}\n\nexport class ChangePasswordBody {\n  @ApiProperty()\n  refCode: string;\n  @ApiProperty()\n  newPassword: string;\n}\n\nexport class VerificationPasswordBody {\n  @ApiProperty()\n  password: string;\n}\n\nexport class VerificationPasswordResponse {\n  @ApiProperty()\n  refCode: string;\n  @ApiProperty()\n  expiresTime: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckEmailExistDto.html":{"url":"classes/CheckEmailExistDto.html","title":"class - CheckEmailExistDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckEmailExistDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/authentications/src/app/dtos/dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/authentications/src/app/dtos/dto.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nexport class GuestLoginDto {\n  @ApiProperty()\n  deviceUUID: string;\n}\n\nexport class CheckEmailExistDto {\n  @ApiProperty()\n  email: string;\n}\n\nexport class LoginDto {\n  @ApiProperty()\n  username: string;\n  @ApiProperty()\n  password: string;\n}\n\nclass RegisterPayload {\n  @ApiProperty()\n  email: string;\n  @ApiProperty()\n  password: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  castcleId: string;\n}\n\nexport class RegisterByEmailDto {\n  @ApiProperty()\n  channel: 'email';\n  @ApiProperty()\n  payload: RegisterPayload;\n}\n\nexport class CheckIdExistDto {\n  @ApiProperty()\n  castcleId: string;\n}\n\nexport class TokenResponse {\n  @ApiProperty()\n  accessToken: string;\n\n  @ApiProperty()\n  refreshToken: string;\n}\n\nexport class CheckingResponse {\n  @ApiProperty()\n  message: string;\n\n  @ApiProperty()\n  payload: {\n    exist: boolean;\n  };\n}\n\nexport class RefreshTokenResponse {\n  @ApiProperty()\n  accessToken: string;\n}\n\nclass suggestCastcleIdPayload {\n  @ApiProperty()\n  suggestCastcleId: string;\n}\n\nexport class SuggestCastcleIdReponse {\n  @ApiProperty()\n  payload: suggestCastcleIdPayload;\n}\n\nexport class ChangePasswordBody {\n  @ApiProperty()\n  refCode: string;\n  @ApiProperty()\n  newPassword: string;\n}\n\nexport class VerificationPasswordBody {\n  @ApiProperty()\n  password: string;\n}\n\nexport class VerificationPasswordResponse {\n  @ApiProperty()\n  refCode: string;\n  @ApiProperty()\n  expiresTime: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckIdExistDto.html":{"url":"classes/CheckIdExistDto.html","title":"class - CheckIdExistDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckIdExistDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/authentications/src/app/dtos/dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                castcleId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        castcleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/authentications/src/app/dtos/dto.ts:62\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nexport class GuestLoginDto {\n  @ApiProperty()\n  deviceUUID: string;\n}\n\nexport class CheckEmailExistDto {\n  @ApiProperty()\n  email: string;\n}\n\nexport class LoginDto {\n  @ApiProperty()\n  username: string;\n  @ApiProperty()\n  password: string;\n}\n\nclass RegisterPayload {\n  @ApiProperty()\n  email: string;\n  @ApiProperty()\n  password: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  castcleId: string;\n}\n\nexport class RegisterByEmailDto {\n  @ApiProperty()\n  channel: 'email';\n  @ApiProperty()\n  payload: RegisterPayload;\n}\n\nexport class CheckIdExistDto {\n  @ApiProperty()\n  castcleId: string;\n}\n\nexport class TokenResponse {\n  @ApiProperty()\n  accessToken: string;\n\n  @ApiProperty()\n  refreshToken: string;\n}\n\nexport class CheckingResponse {\n  @ApiProperty()\n  message: string;\n\n  @ApiProperty()\n  payload: {\n    exist: boolean;\n  };\n}\n\nexport class RefreshTokenResponse {\n  @ApiProperty()\n  accessToken: string;\n}\n\nclass suggestCastcleIdPayload {\n  @ApiProperty()\n  suggestCastcleId: string;\n}\n\nexport class SuggestCastcleIdReponse {\n  @ApiProperty()\n  payload: suggestCastcleIdPayload;\n}\n\nexport class ChangePasswordBody {\n  @ApiProperty()\n  refCode: string;\n  @ApiProperty()\n  newPassword: string;\n}\n\nexport class VerificationPasswordBody {\n  @ApiProperty()\n  password: string;\n}\n\nexport class VerificationPasswordResponse {\n  @ApiProperty()\n  refCode: string;\n  @ApiProperty()\n  expiresTime: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckingResponse.html":{"url":"classes/CheckingResponse.html","title":"class - CheckingResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckingResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/authentications/src/app/dtos/dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                payload\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/authentications/src/app/dtos/dto.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/authentications/src/app/dtos/dto.ts:78\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nexport class GuestLoginDto {\n  @ApiProperty()\n  deviceUUID: string;\n}\n\nexport class CheckEmailExistDto {\n  @ApiProperty()\n  email: string;\n}\n\nexport class LoginDto {\n  @ApiProperty()\n  username: string;\n  @ApiProperty()\n  password: string;\n}\n\nclass RegisterPayload {\n  @ApiProperty()\n  email: string;\n  @ApiProperty()\n  password: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  castcleId: string;\n}\n\nexport class RegisterByEmailDto {\n  @ApiProperty()\n  channel: 'email';\n  @ApiProperty()\n  payload: RegisterPayload;\n}\n\nexport class CheckIdExistDto {\n  @ApiProperty()\n  castcleId: string;\n}\n\nexport class TokenResponse {\n  @ApiProperty()\n  accessToken: string;\n\n  @ApiProperty()\n  refreshToken: string;\n}\n\nexport class CheckingResponse {\n  @ApiProperty()\n  message: string;\n\n  @ApiProperty()\n  payload: {\n    exist: boolean;\n  };\n}\n\nexport class RefreshTokenResponse {\n  @ApiProperty()\n  accessToken: string;\n}\n\nclass suggestCastcleIdPayload {\n  @ApiProperty()\n  suggestCastcleId: string;\n}\n\nexport class SuggestCastcleIdReponse {\n  @ApiProperty()\n  payload: suggestCastcleIdPayload;\n}\n\nexport class ChangePasswordBody {\n  @ApiProperty()\n  refCode: string;\n  @ApiProperty()\n  newPassword: string;\n}\n\nexport class VerificationPasswordBody {\n  @ApiProperty()\n  password: string;\n}\n\nexport class VerificationPasswordResponse {\n  @ApiProperty()\n  refCode: string;\n  @ApiProperty()\n  expiresTime: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Circle.html":{"url":"classes/Circle.html","title":"class - Circle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Circle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/schemas/circle.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CastcleBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                slug\n                            \n                            \n                                type\n                            \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                visibility\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/circle.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/circle.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/circle.schema.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        visibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityVisibility\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:37\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { CastcleBase } from './base.schema';\n\nexport enum CircleType {\n  Default = 'default',\n  Topic = 'Topic'\n}\n\nexport type CircleDocument = Circle & Document;\n\n@Schema({ timestamps: true })\nexport class Circle extends CastcleBase {\n  @Prop({ required: true })\n  slug: string;\n\n  @Prop({ required: true })\n  name: string;\n\n  @Prop({ required: true })\n  type: string;\n}\n\nexport const CircleSchema = SchemaFactory.createForClass(Circle);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Comment.html":{"url":"classes/Comment.html","title":"class - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/content.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                commented\n                            \n                            \n                                count\n                            \n                            \n                                participants\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        commented\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        participants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Participant[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:122\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Pagination } from './common.dto';\nimport { CastcleQueryOptions } from './common.dto';\n\nclass Url {\n  @ApiProperty()\n  url: string;\n}\n\nclass Link {\n  @ApiProperty()\n  type: string;\n\n  @ApiProperty()\n  url: string;\n}\n\nclass BlogPhoto {\n  @ApiProperty()\n  cover: Url;\n\n  @ApiProperty()\n  contents: Url[];\n}\n\nclass ShortPhoto {\n  @ApiProperty()\n  contents: Url[];\n}\n\nexport class ShortPayload {\n  @ApiProperty()\n  message?: string;\n  @ApiProperty()\n  photo?: ShortPhoto;\n  @ApiProperty()\n  link?: Link[];\n}\n\nexport class ImagePayload {\n  @ApiProperty()\n  photo?: ShortPhoto;\n}\n\nexport class BlogPayload {\n  @ApiProperty()\n  header: string;\n  @ApiProperty()\n  message: string;\n  @ApiProperty()\n  photo?: BlogPhoto;\n\n  link?: Link[];\n}\n\nexport class QuotePayload {\n  source: any; //contain content._id\n  message?: string;\n  photo?: ShortPhoto;\n}\n\nexport class RecastPayload {\n  source: any; //contain content._id\n  photo?: ShortPhoto;\n}\n\nclass Feature {\n  @ApiProperty()\n  slug: 'feed';\n  @ApiProperty()\n  name: 'Feed';\n  @ApiProperty()\n  key: 'feature.feed';\n}\n\nclass Participant {\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  name: string;\n}\n\nclass Like {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  liked: boolean; // viewer like it or not\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Comment {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  commented: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Recast {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  recasted: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nexport class Author {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  castcleId: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  avatar: string | null;\n  @ApiProperty()\n  verified: boolean;\n  @ApiProperty()\n  followed: boolean;\n}\n\nexport class ContentPayloadDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  type:\n    | ContentType.Short\n    | ContentType.Blog\n    | ContentType.Image\n    | ContentType.Quote\n    | ContentType.Recast;\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | QuotePayload | RecastPayload;\n\n  @ApiProperty()\n  feature: Feature;\n\n  @ApiProperty()\n  liked: Like;\n\n  @ApiProperty()\n  commented: Comment;\n\n  @ApiProperty()\n  recasted?: Recast;\n\n  @ApiProperty()\n  quoteCast?: ContentPayloadDto;\n\n  @ApiProperty()\n  author: Author;\n\n  @ApiProperty()\n  created: string;\n  @ApiProperty()\n  updated: string;\n}\n\nclass AuthorDto {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n}\n\nexport class SaveContentDto {\n  @ApiProperty()\n  type: 'short' | 'blog' | 'image';\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | ImagePayload;\n\n  @ApiProperty()\n  author?: AuthorDto;\n}\n\nexport enum ContentType {\n  Short = 'short',\n  Blog = 'blog',\n  Image = 'image',\n  Recast = 'recast',\n  Quote = 'quote'\n}\n\nexport class CastcleContentQueryOptions extends CastcleQueryOptions {\n  type?: ContentType;\n}\n\nexport const DEFAULT_CONTENT_QUERY_OPTIONS = {\n  sortBy: {\n    field: 'updatedAt',\n    type: 'desc'\n  },\n  type: ContentType.Short,\n  page: 1,\n  limit: 25\n} as CastcleContentQueryOptions;\n\nexport class ContentResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto;\n}\n\nexport class ContentsResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Comment-1.html":{"url":"classes/Comment-1.html","title":"class - Comment-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/schemas/comment.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CastcleBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                engagements\n                            \n                            \n                                hashtags\n                            \n                            \n                                message\n                            \n                            \n                                revisionCount\n                            \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                visibility\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Account | any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/comment.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        engagements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/comment.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hashtags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/comment.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/comment.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        revisionCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/comment.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        visibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityVisibility\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:37\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { Account } from '../schemas/account.schema';\nimport { CastcleBase } from './base.schema';\n\nexport type CommentDocument = Comment & Document;\n\n@Schema({ timestamps: true })\nexport class Comment extends CastcleBase {\n  @Prop({ required: true, type: Object })\n  author: Account | any;\n\n  @Prop({ required: true })\n  message: string;\n\n  @Prop({ required: true, type: Object })\n  engagements: {\n    [engagementKey: string]: {\n      count: number;\n      refs: any[];\n    };\n  };\n\n  @Prop({ required: true })\n  revisionCount: number;\n\n  @Prop({ type: Array })\n  hashtags: any[];\n}\n\nexport const CommentSchema = SchemaFactory.createForClass(Comment);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonDate.html":{"url":"injectables/CommonDate.html","title":"injectable - CommonDate","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CommonDate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/commonDate/src/lib/date.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addDate\n                            \n                            \n                                addMonth\n                            \n                            \n                                addYear\n                            \n                            \n                                getDate\n                            \n                            \n                                getDateFormat\n                            \n                            \n                                getDateFromString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addDate\n                        \n                    \n                \n            \n            \n                \naddDate(dt: Date, day: number, hour: number, min: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/commonDate/src/lib/date.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dt\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    day\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hour\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    min\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addMonth\n                        \n                    \n                \n            \n            \n                \naddMonth(dt: Date, mon: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/commonDate/src/lib/date.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dt\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mon\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addYear\n                        \n                    \n                \n            \n            \n                \naddYear(dt: Date, year: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/commonDate/src/lib/date.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dt\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    year\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDate\n                        \n                    \n                \n            \n            \n                \ngetDate(offset: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/commonDate/src/lib/date.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDateFormat\n                        \n                    \n                \n            \n            \n                \ngetDateFormat(date: Date, format: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/commonDate/src/lib/date.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    format\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDateFromString\n                        \n                    \n                \n            \n            \n                \ngetDateFromString(str: string, format: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/commonDate/src/lib/date.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    format\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport * as moment from 'moment';\nconst defaultOffset = '+07:00';\nconst defaultFormat = 'yyyy-MM-DDThh:mm:ss';\n\n@Injectable()\nexport class CommonDate {\n  getDate(offset: string): Date {\n    if (!offset) {\n      offset = defaultOffset;\n    }\n    return new Date(moment().utcOffset(offset).format());\n  }\n\n  getDateFormat(date: Date, format: string): string {\n    if (!date) {\n      date = new Date();\n    }\n\n    if (!format) {\n      format = defaultFormat;\n    }\n\n    return moment(date).format(format);\n  }\n\n  getDateFromString(str: string, format: string): Date {\n    if (!format) {\n      format = defaultFormat;\n    }\n\n    return new Date(moment(str).format(format));\n  }\n\n  addDate(dt: Date, day: number, hour: number, min: number): Date {\n    if (!dt) {\n      dt = new Date();\n    }\n    const minuteAdd = day * 1440 + hour * 60 + min;\n    return new Date(dt.getTime() + 60000 * minuteAdd);\n  }\n\n  addMonth(dt: Date, mon: number) {\n    if (!dt) {\n      dt = new Date();\n    }\n\n    return new Date(moment(dt).add(mon, 'months').calendar());\n  }\n\n  addYear(dt: Date, year: number) {\n    if (!dt) {\n      dt = new Date();\n    }\n\n    return new Date(moment(dt).add(year, 'years').calendar());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Content.html":{"url":"classes/Content.html","title":"class - Content","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Content\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/schemas/content.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CastcleBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                engagements\n                            \n                            \n                                hashtags\n                            \n                            \n                                payload\n                            \n                            \n                                revisionCount\n                            \n                            \n                                type\n                            \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                visibility\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Author\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/content.schema.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        engagements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/content.schema.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hashtags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/content.schema.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ShortPayload | BlogPayload | RecastPayload | QuotePayload\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/content.schema.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        revisionCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/content.schema.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/content.schema.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        visibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityVisibility\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:37\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Document, Model } from 'mongoose';\nimport { Account } from '../schemas/account.schema';\nimport {\n  ContentPayloadDto,\n  ShortPayload,\n  ContentType,\n  BlogPayload,\n  Author\n} from '../dtos/content.dto';\nimport { CastcleBase } from './base.schema';\nimport { RevisionDocument } from './revision.schema';\nimport { EngagementDocument, EngagementType } from './engagement.schema';\nimport { EntityVisibility } from '../dtos/common.dto';\n\n//TODO: !!!  need to revise this\nexport interface RecastPayload {\n  source: Content;\n}\n\nexport interface QuotePayload {\n  source: Content;\n  content: string;\n}\n\nexport type ContentDocument = Content & IContent;\n\n@Schema({ timestamps: true })\nexport class Content extends CastcleBase {\n  @Prop({ required: true, type: Object })\n  author: Author;\n\n  @Prop({ required: true })\n  type: string;\n\n  @Prop({ required: true, type: Object })\n  payload: ShortPayload | BlogPayload | RecastPayload | QuotePayload;\n\n  @Prop({ type: Object })\n  engagements: {\n    [engagementKey: string]: {\n      count: number;\n      refs: any[];\n    };\n  };\n\n  @Prop({ required: true })\n  revisionCount: number;\n\n  @Prop({ type: Array })\n  hashtags: any[];\n}\n\ninterface IContent extends Document {\n  /**\n   * @returns {ContentPayloadDto} return payload that need to use in controller (not yet implement with engagement)\n   */\n  toContentPayload(): ContentPayloadDto;\n}\n\nexport const ContentSchema = SchemaFactory.createForClass(Content);\n\nContentSchema.methods.toContentPayload = function () {\n  //Todo Need to implement recast quote cast later on\n  return {\n    id: (this as ContentDocument)._id,\n    author: (this as ContentDocument).author,\n    commented: {\n      commented: false, //TODO !!! need to update after implement with engagement\n      count:\n        (this as ContentDocument).engagements &&\n        (this as ContentDocument).engagements['comment']\n          ? (this as ContentDocument).engagements['comment'].count\n          : 0,\n      participants: []\n    },\n    payload: (this as ContentDocument).payload,\n    created: (this as ContentDocument).createdAt.toISOString(),\n    updated: (this as ContentDocument).updatedAt.toISOString(),\n    liked: {\n      liked: false,\n      count:\n        (this as ContentDocument).engagements &&\n        (this as ContentDocument).engagements['like']\n          ? (this as ContentDocument).engagements['like'].count\n          : 0,\n      participants: []\n    },\n    type: (this as ContentDocument).type,\n    feature: {\n      slug: 'feed',\n      key: 'feature.feed',\n      name: 'Feed'\n    }\n  } as ContentPayloadDto;\n};\n\nconst removeEngagementAggregateIfDeleted = async (\n  doc: ContentDocument,\n  engagementModel: Model\n) => {\n  let payload: QuotePayload | RecastPayload;\n  if (doc.type === ContentType.Recast || doc.type === ContentType.Quote) {\n    payload =\n      doc.type === ContentType.Recast\n        ? (doc.payload as RecastPayload)\n        : (doc.payload as QuotePayload);\n  }\n};\n\nexport const ContentSchemaFactory = (\n  revisionModel: Model\n): mongoose.Schema => {\n  const contentModel = mongoose.model(\n    'Content',\n    ContentSchema\n  ) as unknown as Model;\n\n  ContentSchema.pre('save', function (next) {\n    //defualt is publish\n    (this as ContentDocument).visibility = (this as ContentDocument).visibility\n      ? (this as ContentDocument).visibility\n      : EntityVisibility.Publish;\n    (this as ContentDocument).revisionCount = (this as ContentDocument)\n      .revisionCount\n      ? (this as ContentDocument).revisionCount + 1\n      : 1;\n    if (!(this as ContentDocument).engagements) {\n      (this as ContentDocument).engagements = {\n        like: {\n          count: 0,\n          refs: []\n        },\n        comment: {\n          count: 0,\n          refs: []\n        },\n        recast: {\n          count: 0,\n          refs: []\n        },\n        quote: {\n          count: 0,\n          refs: []\n        }\n      };\n    }\n    next();\n  });\n  ContentSchema.post('save', async function (doc, next) {\n    const session = await revisionModel.startSession();\n\n    session.withTransaction(async () => {\n      session.abortTransaction();\n      //update revision\n      const newRevison = new revisionModel({\n        objectRef: {\n          $ref: 'content',\n          $id: mongoose.Types.ObjectId((doc as ContentDocument)._id)\n        },\n        payload: doc as Content\n      });\n      const result = await newRevison.save();\n      //f content not publish go remove all content\n      if ((doc as ContentDocument).visibility != EntityVisibility.Publish) {\n        //if this is quote cast\n      }\n    });\n    session.endSession();\n    next();\n  });\n  return ContentSchema;\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ContentController.html":{"url":"controllers/ContentController.html","title":"controller - ContentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ContentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/contents/src/app/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                _checkPermissionForUpdate\n                            \n                            \n                                    Async\n                                _getContentIfExist\n                            \n                            \n                                    Async\n                                createFeedContent\n                            \n                            \n                                    Async\n                                deleteContentFromId\n                            \n                            \n                                    Async\n                                getContentFromId\n                            \n                            \n                                    Async\n                                getContents\n                            \n                            \n                                    Async\n                                likeContent\n                            \n                            \n                                    Async\n                                quoteContent\n                            \n                            \n                                    Async\n                                recastContent\n                            \n                            \n                                    Async\n                                unLikeContent\n                            \n                            \n                                    Async\n                                updateContentFromId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        _checkPermissionForUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    _checkPermissionForUpdate(content: ContentDocument, req: CredentialRequest)\n                \n            \n\n\n            \n                \n                    Defined in apps/contents/src/app/app.controller.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                                ContentDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        _getContentIfExist\n                        \n                    \n                \n            \n            \n                \n                    \n                    _getContentIfExist(id: string, req: CredentialRequest)\n                \n            \n\n\n            \n                \n                    Defined in apps/contents/src/app/app.controller.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createFeedContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    createFeedContent(body: SaveContentDto, req: CredentialRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiBody({type: SaveContentDto})@ApiResponse({status: 201, type: ContentResponse})@UseInterceptors(ContentInterceptor)@Post('feed')\n                \n            \n\n            \n                \n                    Defined in apps/contents/src/app/app.controller.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                SaveContentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteContentFromId\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteContentFromId(id: string, req: CredentialRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiResponse({status: 204})@UseInterceptors(CredentialInterceptor)@HttpCode(204)@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/contents/src/app/app.controller.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getContentFromId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getContentFromId(id: string, req: CredentialRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiOkResponse({type: ContentResponse})@UseInterceptors(CredentialInterceptor)@Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/contents/src/app/app.controller.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getContents\n                        \n                    \n                \n            \n            \n                \n                    \n                    getContents(id: string, req: CredentialRequest, sortByOption: literal type, pageOption: number, limitOption: number, contentTypeOption: ContentType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiOkResponse({type: ContentResponse})@UseInterceptors(CredentialInterceptor)@Get('')\n                \n            \n\n            \n                \n                    Defined in apps/contents/src/app/app.controller.ts:228\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    sortByOption\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.sortBy\n                                    \n\n                                \n                                \n                                    pageOption\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.page\n                                    \n\n                                \n                                \n                                    limitOption\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.limit\n                                    \n\n                                \n                                \n                                    contentTypeOption\n                                    \n                                                ContentType\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.type\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        likeContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    likeContent(id: string, authorId: string, req: CredentialRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiResponse({status: 204})@UseInterceptors(CredentialInterceptor)@Put(':id/liked')@HttpCode(204)\n                \n            \n\n            \n                \n                    Defined in apps/contents/src/app/app.controller.ts:256\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    authorId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        quoteContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    quoteContent(id: string, authorId: string, message: string, req: CredentialRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiResponse({status: 201, type: ContentResponse})@UseInterceptors(CredentialInterceptor)@Post(':id/quotecast')\n                \n            \n\n            \n                \n                    Defined in apps/contents/src/app/app.controller.ts:345\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    authorId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        recastContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    recastContent(id: string, authorId: string, req: CredentialRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiResponse({status: 201, type: ContentResponse})@UseInterceptors(CredentialInterceptor)@Post(':id/recast')\n                \n            \n\n            \n                \n                    Defined in apps/contents/src/app/app.controller.ts:312\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    authorId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        unLikeContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    unLikeContent(id: string, authorId: string, req: CredentialRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiResponse({status: 204})@UseInterceptors(CredentialInterceptor)@Put(':id/unliked')@HttpCode(204)\n                \n            \n\n            \n                \n                    Defined in apps/contents/src/app/app.controller.ts:284\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    authorId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateContentFromId\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateContentFromId(id: string, body: SaveContentDto, req: CredentialRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiBody({type: SaveContentDto})@ApiOkResponse({type: ContentResponse})@UseInterceptors(ContentInterceptor)@Put(':id')\n                \n            \n\n            \n                \n                    Defined in apps/contents/src/app/app.controller.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                SaveContentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright (c) 2021, Castcle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 3 only, as\n * published by the Free Software Foundation.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n * version 3 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 3 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Castcle, 22 Phet Kasem 47/2 Alley, Bang Khae, Bangkok,\n * Thailand 10160, or visit www.castcle.com if you need additional information\n * or have any questions.\n */\n\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  Param,\n  Post,\n  Put,\n  Query,\n  Req,\n  UseInterceptors\n} from '@nestjs/common';\nimport { AppService } from './app.service';\nimport {\n  AuthenticationService,\n  UserService,\n  ContentService\n} from '@castcle-api/database';\nimport { CastLogger, CastLoggerOptions } from '@castcle-api/logger';\nimport {\n  ContentResponse,\n  ContentType,\n  DEFAULT_CONTENT_QUERY_OPTIONS,\n  SaveContentDto\n} from '@castcle-api/database/dtos';\nimport {\n  CredentialInterceptor,\n  CredentialRequest,\n  ContentInterceptor\n} from '@castcle-api/utils/interceptors';\nimport { CastcleException, CastcleStatus } from '@castcle-api/utils/exception';\nimport {\n  ApiBearerAuth,\n  ApiBody,\n  ApiHeader,\n  ApiOkResponse,\n  ApiProperty,\n  ApiResponse\n} from '@nestjs/swagger';\nimport { ContentDocument } from '@castcle-api/database/schemas';\nimport {\n  ContentTypePipe,\n  LimitPipe,\n  PagePipe,\n  SortByPipe\n} from '@castcle-api/utils/pipes';\nimport { Configs } from '@castcle-api/environments';\n\n@ApiHeader({\n  name: Configs.RequiredHeaders.AcceptLanguague.name,\n  description: Configs.RequiredHeaders.AcceptLanguague.description,\n  example: Configs.RequiredHeaders.AcceptLanguague.example,\n  required: true\n})\n@ApiHeader({\n  name: Configs.RequiredHeaders.AcceptVersion.name,\n  description: Configs.RequiredHeaders.AcceptVersion.description,\n  example: Configs.RequiredHeaders.AcceptVersion.example,\n  required: true\n})\n@Controller({\n  version: '1.0'\n})\n@Controller()\nexport class ContentController {\n  constructor(\n    private readonly appService: AppService,\n    private authService: AuthenticationService,\n    private userService: UserService,\n    private contentService: ContentService\n  ) {}\n  private readonly logger = new CastLogger(\n    ContentController.name,\n    CastLoggerOptions\n  );\n\n  @ApiBearerAuth()\n  @ApiBody({\n    type: SaveContentDto\n  })\n  @ApiResponse({\n    status: 201,\n    type: ContentResponse\n  })\n  @UseInterceptors(ContentInterceptor)\n  @Post('feed')\n  async createFeedContent(\n    @Body() body: SaveContentDto,\n    @Req() req: CredentialRequest\n  ) {\n    if (\n      req.$credential.account.isGuest ||\n      !req.$credential.account.activateDate\n    )\n      throw new CastcleException(\n        CastcleStatus.FORBIDDEN_REQUEST,\n        req.$language\n      );\n    const user = await this.userService.getUserFromCredential(req.$credential);\n    const content = await this.contentService.createContentFromUser(user, body);\n    return {\n      payload: content.toContentPayload()\n    } as ContentResponse;\n  }\n\n  @ApiBearerAuth()\n  @ApiOkResponse({\n    type: ContentResponse\n  })\n  @UseInterceptors(CredentialInterceptor)\n  @Get(':id')\n  async getContentFromId(\n    @Param('id') id: string,\n    @Req() req: CredentialRequest\n  ) {\n    const content = await this._getContentIfExist(id, req);\n    return {\n      payload: content.toContentPayload()\n    } as ContentResponse;\n  }\n\n  async _getContentIfExist(id: string, req: CredentialRequest) {\n    const content = await this.contentService.getContentFromId(id);\n    if (content) return content;\n    else\n      throw new CastcleException(\n        CastcleStatus.REQUEST_URL_NOT_FOUND,\n        req.$language\n      );\n  }\n\n  async _checkPermissionForUpdate(\n    content: ContentDocument,\n    req: CredentialRequest\n  ) {\n    if (\n      req.$credential.account.isGuest ||\n      !req.$credential.account.activateDate\n    )\n      throw new CastcleException(\n        CastcleStatus.FORBIDDEN_REQUEST,\n        req.$language\n      );\n    const user = await this.userService.getUserFromCredential(req.$credential);\n    const result = this.contentService.checkUserPermissionForEditContent(\n      user,\n      content\n    );\n    if (result) return true;\n    else\n      throw new CastcleException(\n        CastcleStatus.FORBIDDEN_REQUEST,\n        req.$language\n      );\n  }\n\n  @ApiBearerAuth()\n  @ApiBody({\n    type: SaveContentDto\n  })\n  @ApiOkResponse({\n    type: ContentResponse\n  })\n  @UseInterceptors(ContentInterceptor)\n  @Put(':id')\n  async updateContentFromId(\n    @Param('id') id: string,\n    @Body() body: SaveContentDto,\n    @Req() req: CredentialRequest\n  ) {\n    const content = await this._getContentIfExist(id, req);\n    await this._checkPermissionForUpdate(content, req);\n    const updatedContent = await this.contentService.updateContentFromId(\n      content._id,\n      body\n    );\n    return {\n      payload: updatedContent.toContentPayload()\n    } as ContentResponse;\n  }\n  @ApiBearerAuth()\n  @ApiResponse({\n    status: 204\n  })\n  @UseInterceptors(CredentialInterceptor)\n  @HttpCode(204)\n  @Delete(':id')\n  async deleteContentFromId(\n    @Param('id') id: string,\n    @Req() req: CredentialRequest\n  ) {\n    const content = await this._getContentIfExist(id, req);\n    await this._checkPermissionForUpdate(content, req);\n    content.delete();\n    return '';\n  }\n\n  @ApiBearerAuth()\n  @ApiOkResponse({\n    type: ContentResponse\n  })\n  @UseInterceptors(CredentialInterceptor)\n  @Get('')\n  async getContents(\n    @Param('id') id: string,\n    @Req() req: CredentialRequest,\n    @Query('sortBy', SortByPipe)\n    sortByOption: {\n      field: string;\n      type: 'desc' | 'asc';\n    } = DEFAULT_CONTENT_QUERY_OPTIONS.sortBy,\n    @Query('page', PagePipe)\n    pageOption: number = DEFAULT_CONTENT_QUERY_OPTIONS.page,\n    @Query('limit', LimitPipe)\n    limitOption: number = DEFAULT_CONTENT_QUERY_OPTIONS.limit,\n    @Query('type', ContentTypePipe)\n    contentTypeOption: ContentType = DEFAULT_CONTENT_QUERY_OPTIONS.type\n  ) {\n    const content = await this._getContentIfExist(id, req);\n    return {\n      payload: content.toContentPayload()\n    } as ContentResponse;\n  }\n\n  @ApiBearerAuth()\n  @ApiResponse({\n    status: 204\n  })\n  @UseInterceptors(CredentialInterceptor)\n  @Put(':id/liked')\n  @HttpCode(204)\n  async likeContent(\n    @Param('id') id: string,\n    @Body('authorId') authorId: string,\n    @Req() req: CredentialRequest\n  ) {\n    //TODO !!! has to add feedItem once implement\n    const content = await this._getContentIfExist(id, req);\n    const account = await this.authService.getAccountFromCredential(\n      req.$credential\n    );\n    const user = await this.userService.getUserFromId(authorId);\n    if (user.ownerAccount !== account._id) {\n      throw new CastcleException(\n        CastcleStatus.FORBIDDEN_REQUEST,\n        req.$language\n      );\n    }\n    await this.contentService.likeContent(content, user);\n    return '';\n  }\n\n  @ApiBearerAuth()\n  @ApiResponse({\n    status: 204\n  })\n  @UseInterceptors(CredentialInterceptor)\n  @Put(':id/unliked')\n  @HttpCode(204)\n  async unLikeContent(\n    @Param('id') id: string,\n    @Body('authorId') authorId: string,\n    @Req() req: CredentialRequest\n  ) {\n    //TODO !!! has to add feedItem once implement\n    const content = await this._getContentIfExist(id, req);\n    const account = await this.authService.getAccountFromCredential(\n      req.$credential\n    );\n    const user = await this.userService.getUserFromId(authorId);\n    if (user.ownerAccount !== account._id) {\n      throw new CastcleException(\n        CastcleStatus.FORBIDDEN_REQUEST,\n        req.$language\n      );\n    }\n    await this.contentService.unLikeContent(content, user);\n    return '';\n  }\n\n  @ApiBearerAuth()\n  @ApiResponse({\n    status: 201,\n    type: ContentResponse\n  })\n  @UseInterceptors(CredentialInterceptor)\n  @Post(':id/recast')\n  async recastContent(\n    @Param('id') id: string,\n    @Body('authorId') authorId: string,\n    @Req() req: CredentialRequest\n  ) {\n    //TODO !!! has to add feedItem once implement\n    const content = await this._getContentIfExist(id, req);\n    const account = await this.authService.getAccountFromCredential(\n      req.$credential\n    );\n    const user = await this.userService.getUserFromId(authorId);\n    if (user.ownerAccount !== account._id) {\n      throw new CastcleException(\n        CastcleStatus.FORBIDDEN_REQUEST,\n        req.$language\n      );\n    }\n    const result = await this.contentService.recastContentFromUser(\n      content,\n      user\n    );\n    return {\n      payload: result.recastContent.toContentPayload()\n    } as ContentResponse;\n  }\n\n  @ApiBearerAuth()\n  @ApiResponse({\n    status: 201,\n    type: ContentResponse\n  })\n  @UseInterceptors(CredentialInterceptor)\n  @Post(':id/quotecast')\n  async quoteContent(\n    @Param('id') id: string,\n    @Body('authorId') authorId: string,\n    @Body('message') message: string,\n    @Req() req: CredentialRequest\n  ) {\n    //TODO !!! has to add feedItem once implement\n    const content = await this._getContentIfExist(id, req);\n    const account = await this.authService.getAccountFromCredential(\n      req.$credential\n    );\n    const user = await this.userService.getUserFromId(authorId);\n    if (user.ownerAccount !== account._id) {\n      throw new CastcleException(\n        CastcleStatus.FORBIDDEN_REQUEST,\n        req.$language\n      );\n    }\n    const result = await this.contentService.quoteContentFromUser(\n      content,\n      user,\n      message\n    );\n    return {\n      payload: result.quoteContent.toContentPayload()\n    } as ContentResponse;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ContentController-1.html":{"url":"controllers/ContentController-1.html","title":"controller - ContentController-1","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ContentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/contents/src/app/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                _checkPermissionForUpdate\n                            \n                            \n                                    Async\n                                _getContentIfExist\n                            \n                            \n                                    Async\n                                createFeedContent\n                            \n                            \n                                    Async\n                                deleteContentFromId\n                            \n                            \n                                    Async\n                                getContentFromId\n                            \n                            \n                                    Async\n                                getContents\n                            \n                            \n                                    Async\n                                likeContent\n                            \n                            \n                                    Async\n                                quoteContent\n                            \n                            \n                                    Async\n                                recastContent\n                            \n                            \n                                    Async\n                                unLikeContent\n                            \n                            \n                                    Async\n                                updateContentFromId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        _checkPermissionForUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    _checkPermissionForUpdate(content: ContentDocument, req: CredentialRequest)\n                \n            \n\n\n            \n                \n                    Defined in apps/contents/src/app/app.controller.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                                ContentDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        _getContentIfExist\n                        \n                    \n                \n            \n            \n                \n                    \n                    _getContentIfExist(id: string, req: CredentialRequest)\n                \n            \n\n\n            \n                \n                    Defined in apps/contents/src/app/app.controller.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createFeedContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    createFeedContent(body: SaveContentDto, req: CredentialRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiBody({type: SaveContentDto})@ApiResponse({status: 201, type: ContentResponse})@UseInterceptors(ContentInterceptor)@Post('feed')\n                \n            \n\n            \n                \n                    Defined in apps/contents/src/app/app.controller.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                SaveContentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteContentFromId\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteContentFromId(id: string, req: CredentialRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiResponse({status: 204})@UseInterceptors(CredentialInterceptor)@HttpCode(204)@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/contents/src/app/app.controller.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getContentFromId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getContentFromId(id: string, req: CredentialRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiOkResponse({type: ContentResponse})@UseInterceptors(CredentialInterceptor)@Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/contents/src/app/app.controller.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getContents\n                        \n                    \n                \n            \n            \n                \n                    \n                    getContents(id: string, req: CredentialRequest, sortByOption: literal type, pageOption: number, limitOption: number, contentTypeOption: ContentType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiOkResponse({type: ContentResponse})@UseInterceptors(CredentialInterceptor)@Get('')\n                \n            \n\n            \n                \n                    Defined in apps/contents/src/app/app.controller.ts:228\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    sortByOption\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.sortBy\n                                    \n\n                                \n                                \n                                    pageOption\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.page\n                                    \n\n                                \n                                \n                                    limitOption\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.limit\n                                    \n\n                                \n                                \n                                    contentTypeOption\n                                    \n                                                ContentType\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.type\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        likeContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    likeContent(id: string, authorId: string, req: CredentialRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiResponse({status: 204})@UseInterceptors(CredentialInterceptor)@Put(':id/liked')@HttpCode(204)\n                \n            \n\n            \n                \n                    Defined in apps/contents/src/app/app.controller.ts:256\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    authorId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        quoteContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    quoteContent(id: string, authorId: string, message: string, req: CredentialRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiResponse({status: 201, type: ContentResponse})@UseInterceptors(CredentialInterceptor)@Post(':id/quotecast')\n                \n            \n\n            \n                \n                    Defined in apps/contents/src/app/app.controller.ts:345\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    authorId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        recastContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    recastContent(id: string, authorId: string, req: CredentialRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiResponse({status: 201, type: ContentResponse})@UseInterceptors(CredentialInterceptor)@Post(':id/recast')\n                \n            \n\n            \n                \n                    Defined in apps/contents/src/app/app.controller.ts:312\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    authorId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        unLikeContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    unLikeContent(id: string, authorId: string, req: CredentialRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiResponse({status: 204})@UseInterceptors(CredentialInterceptor)@Put(':id/unliked')@HttpCode(204)\n                \n            \n\n            \n                \n                    Defined in apps/contents/src/app/app.controller.ts:284\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    authorId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateContentFromId\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateContentFromId(id: string, body: SaveContentDto, req: CredentialRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiBody({type: SaveContentDto})@ApiOkResponse({type: ContentResponse})@UseInterceptors(ContentInterceptor)@Put(':id')\n                \n            \n\n            \n                \n                    Defined in apps/contents/src/app/app.controller.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                SaveContentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright (c) 2021, Castcle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 3 only, as\n * published by the Free Software Foundation.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n * version 3 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 3 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Castcle, 22 Phet Kasem 47/2 Alley, Bang Khae, Bangkok,\n * Thailand 10160, or visit www.castcle.com if you need additional information\n * or have any questions.\n */\n\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  Param,\n  Post,\n  Put,\n  Query,\n  Req,\n  UseInterceptors\n} from '@nestjs/common';\nimport { AppService } from './app.service';\nimport {\n  AuthenticationService,\n  UserService,\n  ContentService\n} from '@castcle-api/database';\nimport { CastLogger, CastLoggerOptions } from '@castcle-api/logger';\nimport {\n  ContentResponse,\n  ContentType,\n  DEFAULT_CONTENT_QUERY_OPTIONS,\n  SaveContentDto\n} from '@castcle-api/database/dtos';\nimport {\n  CredentialInterceptor,\n  CredentialRequest,\n  ContentInterceptor\n} from '@castcle-api/utils/interceptors';\nimport { CastcleException, CastcleStatus } from '@castcle-api/utils/exception';\nimport {\n  ApiBearerAuth,\n  ApiBody,\n  ApiHeader,\n  ApiOkResponse,\n  ApiProperty,\n  ApiResponse\n} from '@nestjs/swagger';\nimport { ContentDocument } from '@castcle-api/database/schemas';\nimport {\n  ContentTypePipe,\n  LimitPipe,\n  PagePipe,\n  SortByPipe\n} from '@castcle-api/utils/pipes';\nimport { Configs } from '@castcle-api/environments';\n\n@ApiHeader({\n  name: Configs.RequiredHeaders.AcceptLanguague.name,\n  description: Configs.RequiredHeaders.AcceptLanguague.description,\n  example: Configs.RequiredHeaders.AcceptLanguague.example,\n  required: true\n})\n@ApiHeader({\n  name: Configs.RequiredHeaders.AcceptVersion.name,\n  description: Configs.RequiredHeaders.AcceptVersion.description,\n  example: Configs.RequiredHeaders.AcceptVersion.example,\n  required: true\n})\n@Controller({\n  version: '1.0'\n})\n@Controller()\nexport class ContentController {\n  constructor(\n    private readonly appService: AppService,\n    private authService: AuthenticationService,\n    private userService: UserService,\n    private contentService: ContentService\n  ) {}\n  private readonly logger = new CastLogger(\n    ContentController.name,\n    CastLoggerOptions\n  );\n\n  @ApiBearerAuth()\n  @ApiBody({\n    type: SaveContentDto\n  })\n  @ApiResponse({\n    status: 201,\n    type: ContentResponse\n  })\n  @UseInterceptors(ContentInterceptor)\n  @Post('feed')\n  async createFeedContent(\n    @Body() body: SaveContentDto,\n    @Req() req: CredentialRequest\n  ) {\n    if (\n      req.$credential.account.isGuest ||\n      !req.$credential.account.activateDate\n    )\n      throw new CastcleException(\n        CastcleStatus.FORBIDDEN_REQUEST,\n        req.$language\n      );\n    const user = await this.userService.getUserFromCredential(req.$credential);\n    const content = await this.contentService.createContentFromUser(user, body);\n    return {\n      payload: content.toContentPayload()\n    } as ContentResponse;\n  }\n\n  @ApiBearerAuth()\n  @ApiOkResponse({\n    type: ContentResponse\n  })\n  @UseInterceptors(CredentialInterceptor)\n  @Get(':id')\n  async getContentFromId(\n    @Param('id') id: string,\n    @Req() req: CredentialRequest\n  ) {\n    const content = await this._getContentIfExist(id, req);\n    return {\n      payload: content.toContentPayload()\n    } as ContentResponse;\n  }\n\n  async _getContentIfExist(id: string, req: CredentialRequest) {\n    const content = await this.contentService.getContentFromId(id);\n    if (content) return content;\n    else\n      throw new CastcleException(\n        CastcleStatus.REQUEST_URL_NOT_FOUND,\n        req.$language\n      );\n  }\n\n  async _checkPermissionForUpdate(\n    content: ContentDocument,\n    req: CredentialRequest\n  ) {\n    if (\n      req.$credential.account.isGuest ||\n      !req.$credential.account.activateDate\n    )\n      throw new CastcleException(\n        CastcleStatus.FORBIDDEN_REQUEST,\n        req.$language\n      );\n    const user = await this.userService.getUserFromCredential(req.$credential);\n    const result = this.contentService.checkUserPermissionForEditContent(\n      user,\n      content\n    );\n    if (result) return true;\n    else\n      throw new CastcleException(\n        CastcleStatus.FORBIDDEN_REQUEST,\n        req.$language\n      );\n  }\n\n  @ApiBearerAuth()\n  @ApiBody({\n    type: SaveContentDto\n  })\n  @ApiOkResponse({\n    type: ContentResponse\n  })\n  @UseInterceptors(ContentInterceptor)\n  @Put(':id')\n  async updateContentFromId(\n    @Param('id') id: string,\n    @Body() body: SaveContentDto,\n    @Req() req: CredentialRequest\n  ) {\n    const content = await this._getContentIfExist(id, req);\n    await this._checkPermissionForUpdate(content, req);\n    const updatedContent = await this.contentService.updateContentFromId(\n      content._id,\n      body\n    );\n    return {\n      payload: updatedContent.toContentPayload()\n    } as ContentResponse;\n  }\n  @ApiBearerAuth()\n  @ApiResponse({\n    status: 204\n  })\n  @UseInterceptors(CredentialInterceptor)\n  @HttpCode(204)\n  @Delete(':id')\n  async deleteContentFromId(\n    @Param('id') id: string,\n    @Req() req: CredentialRequest\n  ) {\n    const content = await this._getContentIfExist(id, req);\n    await this._checkPermissionForUpdate(content, req);\n    content.delete();\n    return '';\n  }\n\n  @ApiBearerAuth()\n  @ApiOkResponse({\n    type: ContentResponse\n  })\n  @UseInterceptors(CredentialInterceptor)\n  @Get('')\n  async getContents(\n    @Param('id') id: string,\n    @Req() req: CredentialRequest,\n    @Query('sortBy', SortByPipe)\n    sortByOption: {\n      field: string;\n      type: 'desc' | 'asc';\n    } = DEFAULT_CONTENT_QUERY_OPTIONS.sortBy,\n    @Query('page', PagePipe)\n    pageOption: number = DEFAULT_CONTENT_QUERY_OPTIONS.page,\n    @Query('limit', LimitPipe)\n    limitOption: number = DEFAULT_CONTENT_QUERY_OPTIONS.limit,\n    @Query('type', ContentTypePipe)\n    contentTypeOption: ContentType = DEFAULT_CONTENT_QUERY_OPTIONS.type\n  ) {\n    const content = await this._getContentIfExist(id, req);\n    return {\n      payload: content.toContentPayload()\n    } as ContentResponse;\n  }\n\n  @ApiBearerAuth()\n  @ApiResponse({\n    status: 204\n  })\n  @UseInterceptors(CredentialInterceptor)\n  @Put(':id/liked')\n  @HttpCode(204)\n  async likeContent(\n    @Param('id') id: string,\n    @Body('authorId') authorId: string,\n    @Req() req: CredentialRequest\n  ) {\n    //TODO !!! has to add feedItem once implement\n    const content = await this._getContentIfExist(id, req);\n    const account = await this.authService.getAccountFromCredential(\n      req.$credential\n    );\n    const user = await this.userService.getUserFromId(authorId);\n    if (user.ownerAccount !== account._id) {\n      throw new CastcleException(\n        CastcleStatus.FORBIDDEN_REQUEST,\n        req.$language\n      );\n    }\n    await this.contentService.likeContent(content, user);\n    return '';\n  }\n\n  @ApiBearerAuth()\n  @ApiResponse({\n    status: 204\n  })\n  @UseInterceptors(CredentialInterceptor)\n  @Put(':id/unliked')\n  @HttpCode(204)\n  async unLikeContent(\n    @Param('id') id: string,\n    @Body('authorId') authorId: string,\n    @Req() req: CredentialRequest\n  ) {\n    //TODO !!! has to add feedItem once implement\n    const content = await this._getContentIfExist(id, req);\n    const account = await this.authService.getAccountFromCredential(\n      req.$credential\n    );\n    const user = await this.userService.getUserFromId(authorId);\n    if (user.ownerAccount !== account._id) {\n      throw new CastcleException(\n        CastcleStatus.FORBIDDEN_REQUEST,\n        req.$language\n      );\n    }\n    await this.contentService.unLikeContent(content, user);\n    return '';\n  }\n\n  @ApiBearerAuth()\n  @ApiResponse({\n    status: 201,\n    type: ContentResponse\n  })\n  @UseInterceptors(CredentialInterceptor)\n  @Post(':id/recast')\n  async recastContent(\n    @Param('id') id: string,\n    @Body('authorId') authorId: string,\n    @Req() req: CredentialRequest\n  ) {\n    //TODO !!! has to add feedItem once implement\n    const content = await this._getContentIfExist(id, req);\n    const account = await this.authService.getAccountFromCredential(\n      req.$credential\n    );\n    const user = await this.userService.getUserFromId(authorId);\n    if (user.ownerAccount !== account._id) {\n      throw new CastcleException(\n        CastcleStatus.FORBIDDEN_REQUEST,\n        req.$language\n      );\n    }\n    const result = await this.contentService.recastContentFromUser(\n      content,\n      user\n    );\n    return {\n      payload: result.recastContent.toContentPayload()\n    } as ContentResponse;\n  }\n\n  @ApiBearerAuth()\n  @ApiResponse({\n    status: 201,\n    type: ContentResponse\n  })\n  @UseInterceptors(CredentialInterceptor)\n  @Post(':id/quotecast')\n  async quoteContent(\n    @Param('id') id: string,\n    @Body('authorId') authorId: string,\n    @Body('message') message: string,\n    @Req() req: CredentialRequest\n  ) {\n    //TODO !!! has to add feedItem once implement\n    const content = await this._getContentIfExist(id, req);\n    const account = await this.authService.getAccountFromCredential(\n      req.$credential\n    );\n    const user = await this.userService.getUserFromId(authorId);\n    if (user.ownerAccount !== account._id) {\n      throw new CastcleException(\n        CastcleStatus.FORBIDDEN_REQUEST,\n        req.$language\n      );\n    }\n    const result = await this.contentService.quoteContentFromUser(\n      content,\n      user,\n      message\n    );\n    return {\n      payload: result.quoteContent.toContentPayload()\n    } as ContentResponse;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContentInterceptor.html":{"url":"injectables/ContentInterceptor.html","title":"injectable - ContentInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ContentInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/utils/interceptors/src/lib/contents/contents.interceptor.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CredentialInterceptor\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        intercept\n                        \n                    \n                \n            \n            \n                \n                    \n                    intercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Inherited from         CredentialInterceptor\n\n                \n            \n            \n                \n                        Defined in         CredentialInterceptor:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BlogPayload,\n  ContentPayloadDto,\n  ContentResponse,\n  ContentsResponse,\n  ContentType,\n  SaveContentDto,\n  ShortPayload\n} from '@castcle-api/database/dtos';\nimport {\n  CredentialInterceptor,\n  CredentialRequest\n} from '../credential/credential.interceptor';\nimport { CallHandler, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Image } from '@castcle-api/utils/aws';\nimport { map } from 'rxjs';\n\nconst transformContentPayload = (payload: ContentPayloadDto) => {\n  if (\n    payload.type === ContentType.Blog &&\n    (payload.payload as BlogPayload).photo &&\n    (payload.payload as BlogPayload).photo.cover\n  ) {\n    (payload.payload as BlogPayload).photo.cover.url = new Image(\n      (payload.payload as BlogPayload).photo.cover.url\n    ).toSignUrl();\n  }\n  if (\n    payload.payload.photo &&\n    payload.payload.photo.contents &&\n    payload.payload.photo.contents.length > 0\n  ) {\n    (payload.payload as BlogPayload).photo.contents = (\n      payload.payload as BlogPayload\n    ).photo.contents.map((url) => ({\n      url: new Image(url.url).toSignUrl()\n    }));\n  }\n  return payload;\n};\n\n//TO\n@Injectable()\nexport class ContentsInterceptor extends CredentialInterceptor {\n  async intercept(context: ExecutionContext, next: CallHandler) {\n    const superResult = await super.intercept(context, next);\n    return superResult.pipe(\n      map((data: ContentsResponse) => {\n        data.payload = data.payload.map((payload) =>\n          transformContentPayload(payload)\n        );\n        return data;\n      })\n    );\n  }\n}\n\n@Injectable()\nexport class ContentInterceptor extends CredentialInterceptor {\n  async intercept(context: ExecutionContext, next: CallHandler) {\n    const superResult = await super.intercept(context, next);\n    const req = context.switchToHttp().getRequest() as CredentialRequest;\n    const body = req.body as SaveContentDto;\n    if (body && body.payload.photo) {\n      const contentImages = body.payload.photo.contents.map((url, index) =>\n        Image.upload(url.url, {\n          filename: `${req.$credential._id}-${body.type}-images-${index}`,\n          addTime: true,\n          order: index\n        })\n      );\n      const uploadResult = await Promise.all(contentImages);\n      const uploadedImages = uploadResult.sort((a, b) => {\n        if (a.order > b.order) return -1;\n        else return 1;\n      });\n      body.payload.photo.contents = body.payload.photo.contents.map(\n        (url, index) => {\n          url.url = uploadedImages[index].uri;\n          return url;\n        }\n      );\n      if (\n        body.type === ContentType.Blog &&\n        (body.payload as BlogPayload).photo.cover\n      ) {\n        const cover = await Image.upload(\n          (body.payload as BlogPayload).photo.cover.url,\n          {\n            filename: `${req.$credential._id}-${body.type}-cover`,\n            addTime: true\n          }\n        );\n        const cover_url = cover.uri;\n        (body.payload as BlogPayload).photo.cover.url = cover_url;\n      }\n    }\n\n    return superResult.pipe(\n      map((data: ContentResponse) => {\n        console.log('from', data);\n        data.payload = transformContentPayload(data.payload);\n        return data;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContentItem.html":{"url":"classes/ContentItem.html","title":"class - ContentItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContentItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/schemas/contentItem.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Intent to use for Datasci\n\n            \n\n            \n                Extends\n            \n            \n                        CastcleBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aggregator\n                            \n                            \n                                author\n                            \n                            \n                                content\n                            \n                            \n                                viewer\n                            \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                visibility\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        aggregator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/contentItem.schema.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined, ref: 'User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/contentItem.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Content\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined, ref: 'Content'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/contentItem.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Account\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined, ref: 'Account'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/contentItem.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        visibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityVisibility\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:37\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Content } from \"./content.schema\";\nimport { User } from \"./user.schema\";\nimport * as mongoose from 'mongoose';\nimport { Prop } from \"@nestjs/mongoose\";\nimport { Account } from \"./account.schema\";\nimport { CastcleBase } from \"./base.schema\";\n\n/**\n * Intent to use for Datasci\n */\nexport class ContentItem extends CastcleBase{\n\n  @Prop({\n    required: true,\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Content'\n  })\n  content:Content\n\n  @Prop({\n    required: true,\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'User'\n  })\n  author:User\n\n  @Prop({\n    required: true,\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Account'\n  })\n  viewer:Account\n\n  @Prop({\n    required: true,\n    type: Object\n  })\n  aggregator:any;\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContentPayloadDto.html":{"url":"classes/ContentPayloadDto.html","title":"class - ContentPayloadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContentPayloadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/content.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                commented\n                            \n                            \n                                created\n                            \n                            \n                                feature\n                            \n                            \n                                id\n                            \n                            \n                                liked\n                            \n                            \n                                payload\n                            \n                            \n                                    Optional\n                                quoteCast\n                            \n                            \n                                    Optional\n                                recasted\n                            \n                            \n                                type\n                            \n                            \n                                updated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Author\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:182\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commented\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Comment\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:173\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:185\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        feature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Feature\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:167\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:153\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        liked\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Like\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:170\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ShortPayload | BlogPayload | QuotePayload | RecastPayload\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:164\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        quoteCast\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ContentPayloadDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:179\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        recasted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Recast\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:176\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ContentType.Short | ContentType.Blog | ContentType.Image | ContentType.Quote | ContentType.Recast\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:156\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:187\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Pagination } from './common.dto';\nimport { CastcleQueryOptions } from './common.dto';\n\nclass Url {\n  @ApiProperty()\n  url: string;\n}\n\nclass Link {\n  @ApiProperty()\n  type: string;\n\n  @ApiProperty()\n  url: string;\n}\n\nclass BlogPhoto {\n  @ApiProperty()\n  cover: Url;\n\n  @ApiProperty()\n  contents: Url[];\n}\n\nclass ShortPhoto {\n  @ApiProperty()\n  contents: Url[];\n}\n\nexport class ShortPayload {\n  @ApiProperty()\n  message?: string;\n  @ApiProperty()\n  photo?: ShortPhoto;\n  @ApiProperty()\n  link?: Link[];\n}\n\nexport class ImagePayload {\n  @ApiProperty()\n  photo?: ShortPhoto;\n}\n\nexport class BlogPayload {\n  @ApiProperty()\n  header: string;\n  @ApiProperty()\n  message: string;\n  @ApiProperty()\n  photo?: BlogPhoto;\n\n  link?: Link[];\n}\n\nexport class QuotePayload {\n  source: any; //contain content._id\n  message?: string;\n  photo?: ShortPhoto;\n}\n\nexport class RecastPayload {\n  source: any; //contain content._id\n  photo?: ShortPhoto;\n}\n\nclass Feature {\n  @ApiProperty()\n  slug: 'feed';\n  @ApiProperty()\n  name: 'Feed';\n  @ApiProperty()\n  key: 'feature.feed';\n}\n\nclass Participant {\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  name: string;\n}\n\nclass Like {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  liked: boolean; // viewer like it or not\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Comment {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  commented: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Recast {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  recasted: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nexport class Author {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  castcleId: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  avatar: string | null;\n  @ApiProperty()\n  verified: boolean;\n  @ApiProperty()\n  followed: boolean;\n}\n\nexport class ContentPayloadDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  type:\n    | ContentType.Short\n    | ContentType.Blog\n    | ContentType.Image\n    | ContentType.Quote\n    | ContentType.Recast;\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | QuotePayload | RecastPayload;\n\n  @ApiProperty()\n  feature: Feature;\n\n  @ApiProperty()\n  liked: Like;\n\n  @ApiProperty()\n  commented: Comment;\n\n  @ApiProperty()\n  recasted?: Recast;\n\n  @ApiProperty()\n  quoteCast?: ContentPayloadDto;\n\n  @ApiProperty()\n  author: Author;\n\n  @ApiProperty()\n  created: string;\n  @ApiProperty()\n  updated: string;\n}\n\nclass AuthorDto {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n}\n\nexport class SaveContentDto {\n  @ApiProperty()\n  type: 'short' | 'blog' | 'image';\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | ImagePayload;\n\n  @ApiProperty()\n  author?: AuthorDto;\n}\n\nexport enum ContentType {\n  Short = 'short',\n  Blog = 'blog',\n  Image = 'image',\n  Recast = 'recast',\n  Quote = 'quote'\n}\n\nexport class CastcleContentQueryOptions extends CastcleQueryOptions {\n  type?: ContentType;\n}\n\nexport const DEFAULT_CONTENT_QUERY_OPTIONS = {\n  sortBy: {\n    field: 'updatedAt',\n    type: 'desc'\n  },\n  type: ContentType.Short,\n  page: 1,\n  limit: 25\n} as CastcleContentQueryOptions;\n\nexport class ContentResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto;\n}\n\nexport class ContentsResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContentResponse.html":{"url":"classes/ContentResponse.html","title":"class - ContentResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContentResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/content.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                payload\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ContentPayloadDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:232\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Pagination } from './common.dto';\nimport { CastcleQueryOptions } from './common.dto';\n\nclass Url {\n  @ApiProperty()\n  url: string;\n}\n\nclass Link {\n  @ApiProperty()\n  type: string;\n\n  @ApiProperty()\n  url: string;\n}\n\nclass BlogPhoto {\n  @ApiProperty()\n  cover: Url;\n\n  @ApiProperty()\n  contents: Url[];\n}\n\nclass ShortPhoto {\n  @ApiProperty()\n  contents: Url[];\n}\n\nexport class ShortPayload {\n  @ApiProperty()\n  message?: string;\n  @ApiProperty()\n  photo?: ShortPhoto;\n  @ApiProperty()\n  link?: Link[];\n}\n\nexport class ImagePayload {\n  @ApiProperty()\n  photo?: ShortPhoto;\n}\n\nexport class BlogPayload {\n  @ApiProperty()\n  header: string;\n  @ApiProperty()\n  message: string;\n  @ApiProperty()\n  photo?: BlogPhoto;\n\n  link?: Link[];\n}\n\nexport class QuotePayload {\n  source: any; //contain content._id\n  message?: string;\n  photo?: ShortPhoto;\n}\n\nexport class RecastPayload {\n  source: any; //contain content._id\n  photo?: ShortPhoto;\n}\n\nclass Feature {\n  @ApiProperty()\n  slug: 'feed';\n  @ApiProperty()\n  name: 'Feed';\n  @ApiProperty()\n  key: 'feature.feed';\n}\n\nclass Participant {\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  name: string;\n}\n\nclass Like {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  liked: boolean; // viewer like it or not\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Comment {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  commented: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Recast {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  recasted: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nexport class Author {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  castcleId: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  avatar: string | null;\n  @ApiProperty()\n  verified: boolean;\n  @ApiProperty()\n  followed: boolean;\n}\n\nexport class ContentPayloadDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  type:\n    | ContentType.Short\n    | ContentType.Blog\n    | ContentType.Image\n    | ContentType.Quote\n    | ContentType.Recast;\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | QuotePayload | RecastPayload;\n\n  @ApiProperty()\n  feature: Feature;\n\n  @ApiProperty()\n  liked: Like;\n\n  @ApiProperty()\n  commented: Comment;\n\n  @ApiProperty()\n  recasted?: Recast;\n\n  @ApiProperty()\n  quoteCast?: ContentPayloadDto;\n\n  @ApiProperty()\n  author: Author;\n\n  @ApiProperty()\n  created: string;\n  @ApiProperty()\n  updated: string;\n}\n\nclass AuthorDto {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n}\n\nexport class SaveContentDto {\n  @ApiProperty()\n  type: 'short' | 'blog' | 'image';\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | ImagePayload;\n\n  @ApiProperty()\n  author?: AuthorDto;\n}\n\nexport enum ContentType {\n  Short = 'short',\n  Blog = 'blog',\n  Image = 'image',\n  Recast = 'recast',\n  Quote = 'quote'\n}\n\nexport class CastcleContentQueryOptions extends CastcleQueryOptions {\n  type?: ContentType;\n}\n\nexport const DEFAULT_CONTENT_QUERY_OPTIONS = {\n  sortBy: {\n    field: 'updatedAt',\n    type: 'desc'\n  },\n  type: ContentType.Short,\n  page: 1,\n  limit: 25\n} as CastcleContentQueryOptions;\n\nexport class ContentResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto;\n}\n\nexport class ContentsResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContentService.html":{"url":"injectables/ContentService.html","title":"injectable - ContentService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ContentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/services/content.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _accountModel\n                            \n                            \n                                    Public\n                                _contentModel\n                            \n                            \n                                    Public\n                                _credentialModel\n                            \n                            \n                                    Public\n                                _engagementModel\n                            \n                            \n                                _getAuthorFromUser\n                            \n                            \n                                    Public\n                                _revisionModel\n                            \n                            \n                                    Public\n                                _userModel\n                            \n                            \n                                checkUserPermissionForEditContent\n                            \n                            \n                                deleteContentFromId\n                            \n                            \n                                getContentFromId\n                            \n                            \n                                getContentRevisions\n                            \n                            \n                                getContentsFromUser\n                            \n                            \n                                getLikeParticipants\n                            \n                            \n                                likeContent\n                            \n                            \n                                quoteContentFromUser\n                            \n                            \n                                recastContentFromUser\n                            \n                            \n                                recoverContentFromId\n                            \n                            \n                                unLikeContent\n                            \n                            \n                                updateContentFromId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createContentFromUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_accountModel: Model, _credentialModel: CredentialModel, _userModel: Model, _contentModel: Model, _revisionModel: Model, _engagementModel: Model)\n                    \n                \n                        \n                            \n                                Defined in libs/database/src/lib/services/content.service.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _accountModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _credentialModel\n                                                  \n                                                        \n                                                                        CredentialModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _contentModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _revisionModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _engagementModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createContentFromUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createContentFromUser(user: UserDocument, contentDto: SaveContentDto)\n                \n            \n\n\n            \n                \n                    Defined in libs/database/src/lib/services/content.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the user that create this content if contentDto has no author this will be author by default\n\n                                    \n                                \n                                \n                                    contentDto\n                                    \n                                                SaveContentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the content Dto that required for create a conent\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        content.save() result\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _accountModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectModel('Account')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/content.service.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _contentModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectModel('Content')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/content.service.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _credentialModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CredentialModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectModel('Credential')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/content.service.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _engagementModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectModel('Engagement')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/content.service.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _getAuthorFromUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/content.service.ts:326\n                        \n                    \n\n            \n                \n                    transform User => Author object for create a content and use as DTO\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                        \n                                    \n                                    \n                                            \n                                                    user\n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _revisionModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectModel('Revision')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/content.service.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _userModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectModel('User')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/content.service.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkUserPermissionForEditContent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/content.service.ts:197\n                        \n                    \n\n            \n                \n                    check content.author.id === user._id\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                        \n                                    \n                                    \n                                            \n                                                    user\n                                            \n                                            \n                                                    content\n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteContentFromId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/content.service.ts:108\n                        \n                    \n\n            \n                \n                    Set content visibility to deleted\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                        \n                                    \n                                    \n                                            \n                                                    id\n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getContentFromId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/content.service.ts:96\n                        \n                    \n\n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    id\n                                                    \n                                                            get content from content's id\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getContentRevisions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/content.service.ts:240\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getContentsFromUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/content.service.ts:208\n                        \n                    \n\n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    user\n                                                    \n                                                    \n                                            \n                                            \n                                                    options\n                                                    \n                                                            contain option for sorting page = skip + 1,\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLikeParticipants\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/content.service.ts:295\n                        \n                    \n\n            \n                \n                    get how many user like this content by populate user from engagement and filter it with user._id\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    content\n                                                    \n                                                            current content\n\n                                                    \n                                            \n                                            \n                                                    user\n                                                    \n                                                            current user\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        likeContent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/content.service.ts:250\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quoteContentFromUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/content.service.ts:342\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recastContentFromUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/content.service.ts:374\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recoverContentFromId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/content.service.ts:144\n                        \n                    \n\n            \n                \n                    update aggregator of recast/quote and get content status back to publish\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    id\n                                                    \n                                                            of content\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unLikeContent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/content.service.ts:274\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateContentFromId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/content.service.ts:184\n                        \n                    \n\n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                        \n                                    \n                                    \n                                            \n                                                    id\n                                            \n                                            \n                                                    contentDto\n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n\n\n    \n\n\n    \n        import { Model } from 'mongoose';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { AccountDocument } from '../schemas/account.schema';\nimport { CredentialDocument, CredentialModel } from '../schemas';\nimport { User, UserDocument, UserType } from '../schemas/user.schema';\nimport { ContentDocument, Content } from '../schemas/content.schema';\nimport {\n  EngagementDocument,\n  EngagementType\n} from '../schemas/engagement.schema';\nimport { createPagination } from '../utils/common';\nimport { PageDto, UpdateUserDto } from '../dtos/user.dto';\nimport {\n  SaveContentDto,\n  ContentPayloadDto,\n  Author,\n  CastcleContentQueryOptions,\n  DEFAULT_CONTENT_QUERY_OPTIONS,\n  ContentResponse,\n  ContentType,\n  QuotePayload,\n  RecastPayload\n} from '../dtos/content.dto';\nimport { RevisionDocument } from '../schemas/revision.schema';\nimport { EntityVisibility } from '../dtos/common.dto';\n\n@Injectable()\nexport class ContentService {\n  constructor(\n    @InjectModel('Account') public _accountModel: Model,\n    @InjectModel('Credential')\n    public _credentialModel: CredentialModel,\n    @InjectModel('User')\n    public _userModel: Model,\n    @InjectModel('Content')\n    public _contentModel: Model,\n    @InjectModel('Revision')\n    public _revisionModel: Model,\n    @InjectModel('Engagement')\n    public _engagementModel: Model\n  ) {}\n\n  /**\n   *\n   * @param {UserDocument} user the user that create this content if contentDto has no author this will be author by default\n   * @param {SaveContentDto} contentDto the content Dto that required for create a conent\n   * @returns {ContentDocument} content.save() result\n   */\n  async createContentFromUser(user: UserDocument, contentDto: SaveContentDto) {\n    let author: Author;\n    if (!contentDto.author) author = this._getAuthorFromUser(user);\n    else {\n      const page = await this._userModel.findById(contentDto.author.id);\n      author = this._getAuthorFromUser(page);\n    }\n    const newContent = {\n      author: author,\n      payload: contentDto.payload,\n      revisionCount: 0,\n      type: contentDto.type,\n      visibility: EntityVisibility.Publish\n    } as Content;\n    const content = new this._contentModel(newContent);\n    return content.save();\n  }\n\n  /**\n   *\n   * @param {string} id get content from content's id\n   * @returns {ContentDocument}\n   */\n  getContentFromId = async (id: string) => {\n    const content = await this._contentModel.findById(id).exec();\n    if (content && content.visibility === EntityVisibility.Publish)\n      return content;\n    return null;\n  };\n\n  /**\n   * Set content visibility to deleted\n   * @param {string} id\n   * @returns {ContentDocument}\n   */\n  deleteContentFromId = async (id: string) => {\n    const content = await this._contentModel.findById(id).exec();\n    content.visibility = EntityVisibility.Deleted;\n    if (\n      content.type === ContentType.Quote ||\n      content.type === ContentType.Recast\n    ) {\n      const sourceContent = await this._contentModel\n        .findById((content.payload as RecastPayload).source)\n        .exec();\n      const engagementType =\n        content.type === ContentType.Quote\n          ? EngagementType.Quote\n          : EngagementType.Recast;\n      const incEngagment: { [key: string]: number } = {};\n      incEngagment[`engagements.${engagementType}.count`] = -1;\n      //use update to byPass save hook to prevent recursive and revision api\n      const updateResult = await this._contentModel\n        .updateOne(\n          { _id: sourceContent._id },\n          {\n            $inc: incEngagment\n          }\n        )\n        .exec();\n      //if update not success return false\n      console.log(updateResult);\n    }\n    return content.save();\n  };\n\n  /**\n   * update aggregator of recast/quote and get content status back to publish\n   * @param {streieng} id of content\n   * @returns {ContentDocument | null}\n   */\n  recoverContentFromId = async (id: string) => {\n    const content = await this._contentModel.findById(id).exec();\n    if (content.visibility !== EntityVisibility.Publish) {\n      //recover engagement quote/recast\n      if (\n        content.type === ContentType.Quote ||\n        content.type === ContentType.Recast\n      ) {\n        const sourceContent = await this._contentModel\n          .findById((content.payload as RecastPayload).source)\n          .exec();\n        const engagementType =\n          content.type === ContentType.Quote\n            ? EngagementType.Quote\n            : EngagementType.Recast;\n        const incEngagment: { [key: string]: number } = {};\n        incEngagment[`engagements.${engagementType}.count`] = 1;\n        //use update to byPass save hook to prevent recursive and revision api\n        const updateResult = await this._contentModel\n          .updateOne(\n            { _id: sourceContent._id },\n            {\n              $inc: incEngagment\n            }\n          )\n          .exec();\n        //if update not success return false\n        console.log(updateResult);\n      }\n      content.visibility = EntityVisibility.Publish;\n      return content.save();\n    } else return null; //content already recover;\n  };\n\n  /**\n   *\n   * @param {string} id\n   * @param {SaveContentDto} contentDto\n   * @returns {ContentDocument}\n   */\n  updateContentFromId = async (id: string, contentDto: SaveContentDto) => {\n    const content = await this._contentModel.findById(id).exec();\n    content.payload = contentDto.payload;\n    content.type = contentDto.type;\n    return content.save();\n  };\n\n  /**\n   * check content.author.id === user._id\n   * @param {UserDocument} user\n   * @param {ContentDocument} content\n   * @returns {Promise}\n   */\n  checkUserPermissionForEditContent = async (\n    user: UserDocument,\n    content: ContentDocument\n  ) => content.author.id === user._id;\n\n  /**\n   *\n   * @param {UserDocument} user\n   * @param {CastcleQueryOptions} options contain option for sorting page = skip + 1,\n   * @returns {Promise}\n   */\n  getContentsFromUser = async (\n    user: UserDocument,\n    options: CastcleContentQueryOptions = DEFAULT_CONTENT_QUERY_OPTIONS\n  ) => {\n    const findFilter: {\n      'author.id': any;\n      type?: string;\n      visibility: EntityVisibility;\n    } = {\n      'author.id': user._id,\n      visibility: EntityVisibility.Publish\n    };\n    if (options.type) findFilter.type = options.type;\n    const query = this._contentModel\n      .find(findFilter)\n      .skip(options.page - 1)\n      .limit(options.limit);\n    const totalDocument = await this._contentModel.count(findFilter).exec();\n    if (options.sortBy.type === 'desc') {\n      return {\n        total: totalDocument,\n        items: await query.sort(`-${options.sortBy.field}`).exec(),\n        pagination: createPagination(options, totalDocument)\n      };\n    } else\n      return {\n        total: totalDocument,\n        items: await query.sort(`${options.sortBy.field}`).exec(),\n        pagination: createPagination(options, totalDocument)\n      };\n  };\n\n  getContentRevisions = async (content: ContentDocument) =>\n    this._revisionModel\n      .find({\n        objectRef: {\n          $ref: 'content',\n          $id: content._id\n        }\n      })\n      .exec();\n\n  likeContent = async (content: ContentDocument, user: UserDocument) => {\n    let engagement = await this._engagementModel.findOne({\n      user: user._id,\n      targetRef: {\n        $ref: 'content',\n        $id: content._id\n      },\n      type: EngagementType.Like\n    });\n    if (!engagement)\n      engagement = new this._engagementModel({\n        type: EngagementType.Like,\n        user: user._id,\n        targetRef: {\n          $ref: 'content',\n          $id: content._id\n        },\n        visibility: EntityVisibility.Publish\n      });\n    engagement.type = EngagementType.Like;\n    engagement.visibility = EntityVisibility.Publish;\n    return engagement.save();\n  };\n\n  unLikeContent = async (content: ContentDocument, user: UserDocument) => {\n    const engagement = await this._engagementModel\n      .findOne({\n        user: user._id,\n        targetRef: {\n          $ref: 'content',\n          $id: content._id\n        },\n        type: EngagementType.Like\n      })\n      .exec();\n    if (!engagement) return null;\n    return engagement.remove();\n  };\n\n  /**\n   * get how many user like this content by populate user from engagement and filter it with user._id\n   * @param {ContentDocument} content current content\n   * @param {UserDocument} user current user\n   * @returns {liked:boolean, participant:string[]}\n   */\n  getLikeParticipants = async (\n    content: ContentDocument,\n    user: UserDocument\n  ) => {\n    //get whether use is like\n    const likeResult = await this._engagementModel\n      .find({\n        targetRef: {\n          $ref: 'content',\n          $id: content._id\n        },\n        type: EngagementType.Like,\n        visibility: EntityVisibility.Publish\n      })\n      .populate('user')\n      .exec();\n    const liked = likeResult.find(\n      (engagement) => engagement.user._id === user._id\n    )\n      ? true\n      : false;\n    const participants = likeResult.map((eng) => eng.user.displayName);\n    return { liked, participants };\n  };\n\n  /**\n   * transform User => Author object for create a content and use as DTO\n   * @private\n   * @param {UserDocument} user\n   * @returns {Author}\n   */\n  _getAuthorFromUser = (user: UserDocument) => {\n    const author: Author = {\n      id: user._id,\n      avatar:\n        user.profile && user.profile.images && user.profile.images.avatar\n          ? user.profile.images.avatar\n          : null,\n      castcleId: user.displayId,\n      displayName: user.displayName,\n      followed: false,\n      type: user.type === UserType.Page ? UserType.Page : UserType.People,\n      verified: user.verified ? true : false\n    };\n    return author;\n  };\n\n  quoteContentFromUser = async (\n    content: ContentDocument,\n    user: UserDocument,\n    message?: string\n  ) => {\n    const author = this._getAuthorFromUser(user);\n    const sourceContentId =\n      content.type === ContentType.Recast || content.type === ContentType.Quote\n        ? (content.payload as RecastPayload).source\n        : content._id;\n    const newContent = {\n      author: author,\n      payload: {\n        source: sourceContentId,\n        message: message\n      } as QuotePayload,\n      revisionCount: 0,\n      type: ContentType.Quote\n    } as Content;\n    const quoteContent = await new this._contentModel(newContent).save();\n    const engagement = await new this._engagementModel({\n      type: EngagementType.Quote,\n      user: user._id,\n      targetRef: {\n        $ref: 'content',\n        $id: sourceContentId\n      },\n      visibility: EntityVisibility.Publish\n    }).save();\n    return { quoteContent, engagement };\n  };\n\n  recastContentFromUser = async (\n    content: ContentDocument,\n    user: UserDocument\n  ) => {\n    const author = this._getAuthorFromUser(user);\n    const sourceContentId =\n      content.type === ContentType.Recast || content.type === ContentType.Quote\n        ? (content.payload as RecastPayload).source\n        : content._id;\n    const newContent = {\n      author: author,\n      payload: {\n        source: sourceContentId\n      } as RecastPayload,\n      revisionCount: 0,\n      type: ContentType.Recast\n    } as Content;\n    const recastContent = await new this._contentModel(newContent).save();\n    const engagement = await new this._engagementModel({\n      type: EngagementType.Recast,\n      user: user._id,\n      targetRef: {\n        $ref: 'content',\n        $id: sourceContentId\n      },\n      visibility: EntityVisibility.Publish\n    }).save();\n    return { recastContent, engagement };\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContentTypePipe.html":{"url":"injectables/ContentTypePipe.html","title":"injectable - ContentTypePipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ContentTypePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/utils/pipes/src/lib/query/query.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                ContentTypePipe will transform to actual type in ContentType Enum default would be 'short'\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(typeQuery?: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/utils/pipes/src/lib/query/query.pipe.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typeQuery\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ContentType\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ArgumentMetadata, Injectable, PipeTransform } from '@nestjs/common';\nimport {\n  DEFAULT_CONTENT_QUERY_OPTIONS,\n  DEFAULT_QUERY_OPTIONS\n} from '@castcle-api/database/dtos';\nimport { ContentType } from '@castcle-api/database/dtos';\n\n//TODO !!! need to move this to somewhere else\nexport const LIMIT_MAX = 1000;\n\nexport enum SortByEnum {\n  Desc = 'desc',\n  Asc = 'asc'\n}\n\n/**\n * SortByPipe will transform query params to {field:`sortField`, type:`desc|asc`}\n */\n@Injectable()\nexport class SortByPipe implements PipeTransform {\n  /**\n   *\n   * @param {string} sortByQuery\n   * @returns {field:string, type:string}\n   */\n  transform(sortByQuery?: string): { field: string; type: string } {\n    if (sortByQuery && sortByQuery.match(/(desc|asc)\\((\\w+)\\)/)) {\n      const sortByResult = sortByQuery.match(/(desc|asc)\\((\\w+)\\)/);\n      return {\n        type:\n          sortByResult[1] === SortByEnum.Desc\n            ? SortByEnum.Desc\n            : SortByEnum.Asc,\n        field: sortByResult[2]\n      };\n    } else {\n      return DEFAULT_QUERY_OPTIONS.sortBy;\n    }\n  }\n}\n/**\n * PagePipe will transform query params to number default would be 0\n */\n@Injectable()\nexport class PagePipe implements PipeTransform {\n  /**\n   *\n   * @param {string} pageQuery\n   * @returns {number}\n   */\n  transform(pageQuery?: string): number {\n    if (pageQuery && !isNaN(Number(pageQuery))) return Number(pageQuery);\n    return DEFAULT_QUERY_OPTIONS.page;\n  }\n}\n\n/**\n * LimitPipe will transform query params to number default would be 25\n */\n@Injectable()\nexport class LimitPipe implements PipeTransform {\n  /**\n   *\n   * @param {string} limitQuery\n   * @returns {number}\n   */\n  transform(limitQuery?: string): number {\n    if (limitQuery && !isNaN(Number(limitQuery)))\n      return Number(limitQuery) \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContentsInterceptor.html":{"url":"injectables/ContentsInterceptor.html","title":"injectable - ContentsInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ContentsInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/utils/interceptors/src/lib/contents/contents.interceptor.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CredentialInterceptor\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        intercept\n                        \n                    \n                \n            \n            \n                \n                    \n                    intercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Inherited from         CredentialInterceptor\n\n                \n            \n            \n                \n                        Defined in         CredentialInterceptor:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BlogPayload,\n  ContentPayloadDto,\n  ContentResponse,\n  ContentsResponse,\n  ContentType,\n  SaveContentDto,\n  ShortPayload\n} from '@castcle-api/database/dtos';\nimport {\n  CredentialInterceptor,\n  CredentialRequest\n} from '../credential/credential.interceptor';\nimport { CallHandler, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Image } from '@castcle-api/utils/aws';\nimport { map } from 'rxjs';\n\nconst transformContentPayload = (payload: ContentPayloadDto) => {\n  if (\n    payload.type === ContentType.Blog &&\n    (payload.payload as BlogPayload).photo &&\n    (payload.payload as BlogPayload).photo.cover\n  ) {\n    (payload.payload as BlogPayload).photo.cover.url = new Image(\n      (payload.payload as BlogPayload).photo.cover.url\n    ).toSignUrl();\n  }\n  if (\n    payload.payload.photo &&\n    payload.payload.photo.contents &&\n    payload.payload.photo.contents.length > 0\n  ) {\n    (payload.payload as BlogPayload).photo.contents = (\n      payload.payload as BlogPayload\n    ).photo.contents.map((url) => ({\n      url: new Image(url.url).toSignUrl()\n    }));\n  }\n  return payload;\n};\n\n//TO\n@Injectable()\nexport class ContentsInterceptor extends CredentialInterceptor {\n  async intercept(context: ExecutionContext, next: CallHandler) {\n    const superResult = await super.intercept(context, next);\n    return superResult.pipe(\n      map((data: ContentsResponse) => {\n        data.payload = data.payload.map((payload) =>\n          transformContentPayload(payload)\n        );\n        return data;\n      })\n    );\n  }\n}\n\n@Injectable()\nexport class ContentInterceptor extends CredentialInterceptor {\n  async intercept(context: ExecutionContext, next: CallHandler) {\n    const superResult = await super.intercept(context, next);\n    const req = context.switchToHttp().getRequest() as CredentialRequest;\n    const body = req.body as SaveContentDto;\n    if (body && body.payload.photo) {\n      const contentImages = body.payload.photo.contents.map((url, index) =>\n        Image.upload(url.url, {\n          filename: `${req.$credential._id}-${body.type}-images-${index}`,\n          addTime: true,\n          order: index\n        })\n      );\n      const uploadResult = await Promise.all(contentImages);\n      const uploadedImages = uploadResult.sort((a, b) => {\n        if (a.order > b.order) return -1;\n        else return 1;\n      });\n      body.payload.photo.contents = body.payload.photo.contents.map(\n        (url, index) => {\n          url.url = uploadedImages[index].uri;\n          return url;\n        }\n      );\n      if (\n        body.type === ContentType.Blog &&\n        (body.payload as BlogPayload).photo.cover\n      ) {\n        const cover = await Image.upload(\n          (body.payload as BlogPayload).photo.cover.url,\n          {\n            filename: `${req.$credential._id}-${body.type}-cover`,\n            addTime: true\n          }\n        );\n        const cover_url = cover.uri;\n        (body.payload as BlogPayload).photo.cover.url = cover_url;\n      }\n    }\n\n    return superResult.pipe(\n      map((data: ContentResponse) => {\n        console.log('from', data);\n        data.payload = transformContentPayload(data.payload);\n        return data;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContentsResponse.html":{"url":"classes/ContentsResponse.html","title":"class - ContentsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContentsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/content.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pagination\n                            \n                            \n                                payload\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        pagination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pagination\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:240\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ContentPayloadDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:237\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Pagination } from './common.dto';\nimport { CastcleQueryOptions } from './common.dto';\n\nclass Url {\n  @ApiProperty()\n  url: string;\n}\n\nclass Link {\n  @ApiProperty()\n  type: string;\n\n  @ApiProperty()\n  url: string;\n}\n\nclass BlogPhoto {\n  @ApiProperty()\n  cover: Url;\n\n  @ApiProperty()\n  contents: Url[];\n}\n\nclass ShortPhoto {\n  @ApiProperty()\n  contents: Url[];\n}\n\nexport class ShortPayload {\n  @ApiProperty()\n  message?: string;\n  @ApiProperty()\n  photo?: ShortPhoto;\n  @ApiProperty()\n  link?: Link[];\n}\n\nexport class ImagePayload {\n  @ApiProperty()\n  photo?: ShortPhoto;\n}\n\nexport class BlogPayload {\n  @ApiProperty()\n  header: string;\n  @ApiProperty()\n  message: string;\n  @ApiProperty()\n  photo?: BlogPhoto;\n\n  link?: Link[];\n}\n\nexport class QuotePayload {\n  source: any; //contain content._id\n  message?: string;\n  photo?: ShortPhoto;\n}\n\nexport class RecastPayload {\n  source: any; //contain content._id\n  photo?: ShortPhoto;\n}\n\nclass Feature {\n  @ApiProperty()\n  slug: 'feed';\n  @ApiProperty()\n  name: 'Feed';\n  @ApiProperty()\n  key: 'feature.feed';\n}\n\nclass Participant {\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  name: string;\n}\n\nclass Like {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  liked: boolean; // viewer like it or not\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Comment {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  commented: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Recast {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  recasted: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nexport class Author {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  castcleId: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  avatar: string | null;\n  @ApiProperty()\n  verified: boolean;\n  @ApiProperty()\n  followed: boolean;\n}\n\nexport class ContentPayloadDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  type:\n    | ContentType.Short\n    | ContentType.Blog\n    | ContentType.Image\n    | ContentType.Quote\n    | ContentType.Recast;\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | QuotePayload | RecastPayload;\n\n  @ApiProperty()\n  feature: Feature;\n\n  @ApiProperty()\n  liked: Like;\n\n  @ApiProperty()\n  commented: Comment;\n\n  @ApiProperty()\n  recasted?: Recast;\n\n  @ApiProperty()\n  quoteCast?: ContentPayloadDto;\n\n  @ApiProperty()\n  author: Author;\n\n  @ApiProperty()\n  created: string;\n  @ApiProperty()\n  updated: string;\n}\n\nclass AuthorDto {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n}\n\nexport class SaveContentDto {\n  @ApiProperty()\n  type: 'short' | 'blog' | 'image';\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | ImagePayload;\n\n  @ApiProperty()\n  author?: AuthorDto;\n}\n\nexport enum ContentType {\n  Short = 'short',\n  Blog = 'blog',\n  Image = 'image',\n  Recast = 'recast',\n  Quote = 'quote'\n}\n\nexport class CastcleContentQueryOptions extends CastcleQueryOptions {\n  type?: ContentType;\n}\n\nexport const DEFAULT_CONTENT_QUERY_OPTIONS = {\n  sortBy: {\n    field: 'updatedAt',\n    type: 'desc'\n  },\n  type: ContentType.Short,\n  page: 1,\n  limit: 25\n} as CastcleContentQueryOptions;\n\nexport class ContentResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto;\n}\n\nexport class ContentsResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Counter.html":{"url":"classes/Counter.html","title":"class - Counter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Counter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                count\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Pagination } from './common.dto';\n\nclass UserImage {\n  @ApiProperty()\n  avatar: string;\n  @ApiProperty()\n  cover: string;\n}\n\nclass Link {\n  @ApiProperty()\n  facebook?: string;\n\n  @ApiProperty()\n  twitter?: string;\n\n  @ApiProperty()\n  youtube?: string;\n\n  @ApiProperty()\n  medium?: string;\n\n  @ApiProperty()\n  website?: string | null;\n}\n\nclass Counter {\n  @ApiProperty()\n  count: number;\n}\n\nexport class UserResponseDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  castcleId: string;\n\n  @ApiProperty()\n  email?: string;\n\n  @ApiProperty()\n  overview: string | null;\n\n  @ApiProperty()\n  dob: string | null;\n\n  @ApiProperty()\n  images: UserImage;\n\n  @ApiProperty()\n  links: Link;\n\n  @ApiProperty()\n  following: Counter;\n\n  @ApiProperty()\n  followers: Counter;\n\n  @ApiProperty()\n  verified: boolean;\n\n  @ApiProperty()\n  followed: boolean;\n}\n\nexport class UpdateUserDto {\n  @ApiProperty()\n  overview?: string;\n\n  @ApiProperty()\n  dob?: string;\n\n  @ApiProperty()\n  images?: UserImage;\n\n  @ApiProperty()\n  links?: Link;\n}\n\nexport class PageDto {\n  @ApiProperty()\n  castcleId: string;\n\n  @ApiProperty()\n  displayName: string;\n\n  @ApiProperty()\n  avatar: string;\n\n  @ApiProperty()\n  cover: string;\n}\n\nexport class PageResponseDto {\n  @ApiProperty()\n  castcleId: string;\n\n  @ApiProperty()\n  displayName: string;\n\n  @ApiProperty()\n  avatar: string;\n\n  @ApiProperty()\n  cover: string;\n\n  @ApiProperty()\n  updated: string;\n\n  @ApiProperty()\n  created: string;\n}\n\nexport class UpdatePageDto {\n  @ApiProperty()\n  displayName?: string;\n\n  @ApiProperty()\n  avatar?: string;\n\n  @ApiProperty()\n  cover?: string;\n}\n\nexport class PagesResponse {\n  @ApiProperty()\n  payload: PageResponseDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\nexport class PageResponse {\n  @ApiProperty()\n  payload: PageResponseDto;\n}\n\nexport class FollowResponse {\n  @ApiProperty()\n  payload: UserResponseDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAccountDto.html":{"url":"classes/CreateAccountDto.html","title":"class - CreateAccountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/account.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createDate\n                            \n                            \n                                isGuest\n                            \n                            \n                                preferences\n                            \n                            \n                                updateDate\n                            \n                            \n                                visibility\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/account.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGuest\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/account.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preferences\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/account.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/account.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visibility\n                        \n                    \n                \n            \n                \n                    \n                        Default value : EntityVisibility.Publish\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/account.dto.ts:61\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as mongoose from 'mongoose';\nimport { EntityVisibility } from './common.dto';\n\nexport class SaveCredentialDto {\n  account?: {\n    _id: mongoose.Types.ObjectId;\n    isGuest: boolean;\n  };\n  accessToken: string;\n  refreshToken?: string;\n  accessTokenExpireDate: Date;\n  refreshTokenExpireDate?: Date;\n  platform?: string;\n  deviceUUID?: string;\n  device?: string;\n}\n\nexport class CreateCredentialDto {\n  account: {\n    _id: mongoose.Types.ObjectId;\n    isGuest: boolean;\n  };\n  accessToken: string;\n  refreshToken: string;\n  accessTokenExpireDate: Date;\n  refreshTokenExpireDate?: Date;\n  platform: string;\n  deviceUUID: string;\n  device: string;\n}\n\nexport class CreateAccountDto {\n  isGuest: boolean;\n  updateDate: Date;\n  createDate: Date;\n  preferences: {\n    languages: string[];\n  };\n  visibility = EntityVisibility.Publish;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAccountDto-1.html":{"url":"classes/CreateAccountDto-1.html","title":"class - CreateAccountDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/authentication.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createDate\n                            \n                            \n                                isGuest\n                            \n                            \n                                preferences\n                            \n                            \n                                updateDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/authentication.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGuest\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/authentication.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preferences\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/authentication.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/authentication.dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface TokenHeader {\n  acceptVersion: string;\n}\n\nexport class CreateAccountDto {\n  isGuest: boolean;\n  updateDate: Date;\n  createDate: Date;\n  preferences: {\n    languages: string[];\n  };\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCredentialDto.html":{"url":"classes/CreateCredentialDto.html","title":"class - CreateCredentialDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCredentialDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/account.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                accessTokenExpireDate\n                            \n                            \n                                account\n                            \n                            \n                                device\n                            \n                            \n                                deviceUUID\n                            \n                            \n                                platform\n                            \n                            \n                                refreshToken\n                            \n                            \n                                    Optional\n                                refreshTokenExpireDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/account.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        accessTokenExpireDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/account.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/account.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        device\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/account.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceUUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/account.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        platform\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/account.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/account.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        refreshTokenExpireDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/account.dto.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as mongoose from 'mongoose';\nimport { EntityVisibility } from './common.dto';\n\nexport class SaveCredentialDto {\n  account?: {\n    _id: mongoose.Types.ObjectId;\n    isGuest: boolean;\n  };\n  accessToken: string;\n  refreshToken?: string;\n  accessTokenExpireDate: Date;\n  refreshTokenExpireDate?: Date;\n  platform?: string;\n  deviceUUID?: string;\n  device?: string;\n}\n\nexport class CreateCredentialDto {\n  account: {\n    _id: mongoose.Types.ObjectId;\n    isGuest: boolean;\n  };\n  accessToken: string;\n  refreshToken: string;\n  accessTokenExpireDate: Date;\n  refreshTokenExpireDate?: Date;\n  platform: string;\n  deviceUUID: string;\n  device: string;\n}\n\nexport class CreateAccountDto {\n  isGuest: boolean;\n  updateDate: Date;\n  createDate: Date;\n  preferences: {\n    languages: string[];\n  };\n  visibility = EntityVisibility.Publish;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Credential.html":{"url":"classes/Credential.html","title":"class - Credential","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Credential\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/schemas/credential.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CastcleBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                accessTokenExpireDate\n                            \n                            \n                                account\n                            \n                            \n                                device\n                            \n                            \n                                deviceUUID\n                            \n                            \n                                platform\n                            \n                            \n                                refreshToken\n                            \n                            \n                                refreshTokenExpireDate\n                            \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                visibility\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/credential.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        accessTokenExpireDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/credential.schema.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Account\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/credential.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        device\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/credential.schema.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceUUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/credential.schema.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        platform\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/credential.schema.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/credential.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshTokenExpireDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/credential.schema.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        visibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityVisibility\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:37\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Token } from '@castcle-api/utils';\nimport { env } from '../environment';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Document } from 'mongoose';\nimport { Account } from '../schemas/account.schema';\nimport { CastcleBase } from './base.schema';\nimport {\n  AccessTokenPayload,\n  RefreshTokenPayload,\n  MemberAccessTokenPayload\n} from '../dtos/token.dto';\nimport { EntityVisibility } from '../dtos/common.dto';\n\nexport type CredentialDocument = Credential & ICredential;\n\n@Schema({ timestamps: true })\nexport class Credential extends CastcleBase {\n  @Prop({\n    required: true,\n    type: Object\n  })\n  account: Account;\n\n  @Prop({ required: true })\n  accessToken: string;\n\n  @Prop({ required: true })\n  refreshToken: string;\n\n  @Prop({ required: true })\n  accessTokenExpireDate: Date;\n\n  @Prop({ required: true })\n  refreshTokenExpireDate: Date;\n\n  @Prop({ required: true })\n  platform: string;\n\n  @Prop({ required: true })\n  deviceUUID: string;\n\n  @Prop({ required: true })\n  device: string;\n}\n\nexport const CredentialSchema = SchemaFactory.createForClass(Credential);\n\nexport interface CredentialModel extends mongoose.Model {\n  generateAccessToken(payload: AccessTokenPayload | MemberAccessTokenPayload): {\n    accessToken: string;\n    accessTokenExpireDate: Date;\n  };\n  generateRefreshToken(payload: RefreshTokenPayload): {\n    refreshToken: string;\n    refreshTokenExpireDate: Date;\n  };\n}\n\nCredentialSchema.statics.generateAccessToken = (\n  payload: AccessTokenPayload | MemberAccessTokenPayload\n) => {\n  const now = new Date();\n  const accessTokenExpireDate = new Date(\n    now.getTime() + Number(env.jwt_access_expires_in) * 1000\n  );\n  payload.accessTokenExpiresTime = accessTokenExpireDate.toISOString();\n  const accessToken = Token.generateToken(\n    payload,\n    env.jwt_access_secret,\n    Number(env.jwt_access_expires_in)\n  );\n  return {\n    accessToken,\n    accessTokenExpireDate\n  };\n};\nCredentialSchema.statics.generateRefreshToken = (\n  payload: RefreshTokenPayload\n) => {\n  const now = new Date();\n  const refreshTokenExpireDate = new Date(\n    now.getTime() + Number(env.jwt_refresh_expires_in) * 1000\n  );\n  payload.refreshTokenExpiresTime = refreshTokenExpireDate.toISOString();\n  const refreshToken = Token.generateToken(\n    payload,\n    env.jwt_refresh_secret,\n    Number(env.jwt_refresh_expires_in)\n  );\n\n  return {\n    refreshToken,\n    refreshTokenExpireDate\n  };\n};\n\nexport interface ICredential extends Document {\n  renewTokens(\n    accessTokenPayload: AccessTokenPayload | MemberAccessTokenPayload,\n    refreshTokenPayload: RefreshTokenPayload\n  ): Promise;\n  renewAccessToken(\n    payload: AccessTokenPayload | MemberAccessTokenPayload\n  ): Promise;\n  isAccessTokenValid(): boolean;\n  isRefreshTokenValid(): boolean;\n}\n\nCredentialSchema.methods.renewTokens = async function (\n  accessTokenPayload: AccessTokenPayload | MemberAccessTokenPayload,\n  refreshTokenPayload: RefreshTokenPayload\n) {\n  const credentialModel = mongoose.model(\n    'Credential',\n    CredentialSchema\n  ) as unknown as CredentialModel;\n  const refreshTokenResult =\n    credentialModel.generateRefreshToken(refreshTokenPayload);\n  const accessTokenResult =\n    credentialModel.generateAccessToken(accessTokenPayload);\n  (this as CredentialDocument).accessToken = accessTokenResult.accessToken;\n  (this as CredentialDocument).accessTokenExpireDate =\n    accessTokenResult.accessTokenExpireDate;\n  (this as CredentialDocument).refreshToken = refreshTokenResult.refreshToken;\n  (this as CredentialDocument).refreshTokenExpireDate =\n    refreshTokenResult.refreshTokenExpireDate;\n  await this.save();\n  return {\n    accessToken: accessTokenResult.accessToken,\n    refreshToken: refreshTokenResult.refreshToken\n  };\n};\n\nCredentialSchema.methods.renewAccessToken = async function (\n  payload: AccessTokenPayload | MemberAccessTokenPayload\n) {\n  const credentialModel = mongoose.model(\n    'Credential',\n    CredentialSchema\n  ) as unknown as CredentialModel;\n  const result = credentialModel.generateAccessToken(payload);\n  (this as CredentialDocument).accessToken = result.accessToken;\n  (this as CredentialDocument).accessTokenExpireDate =\n    result.accessTokenExpireDate;\n  await this.save();\n  return result.accessToken;\n};\n\nCredentialSchema.methods.isAccessTokenValid = function () {\n  if (\n    (this as CredentialDocument).account.visibility !== EntityVisibility.Publish\n  )\n    return false;\n  return Token.isTokenValid(\n    (this as CredentialDocument).accessToken,\n    env.jwt_access_secret\n  );\n};\nCredentialSchema.methods.isRefreshTokenValid = function () {\n  if (\n    (this as CredentialDocument).account.visibility !== EntityVisibility.Publish\n  )\n    return false;\n  return Token.isTokenValid(\n    (this as CredentialDocument).accessToken,\n    env.jwt_access_secret\n  );\n};\n\nexport const CredentialSchemaFactory = (): mongoose.Schema => {\n  return CredentialSchema;\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CredentialInterceptor.html":{"url":"injectables/CredentialInterceptor.html","title":"injectable - CredentialInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CredentialInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/utils/interceptors/src/lib/credential/credential.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in libs/utils/interceptors/src/lib/credential/credential.interceptor.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        intercept\n                        \n                    \n                \n            \n            \n                \n                    \n                    intercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in libs/utils/interceptors/src/lib/credential/credential.interceptor.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor\n} from '@nestjs/common';\nimport { AuthenticationService } from '@castcle-api/database';\nimport { CredentialDocument } from '@castcle-api/database/schemas';\nimport { CastcleException, CastcleStatus } from '@castcle-api/utils/exception';\nimport * as util from '../util';\nimport { TokenRequest } from '../token/token.interceptor';\n//for delete\nexport interface CredentialRequest extends TokenRequest {\n  $credential: CredentialDocument;\n}\n\n@Injectable()\nexport class CredentialInterceptor implements NestInterceptor {\n  constructor(private authService: AuthenticationService) {}\n  async intercept(context: ExecutionContext, next: CallHandler) {\n    const request = context.switchToHttp().getRequest();\n    request.$language = util.getLangagueFromRequest(request);\n    request.$token = util.getTokenFromRequest(request);\n    const accessToken = util.getTokenFromRequest(request);\n    request.$credential = await this.authService.getCredentialFromAccessToken(\n      accessToken\n    );\n    if (request.$credential && request.$credential.isAccessTokenValid()) {\n      return next.handle();\n    } else {\n      throw new CastcleException(\n        CastcleStatus.INVALID_ACCESS_TOKEN,\n        request.$language\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CredentialModel.html":{"url":"interfaces/CredentialModel.html","title":"interface - CredentialModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CredentialModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/schemas/credential.schema.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        generateAccessToken\n                                    \n                                \n                                \n                                    \n                                        generateRefreshToken\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateAccessToken\n                        \n                    \n                \n            \n            \n                \ngenerateAccessToken(payload: AccessTokenPayload | MemberAccessTokenPayload)\n                \n            \n\n\n            \n                \n                    Defined in libs/database/src/lib/schemas/credential.schema.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                AccessTokenPayload | MemberAccessTokenPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateRefreshToken\n                        \n                    \n                \n            \n            \n                \ngenerateRefreshToken(payload: RefreshTokenPayload)\n                \n            \n\n\n            \n                \n                    Defined in libs/database/src/lib/schemas/credential.schema.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                RefreshTokenPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Token } from '@castcle-api/utils';\nimport { env } from '../environment';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Document } from 'mongoose';\nimport { Account } from '../schemas/account.schema';\nimport { CastcleBase } from './base.schema';\nimport {\n  AccessTokenPayload,\n  RefreshTokenPayload,\n  MemberAccessTokenPayload\n} from '../dtos/token.dto';\nimport { EntityVisibility } from '../dtos/common.dto';\n\nexport type CredentialDocument = Credential & ICredential;\n\n@Schema({ timestamps: true })\nexport class Credential extends CastcleBase {\n  @Prop({\n    required: true,\n    type: Object\n  })\n  account: Account;\n\n  @Prop({ required: true })\n  accessToken: string;\n\n  @Prop({ required: true })\n  refreshToken: string;\n\n  @Prop({ required: true })\n  accessTokenExpireDate: Date;\n\n  @Prop({ required: true })\n  refreshTokenExpireDate: Date;\n\n  @Prop({ required: true })\n  platform: string;\n\n  @Prop({ required: true })\n  deviceUUID: string;\n\n  @Prop({ required: true })\n  device: string;\n}\n\nexport const CredentialSchema = SchemaFactory.createForClass(Credential);\n\nexport interface CredentialModel extends mongoose.Model {\n  generateAccessToken(payload: AccessTokenPayload | MemberAccessTokenPayload): {\n    accessToken: string;\n    accessTokenExpireDate: Date;\n  };\n  generateRefreshToken(payload: RefreshTokenPayload): {\n    refreshToken: string;\n    refreshTokenExpireDate: Date;\n  };\n}\n\nCredentialSchema.statics.generateAccessToken = (\n  payload: AccessTokenPayload | MemberAccessTokenPayload\n) => {\n  const now = new Date();\n  const accessTokenExpireDate = new Date(\n    now.getTime() + Number(env.jwt_access_expires_in) * 1000\n  );\n  payload.accessTokenExpiresTime = accessTokenExpireDate.toISOString();\n  const accessToken = Token.generateToken(\n    payload,\n    env.jwt_access_secret,\n    Number(env.jwt_access_expires_in)\n  );\n  return {\n    accessToken,\n    accessTokenExpireDate\n  };\n};\nCredentialSchema.statics.generateRefreshToken = (\n  payload: RefreshTokenPayload\n) => {\n  const now = new Date();\n  const refreshTokenExpireDate = new Date(\n    now.getTime() + Number(env.jwt_refresh_expires_in) * 1000\n  );\n  payload.refreshTokenExpiresTime = refreshTokenExpireDate.toISOString();\n  const refreshToken = Token.generateToken(\n    payload,\n    env.jwt_refresh_secret,\n    Number(env.jwt_refresh_expires_in)\n  );\n\n  return {\n    refreshToken,\n    refreshTokenExpireDate\n  };\n};\n\nexport interface ICredential extends Document {\n  renewTokens(\n    accessTokenPayload: AccessTokenPayload | MemberAccessTokenPayload,\n    refreshTokenPayload: RefreshTokenPayload\n  ): Promise;\n  renewAccessToken(\n    payload: AccessTokenPayload | MemberAccessTokenPayload\n  ): Promise;\n  isAccessTokenValid(): boolean;\n  isRefreshTokenValid(): boolean;\n}\n\nCredentialSchema.methods.renewTokens = async function (\n  accessTokenPayload: AccessTokenPayload | MemberAccessTokenPayload,\n  refreshTokenPayload: RefreshTokenPayload\n) {\n  const credentialModel = mongoose.model(\n    'Credential',\n    CredentialSchema\n  ) as unknown as CredentialModel;\n  const refreshTokenResult =\n    credentialModel.generateRefreshToken(refreshTokenPayload);\n  const accessTokenResult =\n    credentialModel.generateAccessToken(accessTokenPayload);\n  (this as CredentialDocument).accessToken = accessTokenResult.accessToken;\n  (this as CredentialDocument).accessTokenExpireDate =\n    accessTokenResult.accessTokenExpireDate;\n  (this as CredentialDocument).refreshToken = refreshTokenResult.refreshToken;\n  (this as CredentialDocument).refreshTokenExpireDate =\n    refreshTokenResult.refreshTokenExpireDate;\n  await this.save();\n  return {\n    accessToken: accessTokenResult.accessToken,\n    refreshToken: refreshTokenResult.refreshToken\n  };\n};\n\nCredentialSchema.methods.renewAccessToken = async function (\n  payload: AccessTokenPayload | MemberAccessTokenPayload\n) {\n  const credentialModel = mongoose.model(\n    'Credential',\n    CredentialSchema\n  ) as unknown as CredentialModel;\n  const result = credentialModel.generateAccessToken(payload);\n  (this as CredentialDocument).accessToken = result.accessToken;\n  (this as CredentialDocument).accessTokenExpireDate =\n    result.accessTokenExpireDate;\n  await this.save();\n  return result.accessToken;\n};\n\nCredentialSchema.methods.isAccessTokenValid = function () {\n  if (\n    (this as CredentialDocument).account.visibility !== EntityVisibility.Publish\n  )\n    return false;\n  return Token.isTokenValid(\n    (this as CredentialDocument).accessToken,\n    env.jwt_access_secret\n  );\n};\nCredentialSchema.methods.isRefreshTokenValid = function () {\n  if (\n    (this as CredentialDocument).account.visibility !== EntityVisibility.Publish\n  )\n    return false;\n  return Token.isTokenValid(\n    (this as CredentialDocument).accessToken,\n    env.jwt_access_secret\n  );\n};\n\nexport const CredentialSchemaFactory = (): mongoose.Schema => {\n  return CredentialSchema;\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CredentialRequest.html":{"url":"interfaces/CredentialRequest.html","title":"interface - CredentialRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CredentialRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/utils/interceptors/src/lib/credential/credential.interceptor.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        TokenRequest\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            $credential\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $credential\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        $credential:         CredentialDocument\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CredentialDocument\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor\n} from '@nestjs/common';\nimport { AuthenticationService } from '@castcle-api/database';\nimport { CredentialDocument } from '@castcle-api/database/schemas';\nimport { CastcleException, CastcleStatus } from '@castcle-api/utils/exception';\nimport * as util from '../util';\nimport { TokenRequest } from '../token/token.interceptor';\n//for delete\nexport interface CredentialRequest extends TokenRequest {\n  $credential: CredentialDocument;\n}\n\n@Injectable()\nexport class CredentialInterceptor implements NestInterceptor {\n  constructor(private authService: AuthenticationService) {}\n  async intercept(context: ExecutionContext, next: CallHandler) {\n    const request = context.switchToHttp().getRequest();\n    request.$language = util.getLangagueFromRequest(request);\n    request.$token = util.getTokenFromRequest(request);\n    const accessToken = util.getTokenFromRequest(request);\n    request.$credential = await this.authService.getCredentialFromAccessToken(\n      accessToken\n    );\n    if (request.$credential && request.$credential.isAccessTokenValid()) {\n      return next.handle();\n    } else {\n      throw new CastcleException(\n        CastcleStatus.INVALID_ACCESS_TOKEN,\n        request.$language\n      );\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_exports\n\n\n\ncluster_DatabaseModule_providers\n\n\n\n\nAuthenticationService \n\nAuthenticationService \n\n\n\nContentService \n\nContentService \n\n\n\nUserService \n\nUserService \n\n\n\nUxEngagementService \n\nUxEngagementService \n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAuthenticationService  -->\n\nDatabaseModule->AuthenticationService \n\n\n\nContentService  -->\n\nDatabaseModule->ContentService \n\n\n\nUserService  -->\n\nDatabaseModule->UserService \n\n\n\nUxEngagementService  -->\n\nDatabaseModule->UxEngagementService \n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nDatabaseModule -->\n\nAuthenticationService->DatabaseModule\n\n\n\n\n\nContentService\n\nContentService\n\nDatabaseModule -->\n\nContentService->DatabaseModule\n\n\n\n\n\nUserService\n\nUserService\n\nDatabaseModule -->\n\nUserService->DatabaseModule\n\n\n\n\n\nUxEngagementService\n\nUxEngagementService\n\nDatabaseModule -->\n\nUxEngagementService->DatabaseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/database/src/lib/database.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthenticationService\n                        \n                        \n                            ContentService\n                        \n                        \n                            UserService\n                        \n                        \n                            UxEngagementService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthenticationService\n                        \n                        \n                            ContentService\n                        \n                        \n                            UserService\n                        \n                        \n                            UxEngagementService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright (c) 2021, Castcle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 3 only, as\n * published by the Free Software Foundation.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n * version 3 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 3 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Castcle, 22 Phet Kasem 47/2 Alley, Bang Khae, Bangkok,\n * Thailand 10160, or visit www.castcle.com if you need additional information\n * or have any questions.\n */\nimport { Module, Global } from '@nestjs/common';\nimport {\n  getModelToken,\n  MongooseModule,\n  MongooseModuleOptions\n} from '@nestjs/mongoose';\nimport { env } from './environment';\nimport { AuthenticationService } from './services/authentication.service';\nimport { UserService } from './services/user.service';\nimport { ContentService } from './services/content.service';\nimport { UxEngagementService } from './services/uxengagement.service';\nimport { AccountSchema, AccountSchemaFactory } from './schemas/account.schema';\nimport {\n  CredentialSchema,\n  CredentialSchemaFactory\n} from './schemas/credential.schema';\nimport { AccountActivationSchema } from './schemas/accountActivation.schema';\nimport { UserSchema, UserSchemaFactory } from './schemas/user.schema';\nimport { ContentSchema, ContentSchemaFactory } from './schemas/content.schema';\nimport { RelationshipSchemaFactory } from './schemas/relationship.schema';\nimport { EngagementSchemaFactory } from './schemas/engagement.schema';\nimport { RevisionchemaFactory } from './schemas/revision.schema';\nimport { UxEngagementSchema } from './schemas/uxengagement.schema';\nimport { OtpSchema } from './schemas/otp.schema';\n\nexport const MongooseForFeatures = MongooseModule.forFeature([\n  { name: 'AccountActivation', schema: AccountActivationSchema },\n  { name: 'Otp', schema: OtpSchema },\n  { name: 'UxEngagement', schema: UxEngagementSchema }\n]);\n\nexport const MongooseAsyncFeatures = MongooseModule.forFeatureAsync([\n  { name: 'Credential', useFactory: CredentialSchemaFactory },\n  { name: 'Relationship', useFactory: RelationshipSchemaFactory },\n  { name: 'Revision', useFactory: RevisionchemaFactory },\n  {\n    name: 'Content',\n    useFactory: ContentSchemaFactory,\n    inject: [getModelToken('Revision')]\n  },\n  {\n    name: 'Account',\n    useFactory: AccountSchemaFactory,\n    inject: [getModelToken('Credential')]\n  },\n  {\n    name: 'User',\n    useFactory: UserSchemaFactory,\n    inject: [getModelToken('Relationship')]\n  },\n  {\n    name: 'Engagement',\n    useFactory: EngagementSchemaFactory,\n    inject: [getModelToken('Content')]\n  }\n]);\n\n@Global()\n@Module({\n  imports: [\n    MongooseModule.forRoot(env.db_uri, env.db_options),\n    MongooseAsyncFeatures,\n    MongooseForFeatures\n  ],\n  controllers: [],\n  providers: [\n    AuthenticationService,\n    UserService,\n    ContentService,\n    UxEngagementService\n  ],\n  exports: [\n    AuthenticationService,\n    UserService,\n    ContentService,\n    UxEngagementService\n  ]\n})\nexport class DatabaseModule {}\n\nexport {\n  AuthenticationService,\n  UserService,\n  ContentService,\n  UxEngagementService\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmailVerifyToken.html":{"url":"interfaces/EmailVerifyToken.html","title":"interface - EmailVerifyToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EmailVerifyToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/token.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            verifyTokenExpiresTime\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        verifyTokenExpiresTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        verifyTokenExpiresTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AccessTokenPayload {\n  id: string;\n  preferredLanguage: string[];\n  role: 'member' | 'guest'; // member or guest\n  accessTokenExpiresTime?: string; // 30 นาทีจาก create\n}\n\nexport interface MemberAccessTokenPayload extends AccessTokenPayload {\n  role: 'member';\n  castcleId: string;\n  displayName: string;\n  email?: string;\n  avatar?: string;\n}\n\nexport interface RefreshTokenPayload {\n  id: string;\n  role: 'member' | 'guest';\n  refreshTokenExpiresTime?: string;\n}\n\nexport interface EmailVerifyToken {\n  id: string;\n  verifyTokenExpiresTime?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Engagement.html":{"url":"classes/Engagement.html","title":"class - Engagement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Engagement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/schemas/engagement.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CastcleBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                targetRef\n                            \n                            \n                                type\n                            \n                            \n                                user\n                            \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                visibility\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        targetRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/engagement.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/engagement.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined, ref: 'User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/engagement.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        visibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityVisibility\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:37\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Model } from 'mongoose';\nimport * as mongoose from 'mongoose';\nimport { User } from './user.schema';\nimport { Comment } from './comment.schema';\nimport { Content, ContentDocument } from './content.schema';\nimport { CastcleBase } from './base.schema';\nimport { EntityVisibility } from '../dtos/common.dto';\n\nexport type EngagementDocument = Engagement & Document;\n\nexport enum EngagementType {\n  Like = 'like',\n  Recast = 'recast',\n  Quote = 'quote',\n  Comment = 'comment'\n}\n\n@Schema({ timestamps: true })\nexport class Engagement extends CastcleBase {\n  @Prop({ required: true, type: mongoose.Schema.Types.ObjectId, ref: 'User' })\n  user: User;\n\n  @Prop({ required: true, type: Object })\n  targetRef: any;\n\n  @Prop({ required: true })\n  type: string;\n}\n\nexport const EngagementSchema = SchemaFactory.createForClass(Engagement);\n\nexport const EngagementSchemaFactory = (\n  contentModel: Model\n): mongoose.Schema => {\n  EngagementSchema.post('save', async function (doc, next) {\n    if ((doc as EngagementDocument).visibility === EntityVisibility.Publish) {\n      const incEngagment: { [key: string]: number } = {};\n      incEngagment[`engagements.${(doc as EngagementDocument).type}.count`] = 1;\n      console.log('inc like ', incEngagment);\n      await contentModel\n        .updateOne(\n          { _id: (doc as EngagementDocument).targetRef.$id },\n          {\n            $inc: incEngagment\n          }\n        )\n        .exec();\n    } else if (\n      (doc as EngagementDocument).visibility !== EntityVisibility.Publish\n    ) {\n      console.log('delete dono ');\n      console.log(`engagements.${(doc as EngagementDocument).type}.count`);\n      const incEngagment: { [key: string]: number } = {};\n      incEngagment[`engagements.${(doc as EngagementDocument).type}.count`] =\n        -1;\n      console.log(incEngagment);\n      await contentModel\n        .updateOne(\n          { _id: (doc as EngagementDocument).targetRef.$id },\n          {\n            $inc: incEngagment\n          }\n        )\n        .exec();\n    }\n    next();\n  });\n  //TODO !!! cant use $id dont know why\n  EngagementSchema.post('remove', async (doc, next) => {\n    const incEngagment: { [key: string]: number } = {};\n    incEngagment[`engagements.${(doc as EngagementDocument).type}.count`] = -1;\n    const content = await contentModel\n      .findById((doc as EngagementDocument).targetRef.oid)\n      .exec();\n    const result = await contentModel\n      .updateOne(\n        { _id: (doc as EngagementDocument).targetRef.oid },\n        {\n          $inc: incEngagment\n        }\n      )\n      .exec();\n    console.log(result);\n    next();\n  });\n  return EngagementSchema;\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorStatus.html":{"url":"interfaces/ErrorStatus.html","title":"interface - ErrorStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ErrorStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/utils/exception/src/lib/castcle.exception.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\nimport { ErrorMessages } from './messages/default';\n\nexport enum CastcleStatus {\n  REQUEST_URL_NOT_FOUND = '1001',\n  MISSING_AUTHORIZATION_HEADER = '1002',\n  INVALID_ACCESS_TOKEN = '1003',\n  INVALID_REFRESH_TOKEN = '1004',\n  INVALID_FORMAT = '1005',\n  UPLOAD_FAILED = '1006',\n  FORBIDDEN_REQUEST = '1007',\n  INVLAID_AUTH_TOKEN = '3001',\n  INVALID_EMAIL_OR_PASSWORD = '3002',\n  INVALID_EMAIL = '3003',\n  INVALID_PHONE_NUMBER = '3004',\n  PAYLOAD_CHANNEL_MISMATCH = '3005',\n  EMAIL_OR_PHONE_NOTFOUND = '3006',\n  PLEASE_TRY_AGAIN = '3007',\n  INVALID_OTP = '3008',\n  EXPIRED_OTP = '3009',\n  LOCKED_OTP = '3010',\n  INVALID_PASSWORD = '3011',\n  INVLAID_REFCODE = '3012',\n  INVALID_ROLE = '3013',\n  EMAIL_OR_PHONE_IS_EXIST = '3014',\n  PAGE_IS_EXIST = '3015',\n  USER_NAME_IS_EXIST = '3016',\n  USER_ID_IS_EXIST = '3017',\n  FEATURE_NOT_EXIST = '5001',\n  PAYLOAD_TYPE_MISMATCH = '5002'\n}\n\ninterface ErrorStatus {\n  statusCode: string;\n  code: string;\n  message: string;\n}\n\nexport class CastcleException extends HttpException {\n  constructor(castcleStatus: CastcleStatus, language = 'en') {\n    const error: ErrorStatus = ErrorMessages[castcleStatus];\n    super(error, Number(error.statusCode));\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Feature.html":{"url":"classes/Feature.html","title":"class - Feature","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Feature\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/content.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                key\n                            \n                            \n                                name\n                            \n                            \n                                slug\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:91\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Pagination } from './common.dto';\nimport { CastcleQueryOptions } from './common.dto';\n\nclass Url {\n  @ApiProperty()\n  url: string;\n}\n\nclass Link {\n  @ApiProperty()\n  type: string;\n\n  @ApiProperty()\n  url: string;\n}\n\nclass BlogPhoto {\n  @ApiProperty()\n  cover: Url;\n\n  @ApiProperty()\n  contents: Url[];\n}\n\nclass ShortPhoto {\n  @ApiProperty()\n  contents: Url[];\n}\n\nexport class ShortPayload {\n  @ApiProperty()\n  message?: string;\n  @ApiProperty()\n  photo?: ShortPhoto;\n  @ApiProperty()\n  link?: Link[];\n}\n\nexport class ImagePayload {\n  @ApiProperty()\n  photo?: ShortPhoto;\n}\n\nexport class BlogPayload {\n  @ApiProperty()\n  header: string;\n  @ApiProperty()\n  message: string;\n  @ApiProperty()\n  photo?: BlogPhoto;\n\n  link?: Link[];\n}\n\nexport class QuotePayload {\n  source: any; //contain content._id\n  message?: string;\n  photo?: ShortPhoto;\n}\n\nexport class RecastPayload {\n  source: any; //contain content._id\n  photo?: ShortPhoto;\n}\n\nclass Feature {\n  @ApiProperty()\n  slug: 'feed';\n  @ApiProperty()\n  name: 'Feed';\n  @ApiProperty()\n  key: 'feature.feed';\n}\n\nclass Participant {\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  name: string;\n}\n\nclass Like {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  liked: boolean; // viewer like it or not\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Comment {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  commented: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Recast {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  recasted: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nexport class Author {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  castcleId: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  avatar: string | null;\n  @ApiProperty()\n  verified: boolean;\n  @ApiProperty()\n  followed: boolean;\n}\n\nexport class ContentPayloadDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  type:\n    | ContentType.Short\n    | ContentType.Blog\n    | ContentType.Image\n    | ContentType.Quote\n    | ContentType.Recast;\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | QuotePayload | RecastPayload;\n\n  @ApiProperty()\n  feature: Feature;\n\n  @ApiProperty()\n  liked: Like;\n\n  @ApiProperty()\n  commented: Comment;\n\n  @ApiProperty()\n  recasted?: Recast;\n\n  @ApiProperty()\n  quoteCast?: ContentPayloadDto;\n\n  @ApiProperty()\n  author: Author;\n\n  @ApiProperty()\n  created: string;\n  @ApiProperty()\n  updated: string;\n}\n\nclass AuthorDto {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n}\n\nexport class SaveContentDto {\n  @ApiProperty()\n  type: 'short' | 'blog' | 'image';\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | ImagePayload;\n\n  @ApiProperty()\n  author?: AuthorDto;\n}\n\nexport enum ContentType {\n  Short = 'short',\n  Blog = 'blog',\n  Image = 'image',\n  Recast = 'recast',\n  Quote = 'quote'\n}\n\nexport class CastcleContentQueryOptions extends CastcleQueryOptions {\n  type?: ContentType;\n}\n\nexport const DEFAULT_CONTENT_QUERY_OPTIONS = {\n  sortBy: {\n    field: 'updatedAt',\n    type: 'desc'\n  },\n  type: ContentType.Short,\n  page: 1,\n  limit: 25\n} as CastcleContentQueryOptions;\n\nexport class ContentResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto;\n}\n\nexport class ContentsResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Feature-1.html":{"url":"classes/Feature-1.html","title":"class - Feature-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Feature\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/schemas/feature.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CastcleBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                slug\n                            \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                visibility\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/feature.schema.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/feature.schema.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        visibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityVisibility\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:37\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { CastcleBase } from './base.schema';\n\nexport type FeatureDocument = Feature & Document;\n\n@Schema({ timestamps: true })\nexport class Feature extends CastcleBase {\n  @Prop({ required: true })\n  slug: string;\n\n  @Prop({ required: true })\n  name: string;\n}\n\nexport const FeatureSchema = SchemaFactory.createForClass(Feature);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Feature-2.html":{"url":"classes/Feature-2.html","title":"class - Feature-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Feature\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/schemas/i18n.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CastcleBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                objectRef\n                            \n                            \n                                tag\n                            \n                            \n                                value\n                            \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                visibility\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        objectRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/i18n.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/i18n.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/i18n.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        visibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityVisibility\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:37\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { CastcleBase } from './base.schema';\n\nexport type FeatureDocument = Feature & Document;\n\n@Schema({ timestamps: true })\nexport class Feature extends CastcleBase {\n  @Prop({ required: true, type: Object })\n  objectRef: any;\n\n  @Prop({ required: true })\n  tag: string;\n\n  @Prop({ required: true })\n  value: string;\n}\n\nexport const FeatureSchema = SchemaFactory.createForClass(Feature);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FollowInterceptor.html":{"url":"injectables/FollowInterceptor.html","title":"injectable - FollowInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FollowInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/users/src/app/interceptors/image.interceptor.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CredentialInterceptor\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        intercept\n                        \n                    \n                \n            \n            \n                \n                    \n                    intercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Inherited from         CredentialInterceptor\n\n                \n            \n            \n                \n                        Defined in         CredentialInterceptor:72\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, Injectable } from '@nestjs/common';\nimport {\n  FollowResponse,\n  UpdateUserDto,\n  UserResponseDto\n} from '@castcle-api/database/dtos';\n\nimport { Image } from '@castcle-api/utils/aws';\nimport {\n  CredentialInterceptor,\n  CredentialRequest\n} from '@castcle-api/utils/interceptors';\nimport { map } from 'rxjs';\n\n@Injectable()\nexport class ImageInterceptor extends CredentialInterceptor {\n  async intercept(context: ExecutionContext, next: CallHandler) {\n    const superResult = await super.intercept(context, next);\n    const req = context.switchToHttp().getRequest() as CredentialRequest;\n    const body = req.body as UpdateUserDto;\n    if (body.images && body.images.avatar) {\n      const avatar = await Image.upload(body.images.avatar, {\n        filename: `avatar-${req.$credential.account._id}`\n      });\n      req.body.images.avatar = avatar.uri;\n    }\n    if (body.images && body.images.cover) {\n      const cover = await Image.upload(body.images.cover, {\n        filename: `cover-${req.$credential.account._id}`\n      });\n      req.body.images.cover = cover.uri;\n    }\n\n    return superResult.pipe(\n      map((data: UserResponseDto) => {\n        console.log('from', data);\n        if (data.images && data.images.avatar)\n          data.images.avatar = new Image(data.images.avatar).toSignUrl();\n        if (data.images && data.images.cover)\n          data.images.cover = new Image(data.images.cover).toSignUrl();\n        return data;\n      })\n    );\n  }\n}\n\n@Injectable()\nexport class FollowInterceptor extends CredentialInterceptor {\n  async intercept(context: ExecutionContext, next: CallHandler) {\n    const superResult = await super.intercept(context, next);\n    return superResult.pipe(\n      map((data: FollowResponse) => {\n        data.payload = data.payload.map((response) => {\n          if (response.images && response.images.avatar)\n            response.images.avatar = new Image(\n              response.images.avatar\n            ).toSignUrl();\n          if (response.images && response.images.cover)\n            response.images.cover = new Image(\n              response.images.cover\n            ).toSignUrl();\n          return response;\n        });\n        return data;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FollowResponse.html":{"url":"classes/FollowResponse.html","title":"class - FollowResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FollowResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pagination\n                            \n                            \n                                payload\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        pagination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pagination\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:167\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UserResponseDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:164\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Pagination } from './common.dto';\n\nclass UserImage {\n  @ApiProperty()\n  avatar: string;\n  @ApiProperty()\n  cover: string;\n}\n\nclass Link {\n  @ApiProperty()\n  facebook?: string;\n\n  @ApiProperty()\n  twitter?: string;\n\n  @ApiProperty()\n  youtube?: string;\n\n  @ApiProperty()\n  medium?: string;\n\n  @ApiProperty()\n  website?: string | null;\n}\n\nclass Counter {\n  @ApiProperty()\n  count: number;\n}\n\nexport class UserResponseDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  castcleId: string;\n\n  @ApiProperty()\n  email?: string;\n\n  @ApiProperty()\n  overview: string | null;\n\n  @ApiProperty()\n  dob: string | null;\n\n  @ApiProperty()\n  images: UserImage;\n\n  @ApiProperty()\n  links: Link;\n\n  @ApiProperty()\n  following: Counter;\n\n  @ApiProperty()\n  followers: Counter;\n\n  @ApiProperty()\n  verified: boolean;\n\n  @ApiProperty()\n  followed: boolean;\n}\n\nexport class UpdateUserDto {\n  @ApiProperty()\n  overview?: string;\n\n  @ApiProperty()\n  dob?: string;\n\n  @ApiProperty()\n  images?: UserImage;\n\n  @ApiProperty()\n  links?: Link;\n}\n\nexport class PageDto {\n  @ApiProperty()\n  castcleId: string;\n\n  @ApiProperty()\n  displayName: string;\n\n  @ApiProperty()\n  avatar: string;\n\n  @ApiProperty()\n  cover: string;\n}\n\nexport class PageResponseDto {\n  @ApiProperty()\n  castcleId: string;\n\n  @ApiProperty()\n  displayName: string;\n\n  @ApiProperty()\n  avatar: string;\n\n  @ApiProperty()\n  cover: string;\n\n  @ApiProperty()\n  updated: string;\n\n  @ApiProperty()\n  created: string;\n}\n\nexport class UpdatePageDto {\n  @ApiProperty()\n  displayName?: string;\n\n  @ApiProperty()\n  avatar?: string;\n\n  @ApiProperty()\n  cover?: string;\n}\n\nexport class PagesResponse {\n  @ApiProperty()\n  payload: PageResponseDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\nexport class PageResponse {\n  @ApiProperty()\n  payload: PageResponseDto;\n}\n\nexport class FollowResponse {\n  @ApiProperty()\n  payload: UserResponseDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GuestInterceptor.html":{"url":"injectables/GuestInterceptor.html","title":"injectable - GuestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GuestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/authentications/src/app/interceptors/guest.interceptor.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        HeadersInterceptor\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Inherited from         HeadersInterceptor\n\n                \n            \n            \n                \n                        Defined in         HeadersInterceptor:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, Injectable } from '@nestjs/common';\nimport { CastcleException, CastcleStatus } from '@castcle-api/utils/exception';\nimport {\n  HeadersInterceptor,\n  HeadersRequest\n} from '@castcle-api/utils/interceptors';\n\nexport interface GuestRequest extends HeadersRequest {\n  $platform: string;\n  $device: string;\n}\n\n@Injectable()\nexport class GuestInterceptor extends HeadersInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler) {\n    const superResult = super.intercept(context, next);\n    const request = context.switchToHttp().getRequest();\n    request.$device =\n      request.headers && request.headers.device\n        ? request.headers.device\n        : undefined;\n    request.$platform =\n      request.headers && request.headers.platform\n        ? request.headers.platform\n        : undefined;\n    if (request.$device) {\n      return superResult;\n    } else {\n      throw new CastcleException(\n        CastcleStatus.MISSING_AUTHORIZATION_HEADER,\n        request.$language\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GuestLoginDto.html":{"url":"classes/GuestLoginDto.html","title":"class - GuestLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GuestLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/authentications/src/app/dtos/dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deviceUUID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        deviceUUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/authentications/src/app/dtos/dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nexport class GuestLoginDto {\n  @ApiProperty()\n  deviceUUID: string;\n}\n\nexport class CheckEmailExistDto {\n  @ApiProperty()\n  email: string;\n}\n\nexport class LoginDto {\n  @ApiProperty()\n  username: string;\n  @ApiProperty()\n  password: string;\n}\n\nclass RegisterPayload {\n  @ApiProperty()\n  email: string;\n  @ApiProperty()\n  password: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  castcleId: string;\n}\n\nexport class RegisterByEmailDto {\n  @ApiProperty()\n  channel: 'email';\n  @ApiProperty()\n  payload: RegisterPayload;\n}\n\nexport class CheckIdExistDto {\n  @ApiProperty()\n  castcleId: string;\n}\n\nexport class TokenResponse {\n  @ApiProperty()\n  accessToken: string;\n\n  @ApiProperty()\n  refreshToken: string;\n}\n\nexport class CheckingResponse {\n  @ApiProperty()\n  message: string;\n\n  @ApiProperty()\n  payload: {\n    exist: boolean;\n  };\n}\n\nexport class RefreshTokenResponse {\n  @ApiProperty()\n  accessToken: string;\n}\n\nclass suggestCastcleIdPayload {\n  @ApiProperty()\n  suggestCastcleId: string;\n}\n\nexport class SuggestCastcleIdReponse {\n  @ApiProperty()\n  payload: suggestCastcleIdPayload;\n}\n\nexport class ChangePasswordBody {\n  @ApiProperty()\n  refCode: string;\n  @ApiProperty()\n  newPassword: string;\n}\n\nexport class VerificationPasswordBody {\n  @ApiProperty()\n  password: string;\n}\n\nexport class VerificationPasswordResponse {\n  @ApiProperty()\n  refCode: string;\n  @ApiProperty()\n  expiresTime: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GuestRequest.html":{"url":"interfaces/GuestRequest.html","title":"interface - GuestRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GuestRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/authentications/src/app/interceptors/guest.interceptor.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        HeadersRequest\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            $device\n                                        \n                                \n                                \n                                        \n                                            $platform\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $device\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        $device:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $platform\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        $platform:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CallHandler, ExecutionContext, Injectable } from '@nestjs/common';\nimport { CastcleException, CastcleStatus } from '@castcle-api/utils/exception';\nimport {\n  HeadersInterceptor,\n  HeadersRequest\n} from '@castcle-api/utils/interceptors';\n\nexport interface GuestRequest extends HeadersRequest {\n  $platform: string;\n  $device: string;\n}\n\n@Injectable()\nexport class GuestInterceptor extends HeadersInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler) {\n    const superResult = super.intercept(context, next);\n    const request = context.switchToHttp().getRequest();\n    request.$device =\n      request.headers && request.headers.device\n        ? request.headers.device\n        : undefined;\n    request.$platform =\n      request.headers && request.headers.platform\n        ? request.headers.platform\n        : undefined;\n    if (request.$device) {\n      return superResult;\n    } else {\n      throw new CastcleException(\n        CastcleStatus.MISSING_AUTHORIZATION_HEADER,\n        request.$language\n      );\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Hashtag.html":{"url":"classes/Hashtag.html","title":"class - Hashtag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Hashtag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/schemas/hashtag.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CastcleBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aggregator\n                            \n                            \n                                score\n                            \n                            \n                                tag\n                            \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                visibility\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        aggregator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/hashtag.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        score\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/hashtag.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/hashtag.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        visibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityVisibility\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:37\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { CastcleBase } from './base.schema';\n\nexport type HashtagDocument = Hashtag & Document;\n\n@Schema({ timestamps: true })\nexport class Hashtag extends CastcleBase {\n  @Prop({ required: true })\n  tag: string;\n\n  @Prop({ required: true })\n  score: number;\n\n  @Prop({ required: true, type: Object })\n  aggregator: any;\n}\n\nexport const HashtagSchema = SchemaFactory.createForClass(Hashtag);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HashtagItem.html":{"url":"classes/HashtagItem.html","title":"class - HashtagItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HashtagItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/schemas/hashtagItem.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CastcleBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hashtag\n                            \n                            \n                                objectRef\n                            \n                            \n                                payload\n                            \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                visibility\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hashtag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Hashtag\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined, ref: 'Hashtag'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/hashtagItem.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        objectRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/hashtagItem.schema.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Comment | Content | any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/hashtagItem.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        visibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityVisibility\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:37\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport * as mongoose from 'mongoose';\nimport { Hashtag } from './hashtag.schema';\nimport { Comment } from './comment.schema';\nimport { Content } from './content.schema';\nimport { CastcleBase } from './base.schema';\n\nexport type HashtagItemDocument = HashtagItem & Document;\n\n@Schema({ timestamps: true })\nexport class HashtagItem extends CastcleBase {\n  @Prop({\n    required: true,\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Hashtag'\n  })\n  hashtag: Hashtag;\n\n  @Prop({ required: true })\n  objectRef: any;\n\n  @Prop({ required: true, type: Object })\n  payload: Comment | Content | any;\n}\n\nexport const HashtagItemSchema = SchemaFactory.createForClass(HashtagItem);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HeadersInterceptor.html":{"url":"injectables/HeadersInterceptor.html","title":"injectable - HeadersInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HeadersInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/utils/interceptors/src/lib/headers/headers.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in libs/utils/interceptors/src/lib/headers/headers.interceptor.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor\n} from '@nestjs/common';\nimport { Request } from 'express';\nimport { CastcleException, CastcleStatus } from '@castcle-api/utils/exception';\nimport * as util from '../util';\n\nexport interface HeadersRequest extends Request {\n  $language: string;\n}\n\n@Injectable()\nexport class HeadersInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler) {\n    const request = context.switchToHttp().getRequest();\n    request.$language = util.getLangagueFromRequest(request);\n    if (request.$language) {\n      return next.handle();\n    } else {\n      throw new CastcleException(CastcleStatus.MISSING_AUTHORIZATION_HEADER);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeadersRequest.html":{"url":"interfaces/HeadersRequest.html","title":"interface - HeadersRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HeadersRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/utils/interceptors/src/lib/headers/headers.interceptor.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            $language\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $language\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        $language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor\n} from '@nestjs/common';\nimport { Request } from 'express';\nimport { CastcleException, CastcleStatus } from '@castcle-api/utils/exception';\nimport * as util from '../util';\n\nexport interface HeadersRequest extends Request {\n  $language: string;\n}\n\n@Injectable()\nexport class HeadersInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler) {\n    const request = context.switchToHttp().getRequest();\n    request.$language = util.getLangagueFromRequest(request);\n    if (request.$language) {\n      return next.handle();\n    } else {\n      throw new CastcleException(CastcleStatus.MISSING_AUTHORIZATION_HEADER);\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthyController.html":{"url":"controllers/HealthyController.html","title":"controller - HealthyController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthyController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/engagements/src/app/controllers/healthy/healthy.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                healthy\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/engagements/src/app/controllers/healthy/healthy.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright (c) 2021, Castcle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 3 only, as\n * published by the Free Software Foundation.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n * version 3 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 3 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Castcle, 22 Phet Kasem 47/2 Alley, Bang Khae, Bangkok,\n * Thailand 10160, or visit www.castcle.com if you need additional information\n * or have any questions.\n */\n\nimport { CastLogger, CastLoggerOptions } from '@castcle-api/logger';\nimport { Controller, Get } from '@nestjs/common';\n\n@Controller('healthy')\nexport class HealthyController {\n  private readonly logger = new CastLogger(\n    HealthyController.name,\n    CastLoggerOptions\n  );\n\n  @Get()\n  getData() {\n    this.logger.log('Health Check');\n    return '';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthyController-1.html":{"url":"controllers/HealthyController-1.html","title":"controller - HealthyController-1","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthyController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/authentications/src/app/controllers/healthy/healthy.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                healthy\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/authentications/src/app/controllers/healthy/healthy.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright (c) 2021, Castcle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 3 only, as\n * published by the Free Software Foundation.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n * version 3 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 3 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Castcle, 22 Phet Kasem 47/2 Alley, Bang Khae, Bangkok,\n * Thailand 10160, or visit www.castcle.com if you need additional information\n * or have any questions.\n */\n\nimport { Controller, Get } from '@nestjs/common';\nimport { CastLogger, CastLoggerOptions } from '@castcle-api/logger';\n\n@Controller('healthy')\nexport class HealthyController {\n  private readonly logger = new CastLogger(\n    HealthyController.name,\n    CastLoggerOptions\n  );\n\n  @Get()\n  getData() {\n    this.logger.log('Health Check');\n    return '';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthyController-2.html":{"url":"controllers/HealthyController-2.html","title":"controller - HealthyController-2","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthyController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/contents/src/app/controllers/healthy/healthy.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                healthy\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/contents/src/app/controllers/healthy/healthy.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright (c) 2021, Castcle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 3 only, as\n * published by the Free Software Foundation.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n * version 3 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 3 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Castcle, 22 Phet Kasem 47/2 Alley, Bang Khae, Bangkok,\n * Thailand 10160, or visit www.castcle.com if you need additional information\n * or have any questions.\n */\n\nimport { CastLogger, CastLoggerOptions } from '@castcle-api/logger';\nimport { Controller, Get } from '@nestjs/common';\n\n@Controller('healthy')\nexport class HealthyController {\n  private readonly logger = new CastLogger(\n    HealthyController.name,\n    CastLoggerOptions\n  );\n\n  @Get()\n  getData() {\n    this.logger.log('Health Check');\n    return '';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthyController-3.html":{"url":"controllers/HealthyController-3.html","title":"controller - HealthyController-3","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthyController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/bases/src/app/controllers/healthy/healthy.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                healthy\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/bases/src/app/controllers/healthy/healthy.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright (c) 2021, Castcle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 3 only, as\n * published by the Free Software Foundation.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n * version 3 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 3 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Castcle, 22 Phet Kasem 47/2 Alley, Bang Khae, Bangkok,\n * Thailand 10160, or visit www.castcle.com if you need additional information\n * or have any questions.\n */\n\nimport { Controller, Get } from '@nestjs/common';\nimport { CastLogger, CastLoggerOptions } from '@castcle-api/logger';\n\n@Controller('healthy')\nexport class HealthyController {\n  private readonly logger = new CastLogger(\n    HealthyController.name,\n    CastLoggerOptions\n  );\n\n  @Get()\n  getData() {\n    this.logger.log('Health Check');\n    return '';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthyController-4.html":{"url":"controllers/HealthyController-4.html","title":"controller - HealthyController-4","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthyController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/metadata/src/app/controllers/healthy/healthy.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                healthy\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/metadata/src/app/controllers/healthy/healthy.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright (c) 2021, Castcle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 3 only, as\n * published by the Free Software Foundation.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n * version 3 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 3 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Castcle, 22 Phet Kasem 47/2 Alley, Bang Khae, Bangkok,\n * Thailand 10160, or visit www.castcle.com if you need additional information\n * or have any questions.\n */\n\nimport { Controller, Get } from '@nestjs/common';\nimport { CastLogger, CastLoggerOptions } from '@castcle-api/logger';\n\n@Controller('healthy')\nexport class HealthyController {\n  private readonly logger = new CastLogger(\n    HealthyController.name,\n    CastLoggerOptions\n  );\n\n  @Get()\n  getData() {\n    this.logger.log('Health Check');\n    return '';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthyController-5.html":{"url":"controllers/HealthyController-5.html","title":"controller - HealthyController-5","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthyController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/users/src/app/controllers/healthy/healthy.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                healthy\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/users/src/app/controllers/healthy/healthy.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright (c) 2021, Castcle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 3 only, as\n * published by the Free Software Foundation.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n * version 3 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 3 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Castcle, 22 Phet Kasem 47/2 Alley, Bang Khae, Bangkok,\n * Thailand 10160, or visit www.castcle.com if you need additional information\n * or have any questions.\n */\n\nimport { Controller, Get } from '@nestjs/common';\nimport { CastLogger, CastLoggerOptions } from '@castcle-api/logger';\n\n@Controller('healthy')\nexport class HealthyController {\n  private readonly logger = new CastLogger(\n    HealthyController.name,\n    CastLoggerOptions\n  );\n\n  @Get()\n  getData() {\n    this.logger.log('Health Check');\n    return '';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAccount.html":{"url":"interfaces/IAccount.html","title":"interface - IAccount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAccount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/schemas/account.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        changePassword\n                                    \n                                \n                                \n                                    \n                                        verifyPassword\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePassword\n                        \n                    \n                \n            \n            \n                \nchangePassword(pasword: string, email?: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/database/src/lib/schemas/account.schema.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pasword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyPassword\n                        \n                    \n                \n            \n            \n                \nverifyPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/database/src/lib/schemas/account.schema.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Document, Model, model } from 'mongoose';\nimport { CastcleBase } from './base.schema';\nimport { AccountActivationDocument } from './accountActivation.schema';\nimport { Environment as env } from '@castcle-api/environments';\nimport { CredentialDocument, CredentialSchema } from './credential.schema';\nimport { Password } from '@castcle-api/utils';\nimport { User } from './user.schema';\nimport { EntityVisibility } from '../dtos/common.dto';\nexport type AccountDocument = Account & IAccount;\n\nexport enum AccountRole {\n  Member = 'member',\n  Guest = 'guest'\n}\n\ninterface ICredential {\n  _id: any;\n  deviceUUID: string;\n}\n\n@Schema({ timestamps: true })\nexport class Account extends CastcleBase {\n  @Prop()\n  email: string;\n\n  @Prop()\n  password: string;\n\n  @Prop()\n  activateDate: Date;\n\n  @Prop({ required: true })\n  isGuest: boolean;\n\n  @Prop({ required: true, type: Object })\n  preferences: {\n    langagues: string[];\n  };\n\n  @Prop({ type: Object })\n  mobile: {\n    countryCode: string;\n    number: string;\n  };\n\n  @Prop({ type: Array })\n  credentials: ICredential[];\n}\nexport const AccountSchema = SchemaFactory.createForClass(Account);\n\nexport interface IAccount extends Document {\n  changePassword(\n    pasword: string,\n    email?: string\n  ): Promise;\n  verifyPassword(password: string): boolean;\n}\nAccountSchema.methods.changePassword = async function (\n  password: string,\n  email?: string\n) {\n  const encryptPassword = await Password.create(password);\n  if (encryptPassword) {\n    (this as AccountDocument).password = encryptPassword;\n    if (email) (this as AccountDocument).email = email;\n    return this.save();\n  } else return null;\n};\nAccountSchema.methods.verifyPassword = function (password: string) {\n  return Password.verify(password, (this as AccountDocument).password);\n};\n\nexport const AccountSchemaFactory = (\n  credentialModel: Model\n): mongoose.Schema => {\n  AccountSchema.pre('save', function (next) {\n    if (!(this as AccountDocument).visibility)\n      (this as AccountDocument).visibility = EntityVisibility.Publish;\n    next();\n  });\n  AccountSchema.post('save', async function (doc, next) {\n    await credentialModel\n      .findOneAndUpdate(\n        { 'account._id': doc._id },\n        {\n          'account.isGuest': (doc as AccountDocument).isGuest,\n          'account.activateDate': (doc as AccountDocument).activateDate,\n          'account.visibility': (doc as AccountDocument).visibility\n        }\n      )\n      .exec();\n    next();\n  });\n  return AccountSchema;\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAccountActivation.html":{"url":"interfaces/IAccountActivation.html","title":"interface - IAccountActivation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAccountActivation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/schemas/accountActivation.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        isVerifyTokenValid\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isVerifyTokenValid\n                        \n                    \n                \n            \n            \n                \nisVerifyTokenValid()\n                \n            \n\n\n            \n                \n                    Defined in libs/database/src/lib/schemas/accountActivation.schema.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { env } from '../environment';\nimport { Document, Model } from 'mongoose';\nimport { Account } from '../schemas/account.schema';\nimport { CastcleBase } from './base.schema';\nimport { EmailVerifyToken } from '../dtos/token.dto';\nimport { Token } from '@castcle-api/utils';\n\nexport type AccountActivationDocument = AccountActivation & IAccountActivation;\n\nexport enum AccountActivationType {\n  Email = 'email',\n  Mobile = 'mobile'\n}\n\n@Schema({ timestamps: true })\nexport class AccountActivation extends CastcleBase {\n  @Prop({\n    required: true,\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Account'\n  })\n  account: Account;\n\n  @Prop({ required: true })\n  type: string;\n\n  @Prop({ required: true })\n  verifyToken: string;\n\n  @Prop({ required: true })\n  verifyTokenExpireDate: Date;\n\n  @Prop()\n  activationDate: Date;\n\n  @Prop()\n  revocationDate: Date;\n}\n\nexport const AccountActivationSchema =\n  SchemaFactory.createForClass(AccountActivation);\n\nexport interface IAccountActivation extends Document {\n  isVerifyTokenValid(): boolean;\n}\n\nAccountActivationSchema.methods.isVerifyTokenValid = function () {\n  return Token.isTokenValid(\n    (this as AccountActivationDocument).verifyToken,\n    env.jwt_verify_secret\n  );\n};\n\nexport interface AccountActivationModel\n  extends Model {\n  generateVerifyToken(payload: EmailVerifyToken): {\n    verifyToken: string;\n    verifyTokenExpireDate: Date;\n  };\n}\n\nAccountActivationSchema.statics.generateVerifyToken = function (\n  payload: EmailVerifyToken\n) {\n  const now = new Date();\n  const verifyTokenExpireDate = new Date(\n    now.getTime() + Number(env.jwt_verify_expires_in) * 1000\n  );\n  payload.verifyTokenExpiresTime = verifyTokenExpireDate.toISOString();\n  const verifyToken = Token.generateToken(\n    payload,\n    env.jwt_verify_secret,\n    Number(env.jwt_verify_expires_in)\n  );\n  return {\n    verifyToken,\n    verifyTokenExpireDate\n  };\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IContent.html":{"url":"interfaces/IContent.html","title":"interface - IContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/schemas/content.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        toContentPayload\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toContentPayload\n                        \n                    \n                \n            \n            \n                \ntoContentPayload()\n                \n            \n\n\n            \n                \n                    Defined in libs/database/src/lib/schemas/content.schema.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         ContentPayloadDto\n\n                    \n                    \n                        return payload that need to use in controller (not yet implement with engagement)\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Document, Model } from 'mongoose';\nimport { Account } from '../schemas/account.schema';\nimport {\n  ContentPayloadDto,\n  ShortPayload,\n  ContentType,\n  BlogPayload,\n  Author\n} from '../dtos/content.dto';\nimport { CastcleBase } from './base.schema';\nimport { RevisionDocument } from './revision.schema';\nimport { EngagementDocument, EngagementType } from './engagement.schema';\nimport { EntityVisibility } from '../dtos/common.dto';\n\n//TODO: !!!  need to revise this\nexport interface RecastPayload {\n  source: Content;\n}\n\nexport interface QuotePayload {\n  source: Content;\n  content: string;\n}\n\nexport type ContentDocument = Content & IContent;\n\n@Schema({ timestamps: true })\nexport class Content extends CastcleBase {\n  @Prop({ required: true, type: Object })\n  author: Author;\n\n  @Prop({ required: true })\n  type: string;\n\n  @Prop({ required: true, type: Object })\n  payload: ShortPayload | BlogPayload | RecastPayload | QuotePayload;\n\n  @Prop({ type: Object })\n  engagements: {\n    [engagementKey: string]: {\n      count: number;\n      refs: any[];\n    };\n  };\n\n  @Prop({ required: true })\n  revisionCount: number;\n\n  @Prop({ type: Array })\n  hashtags: any[];\n}\n\ninterface IContent extends Document {\n  /**\n   * @returns {ContentPayloadDto} return payload that need to use in controller (not yet implement with engagement)\n   */\n  toContentPayload(): ContentPayloadDto;\n}\n\nexport const ContentSchema = SchemaFactory.createForClass(Content);\n\nContentSchema.methods.toContentPayload = function () {\n  //Todo Need to implement recast quote cast later on\n  return {\n    id: (this as ContentDocument)._id,\n    author: (this as ContentDocument).author,\n    commented: {\n      commented: false, //TODO !!! need to update after implement with engagement\n      count:\n        (this as ContentDocument).engagements &&\n        (this as ContentDocument).engagements['comment']\n          ? (this as ContentDocument).engagements['comment'].count\n          : 0,\n      participants: []\n    },\n    payload: (this as ContentDocument).payload,\n    created: (this as ContentDocument).createdAt.toISOString(),\n    updated: (this as ContentDocument).updatedAt.toISOString(),\n    liked: {\n      liked: false,\n      count:\n        (this as ContentDocument).engagements &&\n        (this as ContentDocument).engagements['like']\n          ? (this as ContentDocument).engagements['like'].count\n          : 0,\n      participants: []\n    },\n    type: (this as ContentDocument).type,\n    feature: {\n      slug: 'feed',\n      key: 'feature.feed',\n      name: 'Feed'\n    }\n  } as ContentPayloadDto;\n};\n\nconst removeEngagementAggregateIfDeleted = async (\n  doc: ContentDocument,\n  engagementModel: Model\n) => {\n  let payload: QuotePayload | RecastPayload;\n  if (doc.type === ContentType.Recast || doc.type === ContentType.Quote) {\n    payload =\n      doc.type === ContentType.Recast\n        ? (doc.payload as RecastPayload)\n        : (doc.payload as QuotePayload);\n  }\n};\n\nexport const ContentSchemaFactory = (\n  revisionModel: Model\n): mongoose.Schema => {\n  const contentModel = mongoose.model(\n    'Content',\n    ContentSchema\n  ) as unknown as Model;\n\n  ContentSchema.pre('save', function (next) {\n    //defualt is publish\n    (this as ContentDocument).visibility = (this as ContentDocument).visibility\n      ? (this as ContentDocument).visibility\n      : EntityVisibility.Publish;\n    (this as ContentDocument).revisionCount = (this as ContentDocument)\n      .revisionCount\n      ? (this as ContentDocument).revisionCount + 1\n      : 1;\n    if (!(this as ContentDocument).engagements) {\n      (this as ContentDocument).engagements = {\n        like: {\n          count: 0,\n          refs: []\n        },\n        comment: {\n          count: 0,\n          refs: []\n        },\n        recast: {\n          count: 0,\n          refs: []\n        },\n        quote: {\n          count: 0,\n          refs: []\n        }\n      };\n    }\n    next();\n  });\n  ContentSchema.post('save', async function (doc, next) {\n    const session = await revisionModel.startSession();\n\n    session.withTransaction(async () => {\n      session.abortTransaction();\n      //update revision\n      const newRevison = new revisionModel({\n        objectRef: {\n          $ref: 'content',\n          $id: mongoose.Types.ObjectId((doc as ContentDocument)._id)\n        },\n        payload: doc as Content\n      });\n      const result = await newRevison.save();\n      //f content not publish go remove all content\n      if ((doc as ContentDocument).visibility != EntityVisibility.Publish) {\n        //if this is quote cast\n      }\n    });\n    session.endSession();\n    next();\n  });\n  return ContentSchema;\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICredential.html":{"url":"interfaces/ICredential.html","title":"interface - ICredential","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICredential\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/schemas/account.schema.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            deviceUUID\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deviceUUID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deviceUUID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Document, Model, model } from 'mongoose';\nimport { CastcleBase } from './base.schema';\nimport { AccountActivationDocument } from './accountActivation.schema';\nimport { Environment as env } from '@castcle-api/environments';\nimport { CredentialDocument, CredentialSchema } from './credential.schema';\nimport { Password } from '@castcle-api/utils';\nimport { User } from './user.schema';\nimport { EntityVisibility } from '../dtos/common.dto';\nexport type AccountDocument = Account & IAccount;\n\nexport enum AccountRole {\n  Member = 'member',\n  Guest = 'guest'\n}\n\ninterface ICredential {\n  _id: any;\n  deviceUUID: string;\n}\n\n@Schema({ timestamps: true })\nexport class Account extends CastcleBase {\n  @Prop()\n  email: string;\n\n  @Prop()\n  password: string;\n\n  @Prop()\n  activateDate: Date;\n\n  @Prop({ required: true })\n  isGuest: boolean;\n\n  @Prop({ required: true, type: Object })\n  preferences: {\n    langagues: string[];\n  };\n\n  @Prop({ type: Object })\n  mobile: {\n    countryCode: string;\n    number: string;\n  };\n\n  @Prop({ type: Array })\n  credentials: ICredential[];\n}\nexport const AccountSchema = SchemaFactory.createForClass(Account);\n\nexport interface IAccount extends Document {\n  changePassword(\n    pasword: string,\n    email?: string\n  ): Promise;\n  verifyPassword(password: string): boolean;\n}\nAccountSchema.methods.changePassword = async function (\n  password: string,\n  email?: string\n) {\n  const encryptPassword = await Password.create(password);\n  if (encryptPassword) {\n    (this as AccountDocument).password = encryptPassword;\n    if (email) (this as AccountDocument).email = email;\n    return this.save();\n  } else return null;\n};\nAccountSchema.methods.verifyPassword = function (password: string) {\n  return Password.verify(password, (this as AccountDocument).password);\n};\n\nexport const AccountSchemaFactory = (\n  credentialModel: Model\n): mongoose.Schema => {\n  AccountSchema.pre('save', function (next) {\n    if (!(this as AccountDocument).visibility)\n      (this as AccountDocument).visibility = EntityVisibility.Publish;\n    next();\n  });\n  AccountSchema.post('save', async function (doc, next) {\n    await credentialModel\n      .findOneAndUpdate(\n        { 'account._id': doc._id },\n        {\n          'account.isGuest': (doc as AccountDocument).isGuest,\n          'account.activateDate': (doc as AccountDocument).activateDate,\n          'account.visibility': (doc as AccountDocument).visibility\n        }\n      )\n      .exec();\n    next();\n  });\n  return AccountSchema;\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICredential-1.html":{"url":"interfaces/ICredential-1.html","title":"interface - ICredential-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICredential\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/schemas/credential.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        isAccessTokenValid\n                                    \n                                \n                                \n                                    \n                                        isRefreshTokenValid\n                                    \n                                \n                                \n                                    \n                                        renewAccessToken\n                                    \n                                \n                                \n                                    \n                                        renewTokens\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isAccessTokenValid\n                        \n                    \n                \n            \n            \n                \nisAccessTokenValid()\n                \n            \n\n\n            \n                \n                    Defined in libs/database/src/lib/schemas/credential.schema.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRefreshTokenValid\n                        \n                    \n                \n            \n            \n                \nisRefreshTokenValid()\n                \n            \n\n\n            \n                \n                    Defined in libs/database/src/lib/schemas/credential.schema.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renewAccessToken\n                        \n                    \n                \n            \n            \n                \nrenewAccessToken(payload: AccessTokenPayload | MemberAccessTokenPayload)\n                \n            \n\n\n            \n                \n                    Defined in libs/database/src/lib/schemas/credential.schema.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                AccessTokenPayload | MemberAccessTokenPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renewTokens\n                        \n                    \n                \n            \n            \n                \nrenewTokens(accessTokenPayload: AccessTokenPayload | MemberAccessTokenPayload, refreshTokenPayload: RefreshTokenPayload)\n                \n            \n\n\n            \n                \n                    Defined in libs/database/src/lib/schemas/credential.schema.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accessTokenPayload\n                                    \n                                                AccessTokenPayload | MemberAccessTokenPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    refreshTokenPayload\n                                    \n                                                RefreshTokenPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Token } from '@castcle-api/utils';\nimport { env } from '../environment';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Document } from 'mongoose';\nimport { Account } from '../schemas/account.schema';\nimport { CastcleBase } from './base.schema';\nimport {\n  AccessTokenPayload,\n  RefreshTokenPayload,\n  MemberAccessTokenPayload\n} from '../dtos/token.dto';\nimport { EntityVisibility } from '../dtos/common.dto';\n\nexport type CredentialDocument = Credential & ICredential;\n\n@Schema({ timestamps: true })\nexport class Credential extends CastcleBase {\n  @Prop({\n    required: true,\n    type: Object\n  })\n  account: Account;\n\n  @Prop({ required: true })\n  accessToken: string;\n\n  @Prop({ required: true })\n  refreshToken: string;\n\n  @Prop({ required: true })\n  accessTokenExpireDate: Date;\n\n  @Prop({ required: true })\n  refreshTokenExpireDate: Date;\n\n  @Prop({ required: true })\n  platform: string;\n\n  @Prop({ required: true })\n  deviceUUID: string;\n\n  @Prop({ required: true })\n  device: string;\n}\n\nexport const CredentialSchema = SchemaFactory.createForClass(Credential);\n\nexport interface CredentialModel extends mongoose.Model {\n  generateAccessToken(payload: AccessTokenPayload | MemberAccessTokenPayload): {\n    accessToken: string;\n    accessTokenExpireDate: Date;\n  };\n  generateRefreshToken(payload: RefreshTokenPayload): {\n    refreshToken: string;\n    refreshTokenExpireDate: Date;\n  };\n}\n\nCredentialSchema.statics.generateAccessToken = (\n  payload: AccessTokenPayload | MemberAccessTokenPayload\n) => {\n  const now = new Date();\n  const accessTokenExpireDate = new Date(\n    now.getTime() + Number(env.jwt_access_expires_in) * 1000\n  );\n  payload.accessTokenExpiresTime = accessTokenExpireDate.toISOString();\n  const accessToken = Token.generateToken(\n    payload,\n    env.jwt_access_secret,\n    Number(env.jwt_access_expires_in)\n  );\n  return {\n    accessToken,\n    accessTokenExpireDate\n  };\n};\nCredentialSchema.statics.generateRefreshToken = (\n  payload: RefreshTokenPayload\n) => {\n  const now = new Date();\n  const refreshTokenExpireDate = new Date(\n    now.getTime() + Number(env.jwt_refresh_expires_in) * 1000\n  );\n  payload.refreshTokenExpiresTime = refreshTokenExpireDate.toISOString();\n  const refreshToken = Token.generateToken(\n    payload,\n    env.jwt_refresh_secret,\n    Number(env.jwt_refresh_expires_in)\n  );\n\n  return {\n    refreshToken,\n    refreshTokenExpireDate\n  };\n};\n\nexport interface ICredential extends Document {\n  renewTokens(\n    accessTokenPayload: AccessTokenPayload | MemberAccessTokenPayload,\n    refreshTokenPayload: RefreshTokenPayload\n  ): Promise;\n  renewAccessToken(\n    payload: AccessTokenPayload | MemberAccessTokenPayload\n  ): Promise;\n  isAccessTokenValid(): boolean;\n  isRefreshTokenValid(): boolean;\n}\n\nCredentialSchema.methods.renewTokens = async function (\n  accessTokenPayload: AccessTokenPayload | MemberAccessTokenPayload,\n  refreshTokenPayload: RefreshTokenPayload\n) {\n  const credentialModel = mongoose.model(\n    'Credential',\n    CredentialSchema\n  ) as unknown as CredentialModel;\n  const refreshTokenResult =\n    credentialModel.generateRefreshToken(refreshTokenPayload);\n  const accessTokenResult =\n    credentialModel.generateAccessToken(accessTokenPayload);\n  (this as CredentialDocument).accessToken = accessTokenResult.accessToken;\n  (this as CredentialDocument).accessTokenExpireDate =\n    accessTokenResult.accessTokenExpireDate;\n  (this as CredentialDocument).refreshToken = refreshTokenResult.refreshToken;\n  (this as CredentialDocument).refreshTokenExpireDate =\n    refreshTokenResult.refreshTokenExpireDate;\n  await this.save();\n  return {\n    accessToken: accessTokenResult.accessToken,\n    refreshToken: refreshTokenResult.refreshToken\n  };\n};\n\nCredentialSchema.methods.renewAccessToken = async function (\n  payload: AccessTokenPayload | MemberAccessTokenPayload\n) {\n  const credentialModel = mongoose.model(\n    'Credential',\n    CredentialSchema\n  ) as unknown as CredentialModel;\n  const result = credentialModel.generateAccessToken(payload);\n  (this as CredentialDocument).accessToken = result.accessToken;\n  (this as CredentialDocument).accessTokenExpireDate =\n    result.accessTokenExpireDate;\n  await this.save();\n  return result.accessToken;\n};\n\nCredentialSchema.methods.isAccessTokenValid = function () {\n  if (\n    (this as CredentialDocument).account.visibility !== EntityVisibility.Publish\n  )\n    return false;\n  return Token.isTokenValid(\n    (this as CredentialDocument).accessToken,\n    env.jwt_access_secret\n  );\n};\nCredentialSchema.methods.isRefreshTokenValid = function () {\n  if (\n    (this as CredentialDocument).account.visibility !== EntityVisibility.Publish\n  )\n    return false;\n  return Token.isTokenValid(\n    (this as CredentialDocument).accessToken,\n    env.jwt_access_secret\n  );\n};\n\nexport const CredentialSchemaFactory = (): mongoose.Schema => {\n  return CredentialSchema;\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IOtp.html":{"url":"interfaces/IOtp.html","title":"interface - IOtp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IOtp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/schemas/otp.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        isValid\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isValid\n                        \n                    \n                \n            \n            \n                \nisValid()\n                \n            \n\n\n            \n                \n                    Defined in libs/database/src/lib/schemas/otp.schema.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { env } from '../environment';\nimport { Document, Model } from 'mongoose';\nimport { CastcleBase } from './base.schema';\nimport { Account } from './account.schema';\nimport { Password } from '@castcle-api/utils';\n\nexport enum OtpObjective {\n  ChangePassword = 'changepassword'\n}\n\nexport type OtpDocument = Otp & IOtp;\n\n@Schema({ timestamps: true })\nexport class Otp extends CastcleBase {\n  @Prop({\n    required: true,\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Account'\n  })\n  account: Account;\n\n  @Prop({ required: true })\n  action: string;\n\n  @Prop({ required: true })\n  refCode: string;\n\n  @Prop({ required: true })\n  expireDate: Date;\n}\n\nexport const OtpSchema = SchemaFactory.createForClass(Otp);\n\ninterface IOtp extends Document {\n  isValid(): boolean;\n}\n\nexport interface OtpModel extends Model {\n  /**\n   *  generate random refCode, check if it exist keep generating until found not exist one\n   * @param {mongoose.Schema.Types.ObjectId} accountId\n   * @param {OtpObjective} objective\n   * @returns {Promise}\n   */\n  generate(accountId: any, objective: OtpObjective): Promise;\n}\n\nOtpSchema.statics.generate = async function (\n  accountId: any,\n  objective: OtpObjective\n) {\n  let newRefCode: string;\n  let otpFindingResult;\n  do {\n    newRefCode = Password.generateRandomDigits(env.otp_digits);\n    otpFindingResult = await this.findOne({\n      account: accountId,\n      action: objective,\n      refCode: newRefCode\n    }).exec();\n  } while (otpFindingResult);\n  const now = new Date();\n  const otp = new this({\n    account: accountId,\n    action: objective,\n    refCode: newRefCode,\n    expireDate: new Date(now.getTime() + env.otp_expires_in * 1000)\n  });\n  return otp.save();\n};\n\nOtpSchema.methods.isValid = function () {\n  const now = new Date().getTime();\n  const expireDate = (this as OtpDocument).expireDate.getTime();\n  return expireDate - now >= 0;\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/schemas/user.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        follow\n                                    \n                                \n                                \n                                    \n                                        toPageResponse\n                                    \n                                \n                                \n                                    \n                                        toUserResponse\n                                    \n                                \n                                \n                                    \n                                        unfollow\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        follow\n                        \n                    \n                \n            \n            \n                \nfollow(user: UserDocument)\n                \n            \n\n\n            \n                \n                    Defined in libs/database/src/lib/schemas/user.schema.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toPageResponse\n                        \n                    \n                \n            \n            \n                \ntoPageResponse()\n                \n            \n\n\n            \n                \n                    Defined in libs/database/src/lib/schemas/user.schema.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PageResponseDto\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toUserResponse\n                        \n                    \n                \n            \n            \n                \ntoUserResponse()\n                \n            \n\n\n            \n                \n                    Defined in libs/database/src/lib/schemas/user.schema.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unfollow\n                        \n                    \n                \n            \n            \n                \nunfollow(user: UserDocument)\n                \n            \n\n\n            \n                \n                    Defined in libs/database/src/lib/schemas/user.schema.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Document, Model } from 'mongoose';\nimport { Account, AccountDocument } from '../schemas/account.schema';\nimport { CastcleBase } from './base.schema';\nimport {\n  PageDto,\n  PageResponse,\n  PageResponseDto,\n  UserResponseDto\n} from '../dtos/user.dto';\nimport { RelationshipDocument } from './relationship.schema';\nimport { EntityVisibility } from '../dtos/common.dto';\n\nexport type UserDocument = User & IUser;\n\ntype ProfileImage = {\n  avatar?: string;\n  cover?: string;\n};\n\nexport interface UserProfile {\n  birthdate?: string;\n  overview?: string;\n  works?: string[];\n  educations?: string[];\n  homeTowns?: string[];\n  websites?: {\n    website: string;\n    detail: string;\n  }[];\n  socials?: {\n    facebook?: string;\n    twitter?: string;\n    youtube?: string;\n    medium?: string;\n  };\n  details?: string;\n  images?: ProfileImage;\n}\n\nexport enum UserType {\n  People = 'people',\n  Page = 'page'\n}\n\n@Schema({ timestamps: true })\nexport class User extends CastcleBase {\n  @Prop({\n    required: true,\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Account'\n  })\n  ownerAccount: Account;\n\n  /**\n   * This is the same as castcleId\n   * @field this is field displayName\n   */\n  @Prop({ required: true })\n  displayName: string;\n\n  @Prop({ required: true })\n  displayId: string;\n\n  @Prop({ type: Object })\n  profile?: UserProfile;\n\n  @Prop({ required: true })\n  type: string;\n\n  @Prop()\n  verified: boolean;\n\n  @Prop()\n  followerCount: number;\n\n  @Prop()\n  followedCount: number;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\nexport interface IUser extends Document {\n  toUserResponse(): Promise;\n  toPageResponse(): PageResponseDto;\n  follow(user: UserDocument): Promise;\n  unfollow(user: UserDocument): Promise;\n}\n\nexport interface UserModel extends mongoose.Model {\n  covertToUserResponse(user: User | UserDocument): UserResponseDto;\n}\n\nconst _covertToUserResponse = (self: User | UserDocument) => {\n  const selfSocial: any =\n    self.profile && self.profile.socials ? { ...self.profile.socials } : {};\n  if (self.profile && self.profile.websites && self.profile.websites.length > 0)\n    selfSocial.website = self.profile.websites[0].website;\n  return {\n    id: self._id,\n    castcleId: self.displayId,\n    dob: self.profile && self.profile.birthdate ? self.profile.birthdate : null,\n    followers: {\n      count: self.followerCount\n    },\n    following: {\n      count: self.followedCount\n    },\n    images: {\n      avatar:\n        self.profile && self.profile.images && self.profile.images.avatar\n          ? self.profile.images.avatar\n          : 'http://placehold.it/100x100', // TODO !!! need to check S3 about static url\n      cover:\n        self.profile && self.profile.images && self.profile.images.cover\n          ? self.profile.images.cover\n          : 'http://placehold.it/200x200'\n    },\n    overview:\n      self.profile && self.profile.overview ? self.profile.overview : null,\n    links: selfSocial,\n    verified: self.verified ? true : false\n  } as UserResponseDto;\n};\n\nUserSchema.statics.covertToUserResponse = (self: User | UserDocument) =>\n  _covertToUserResponse(self);\n\nUserSchema.methods.toUserResponse = async function () {\n  const self = await (this as UserDocument)\n    .populate('ownerAccount')\n    .execPopulate();\n  const response = _covertToUserResponse(self);\n  response.email = self.ownerAccount.email;\n  const selfSocial: any =\n    self.profile && self.profile.socials ? { ...self.profile.socials } : {};\n  return response;\n};\n\nUserSchema.methods.toPageResponse = function () {\n  return {\n    castcleId: (this as UserDocument).displayId,\n    displayName: (this as UserDocument).displayName,\n    avatar: (this as UserDocument).profile.images.avatar,\n    cover: (this as UserDocument).profile.images.cover,\n    updated: (this as UserDocument).updatedAt.toISOString(),\n    created: (this as UserDocument).createdAt.toISOString()\n  } as PageResponseDto;\n};\n\nexport const UserSchemaFactory = (\n  relationshipModel: Model\n): mongoose.Schema => {\n  /**\n   * Make sure all aggregate counter is 0\n   */\n  UserSchema.pre('save', function (next) {\n    if (!(this as UserDocument).visibility)\n      (this as UserDocument).visibility = EntityVisibility.Publish;\n    if (!(this as UserDocument).followedCount)\n      (this as UserDocument).followedCount = 0;\n    if (!(this as UserDocument).followerCount)\n      (this as UserDocument).followerCount = 0;\n    next();\n  });\n  UserSchema.methods.follow = async function (followedUser: UserDocument) {\n    const session = await relationshipModel.startSession();\n    await session.withTransaction(async () => {\n      ///TODO !!! Might have to change if relationship is embed\n      const setObject = {\n        user: (this as UserDocument)._id,\n        followedUser: followedUser._id,\n        isFollowPage: false\n      };\n      if ((followedUser as UserDocument).type === UserType.Page)\n        setObject.isFollowPage = true;\n      const result = await relationshipModel\n        .updateOne(\n          {\n            user: (this as UserDocument)._id,\n            followedUser: followedUser._id\n          },\n          {\n            $setOnInsert: setObject\n          },\n          {\n            upsert: true\n          }\n        )\n        .exec();\n      if (result.upserted) {\n        (this as UserDocument).followedCount++;\n        followedUser.followerCount++;\n        await Promise.all([this.save(), followedUser.save()]);\n      }\n    });\n    session.endSession();\n  };\n\n  UserSchema.methods.unfollow = async function (followedUser: UserDocument) {\n    const session = await relationshipModel.startSession();\n    await session.withTransaction(async () => {\n      const result = await relationshipModel\n        .deleteOne({\n          user: this._id,\n          followedUser: followedUser._id\n        })\n        .exec();\n      if (result.deletedCount === 1) {\n        (this as UserDocument).followedCount--;\n        followedUser.followerCount--;\n        await Promise.all([this.save(), followedUser.save()]);\n      }\n    });\n    session.endSession();\n  };\n  return UserSchema;\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Image.html":{"url":"classes/Image.html","title":"class - Image","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Image\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/utils/aws/src/lib/image.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                order\n                            \n                            \n                                    Public\n                                uri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toSignUrl\n                            \n                            \n                                    Static\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uri: string, order?: number)\n                    \n                \n                        \n                            \n                                Defined in libs/utils/aws/src/lib/image.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uri\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        order\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in libs/utils/aws/src/lib/image.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        uri\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/utils/aws/src/lib/image.ts:29\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toSignUrl\n                        \n                    \n                \n            \n            \n                \ntoSignUrl()\n                \n            \n\n\n            \n                \n                    Defined in libs/utils/aws/src/lib/image.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        upload\n                        \n                    \n                \n            \n            \n                \n                    \n                    upload(base64: string, options?: UploadOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/utils/aws/src/lib/image.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    base64\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                UploadOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as AWS from 'aws-sdk';\nimport * as Configs from '../config';\nimport { Environment as env } from '@castcle-api/environments';\nimport { Uploader, UploadOptions } from './uploader';\n\nexport class Image {\n  constructor(public uri: string, public order?: number) {}\n\n  toSignUrl() {\n    const buff = Buffer.from(env.cloudfront_private_key, 'base64');\n    const cloudFrontPrivateKey = buff.toString('ascii');\n    const signer = new AWS.CloudFront.Signer(\n      env.cloudfront_access_key_id\n        ? env.cloudfront_access_key_id\n        : 'testCloudKey',\n      cloudFrontPrivateKey\n    );\n    return signer.getSignedUrl({\n      url: `${\n        env.assets_host ? env.assets_host : 'https://assets-dev.castcle.com'\n      }/${this.uri}`,\n      expires: Math.floor((Date.now() + Configs.EXPIRE_TIME) / 1000)\n    });\n  }\n\n  static upload(base64: string, options?: UploadOptions) {\n    const uploader = new Uploader(\n      env.assets_bucket_name ? env.assets_bucket_name : 'testBucketName',\n      Configs.IMAGE_BUCKET_FOLDER\n    );\n    return uploader\n      .uploadFromBase64ToS3(base64, options)\n      .then((data) => new Image(data.Key, options.order));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImageInterceptor.html":{"url":"injectables/ImageInterceptor.html","title":"injectable - ImageInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ImageInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/users/src/app/interceptors/image.interceptor.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CredentialInterceptor\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        intercept\n                        \n                    \n                \n            \n            \n                \n                    \n                    intercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Inherited from         CredentialInterceptor\n\n                \n            \n            \n                \n                        Defined in         CredentialInterceptor:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, Injectable } from '@nestjs/common';\nimport {\n  FollowResponse,\n  UpdateUserDto,\n  UserResponseDto\n} from '@castcle-api/database/dtos';\n\nimport { Image } from '@castcle-api/utils/aws';\nimport {\n  CredentialInterceptor,\n  CredentialRequest\n} from '@castcle-api/utils/interceptors';\nimport { map } from 'rxjs';\n\n@Injectable()\nexport class ImageInterceptor extends CredentialInterceptor {\n  async intercept(context: ExecutionContext, next: CallHandler) {\n    const superResult = await super.intercept(context, next);\n    const req = context.switchToHttp().getRequest() as CredentialRequest;\n    const body = req.body as UpdateUserDto;\n    if (body.images && body.images.avatar) {\n      const avatar = await Image.upload(body.images.avatar, {\n        filename: `avatar-${req.$credential.account._id}`\n      });\n      req.body.images.avatar = avatar.uri;\n    }\n    if (body.images && body.images.cover) {\n      const cover = await Image.upload(body.images.cover, {\n        filename: `cover-${req.$credential.account._id}`\n      });\n      req.body.images.cover = cover.uri;\n    }\n\n    return superResult.pipe(\n      map((data: UserResponseDto) => {\n        console.log('from', data);\n        if (data.images && data.images.avatar)\n          data.images.avatar = new Image(data.images.avatar).toSignUrl();\n        if (data.images && data.images.cover)\n          data.images.cover = new Image(data.images.cover).toSignUrl();\n        return data;\n      })\n    );\n  }\n}\n\n@Injectable()\nexport class FollowInterceptor extends CredentialInterceptor {\n  async intercept(context: ExecutionContext, next: CallHandler) {\n    const superResult = await super.intercept(context, next);\n    return superResult.pipe(\n      map((data: FollowResponse) => {\n        data.payload = data.payload.map((response) => {\n          if (response.images && response.images.avatar)\n            response.images.avatar = new Image(\n              response.images.avatar\n            ).toSignUrl();\n          if (response.images && response.images.cover)\n            response.images.cover = new Image(\n              response.images.cover\n            ).toSignUrl();\n          return response;\n        });\n        return data;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImagePayload.html":{"url":"classes/ImagePayload.html","title":"class - ImagePayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImagePayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/content.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                photo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        photo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShortPhoto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:64\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Pagination } from './common.dto';\nimport { CastcleQueryOptions } from './common.dto';\n\nclass Url {\n  @ApiProperty()\n  url: string;\n}\n\nclass Link {\n  @ApiProperty()\n  type: string;\n\n  @ApiProperty()\n  url: string;\n}\n\nclass BlogPhoto {\n  @ApiProperty()\n  cover: Url;\n\n  @ApiProperty()\n  contents: Url[];\n}\n\nclass ShortPhoto {\n  @ApiProperty()\n  contents: Url[];\n}\n\nexport class ShortPayload {\n  @ApiProperty()\n  message?: string;\n  @ApiProperty()\n  photo?: ShortPhoto;\n  @ApiProperty()\n  link?: Link[];\n}\n\nexport class ImagePayload {\n  @ApiProperty()\n  photo?: ShortPhoto;\n}\n\nexport class BlogPayload {\n  @ApiProperty()\n  header: string;\n  @ApiProperty()\n  message: string;\n  @ApiProperty()\n  photo?: BlogPhoto;\n\n  link?: Link[];\n}\n\nexport class QuotePayload {\n  source: any; //contain content._id\n  message?: string;\n  photo?: ShortPhoto;\n}\n\nexport class RecastPayload {\n  source: any; //contain content._id\n  photo?: ShortPhoto;\n}\n\nclass Feature {\n  @ApiProperty()\n  slug: 'feed';\n  @ApiProperty()\n  name: 'Feed';\n  @ApiProperty()\n  key: 'feature.feed';\n}\n\nclass Participant {\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  name: string;\n}\n\nclass Like {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  liked: boolean; // viewer like it or not\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Comment {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  commented: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Recast {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  recasted: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nexport class Author {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  castcleId: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  avatar: string | null;\n  @ApiProperty()\n  verified: boolean;\n  @ApiProperty()\n  followed: boolean;\n}\n\nexport class ContentPayloadDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  type:\n    | ContentType.Short\n    | ContentType.Blog\n    | ContentType.Image\n    | ContentType.Quote\n    | ContentType.Recast;\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | QuotePayload | RecastPayload;\n\n  @ApiProperty()\n  feature: Feature;\n\n  @ApiProperty()\n  liked: Like;\n\n  @ApiProperty()\n  commented: Comment;\n\n  @ApiProperty()\n  recasted?: Recast;\n\n  @ApiProperty()\n  quoteCast?: ContentPayloadDto;\n\n  @ApiProperty()\n  author: Author;\n\n  @ApiProperty()\n  created: string;\n  @ApiProperty()\n  updated: string;\n}\n\nclass AuthorDto {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n}\n\nexport class SaveContentDto {\n  @ApiProperty()\n  type: 'short' | 'blog' | 'image';\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | ImagePayload;\n\n  @ApiProperty()\n  author?: AuthorDto;\n}\n\nexport enum ContentType {\n  Short = 'short',\n  Blog = 'blog',\n  Image = 'image',\n  Recast = 'recast',\n  Quote = 'quote'\n}\n\nexport class CastcleContentQueryOptions extends CastcleQueryOptions {\n  type?: ContentType;\n}\n\nexport const DEFAULT_CONTENT_QUERY_OPTIONS = {\n  sortBy: {\n    field: 'updatedAt',\n    type: 'desc'\n  },\n  type: ContentType.Short,\n  page: 1,\n  limit: 25\n} as CastcleContentQueryOptions;\n\nexport class ContentResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto;\n}\n\nexport class ContentsResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Like.html":{"url":"classes/Like.html","title":"class - Like","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Like\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/content.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                count\n                            \n                            \n                                liked\n                            \n                            \n                                participants\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:109\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        liked\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        participants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Participant[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:113\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Pagination } from './common.dto';\nimport { CastcleQueryOptions } from './common.dto';\n\nclass Url {\n  @ApiProperty()\n  url: string;\n}\n\nclass Link {\n  @ApiProperty()\n  type: string;\n\n  @ApiProperty()\n  url: string;\n}\n\nclass BlogPhoto {\n  @ApiProperty()\n  cover: Url;\n\n  @ApiProperty()\n  contents: Url[];\n}\n\nclass ShortPhoto {\n  @ApiProperty()\n  contents: Url[];\n}\n\nexport class ShortPayload {\n  @ApiProperty()\n  message?: string;\n  @ApiProperty()\n  photo?: ShortPhoto;\n  @ApiProperty()\n  link?: Link[];\n}\n\nexport class ImagePayload {\n  @ApiProperty()\n  photo?: ShortPhoto;\n}\n\nexport class BlogPayload {\n  @ApiProperty()\n  header: string;\n  @ApiProperty()\n  message: string;\n  @ApiProperty()\n  photo?: BlogPhoto;\n\n  link?: Link[];\n}\n\nexport class QuotePayload {\n  source: any; //contain content._id\n  message?: string;\n  photo?: ShortPhoto;\n}\n\nexport class RecastPayload {\n  source: any; //contain content._id\n  photo?: ShortPhoto;\n}\n\nclass Feature {\n  @ApiProperty()\n  slug: 'feed';\n  @ApiProperty()\n  name: 'Feed';\n  @ApiProperty()\n  key: 'feature.feed';\n}\n\nclass Participant {\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  name: string;\n}\n\nclass Like {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  liked: boolean; // viewer like it or not\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Comment {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  commented: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Recast {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  recasted: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nexport class Author {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  castcleId: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  avatar: string | null;\n  @ApiProperty()\n  verified: boolean;\n  @ApiProperty()\n  followed: boolean;\n}\n\nexport class ContentPayloadDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  type:\n    | ContentType.Short\n    | ContentType.Blog\n    | ContentType.Image\n    | ContentType.Quote\n    | ContentType.Recast;\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | QuotePayload | RecastPayload;\n\n  @ApiProperty()\n  feature: Feature;\n\n  @ApiProperty()\n  liked: Like;\n\n  @ApiProperty()\n  commented: Comment;\n\n  @ApiProperty()\n  recasted?: Recast;\n\n  @ApiProperty()\n  quoteCast?: ContentPayloadDto;\n\n  @ApiProperty()\n  author: Author;\n\n  @ApiProperty()\n  created: string;\n  @ApiProperty()\n  updated: string;\n}\n\nclass AuthorDto {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n}\n\nexport class SaveContentDto {\n  @ApiProperty()\n  type: 'short' | 'blog' | 'image';\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | ImagePayload;\n\n  @ApiProperty()\n  author?: AuthorDto;\n}\n\nexport enum ContentType {\n  Short = 'short',\n  Blog = 'blog',\n  Image = 'image',\n  Recast = 'recast',\n  Quote = 'quote'\n}\n\nexport class CastcleContentQueryOptions extends CastcleQueryOptions {\n  type?: ContentType;\n}\n\nexport const DEFAULT_CONTENT_QUERY_OPTIONS = {\n  sortBy: {\n    field: 'updatedAt',\n    type: 'desc'\n  },\n  type: ContentType.Short,\n  page: 1,\n  limit: 25\n} as CastcleContentQueryOptions;\n\nexport class ContentResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto;\n}\n\nexport class ContentsResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LimitPipe.html":{"url":"injectables/LimitPipe.html","title":"injectable - LimitPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LimitPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/utils/pipes/src/lib/query/query.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                LimitPipe will transform query params to number default would be 25\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(limitQuery?: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/utils/pipes/src/lib/query/query.pipe.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limitQuery\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ArgumentMetadata, Injectable, PipeTransform } from '@nestjs/common';\nimport {\n  DEFAULT_CONTENT_QUERY_OPTIONS,\n  DEFAULT_QUERY_OPTIONS\n} from '@castcle-api/database/dtos';\nimport { ContentType } from '@castcle-api/database/dtos';\n\n//TODO !!! need to move this to somewhere else\nexport const LIMIT_MAX = 1000;\n\nexport enum SortByEnum {\n  Desc = 'desc',\n  Asc = 'asc'\n}\n\n/**\n * SortByPipe will transform query params to {field:`sortField`, type:`desc|asc`}\n */\n@Injectable()\nexport class SortByPipe implements PipeTransform {\n  /**\n   *\n   * @param {string} sortByQuery\n   * @returns {field:string, type:string}\n   */\n  transform(sortByQuery?: string): { field: string; type: string } {\n    if (sortByQuery && sortByQuery.match(/(desc|asc)\\((\\w+)\\)/)) {\n      const sortByResult = sortByQuery.match(/(desc|asc)\\((\\w+)\\)/);\n      return {\n        type:\n          sortByResult[1] === SortByEnum.Desc\n            ? SortByEnum.Desc\n            : SortByEnum.Asc,\n        field: sortByResult[2]\n      };\n    } else {\n      return DEFAULT_QUERY_OPTIONS.sortBy;\n    }\n  }\n}\n/**\n * PagePipe will transform query params to number default would be 0\n */\n@Injectable()\nexport class PagePipe implements PipeTransform {\n  /**\n   *\n   * @param {string} pageQuery\n   * @returns {number}\n   */\n  transform(pageQuery?: string): number {\n    if (pageQuery && !isNaN(Number(pageQuery))) return Number(pageQuery);\n    return DEFAULT_QUERY_OPTIONS.page;\n  }\n}\n\n/**\n * LimitPipe will transform query params to number default would be 25\n */\n@Injectable()\nexport class LimitPipe implements PipeTransform {\n  /**\n   *\n   * @param {string} limitQuery\n   * @returns {number}\n   */\n  transform(limitQuery?: string): number {\n    if (limitQuery && !isNaN(Number(limitQuery)))\n      return Number(limitQuery) \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Link.html":{"url":"classes/Link.html","title":"class - Link","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Link\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/content.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                type\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Pagination } from './common.dto';\nimport { CastcleQueryOptions } from './common.dto';\n\nclass Url {\n  @ApiProperty()\n  url: string;\n}\n\nclass Link {\n  @ApiProperty()\n  type: string;\n\n  @ApiProperty()\n  url: string;\n}\n\nclass BlogPhoto {\n  @ApiProperty()\n  cover: Url;\n\n  @ApiProperty()\n  contents: Url[];\n}\n\nclass ShortPhoto {\n  @ApiProperty()\n  contents: Url[];\n}\n\nexport class ShortPayload {\n  @ApiProperty()\n  message?: string;\n  @ApiProperty()\n  photo?: ShortPhoto;\n  @ApiProperty()\n  link?: Link[];\n}\n\nexport class ImagePayload {\n  @ApiProperty()\n  photo?: ShortPhoto;\n}\n\nexport class BlogPayload {\n  @ApiProperty()\n  header: string;\n  @ApiProperty()\n  message: string;\n  @ApiProperty()\n  photo?: BlogPhoto;\n\n  link?: Link[];\n}\n\nexport class QuotePayload {\n  source: any; //contain content._id\n  message?: string;\n  photo?: ShortPhoto;\n}\n\nexport class RecastPayload {\n  source: any; //contain content._id\n  photo?: ShortPhoto;\n}\n\nclass Feature {\n  @ApiProperty()\n  slug: 'feed';\n  @ApiProperty()\n  name: 'Feed';\n  @ApiProperty()\n  key: 'feature.feed';\n}\n\nclass Participant {\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  name: string;\n}\n\nclass Like {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  liked: boolean; // viewer like it or not\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Comment {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  commented: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Recast {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  recasted: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nexport class Author {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  castcleId: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  avatar: string | null;\n  @ApiProperty()\n  verified: boolean;\n  @ApiProperty()\n  followed: boolean;\n}\n\nexport class ContentPayloadDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  type:\n    | ContentType.Short\n    | ContentType.Blog\n    | ContentType.Image\n    | ContentType.Quote\n    | ContentType.Recast;\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | QuotePayload | RecastPayload;\n\n  @ApiProperty()\n  feature: Feature;\n\n  @ApiProperty()\n  liked: Like;\n\n  @ApiProperty()\n  commented: Comment;\n\n  @ApiProperty()\n  recasted?: Recast;\n\n  @ApiProperty()\n  quoteCast?: ContentPayloadDto;\n\n  @ApiProperty()\n  author: Author;\n\n  @ApiProperty()\n  created: string;\n  @ApiProperty()\n  updated: string;\n}\n\nclass AuthorDto {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n}\n\nexport class SaveContentDto {\n  @ApiProperty()\n  type: 'short' | 'blog' | 'image';\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | ImagePayload;\n\n  @ApiProperty()\n  author?: AuthorDto;\n}\n\nexport enum ContentType {\n  Short = 'short',\n  Blog = 'blog',\n  Image = 'image',\n  Recast = 'recast',\n  Quote = 'quote'\n}\n\nexport class CastcleContentQueryOptions extends CastcleQueryOptions {\n  type?: ContentType;\n}\n\nexport const DEFAULT_CONTENT_QUERY_OPTIONS = {\n  sortBy: {\n    field: 'updatedAt',\n    type: 'desc'\n  },\n  type: ContentType.Short,\n  page: 1,\n  limit: 25\n} as CastcleContentQueryOptions;\n\nexport class ContentResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto;\n}\n\nexport class ContentsResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Link-1.html":{"url":"classes/Link-1.html","title":"class - Link-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Link\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                facebook\n                            \n                            \n                                    Optional\n                                medium\n                            \n                            \n                                    Optional\n                                twitter\n                            \n                            \n                                    Optional\n                                website\n                            \n                            \n                                    Optional\n                                youtube\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        facebook\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        medium\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        twitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        website\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        youtube\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Pagination } from './common.dto';\n\nclass UserImage {\n  @ApiProperty()\n  avatar: string;\n  @ApiProperty()\n  cover: string;\n}\n\nclass Link {\n  @ApiProperty()\n  facebook?: string;\n\n  @ApiProperty()\n  twitter?: string;\n\n  @ApiProperty()\n  youtube?: string;\n\n  @ApiProperty()\n  medium?: string;\n\n  @ApiProperty()\n  website?: string | null;\n}\n\nclass Counter {\n  @ApiProperty()\n  count: number;\n}\n\nexport class UserResponseDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  castcleId: string;\n\n  @ApiProperty()\n  email?: string;\n\n  @ApiProperty()\n  overview: string | null;\n\n  @ApiProperty()\n  dob: string | null;\n\n  @ApiProperty()\n  images: UserImage;\n\n  @ApiProperty()\n  links: Link;\n\n  @ApiProperty()\n  following: Counter;\n\n  @ApiProperty()\n  followers: Counter;\n\n  @ApiProperty()\n  verified: boolean;\n\n  @ApiProperty()\n  followed: boolean;\n}\n\nexport class UpdateUserDto {\n  @ApiProperty()\n  overview?: string;\n\n  @ApiProperty()\n  dob?: string;\n\n  @ApiProperty()\n  images?: UserImage;\n\n  @ApiProperty()\n  links?: Link;\n}\n\nexport class PageDto {\n  @ApiProperty()\n  castcleId: string;\n\n  @ApiProperty()\n  displayName: string;\n\n  @ApiProperty()\n  avatar: string;\n\n  @ApiProperty()\n  cover: string;\n}\n\nexport class PageResponseDto {\n  @ApiProperty()\n  castcleId: string;\n\n  @ApiProperty()\n  displayName: string;\n\n  @ApiProperty()\n  avatar: string;\n\n  @ApiProperty()\n  cover: string;\n\n  @ApiProperty()\n  updated: string;\n\n  @ApiProperty()\n  created: string;\n}\n\nexport class UpdatePageDto {\n  @ApiProperty()\n  displayName?: string;\n\n  @ApiProperty()\n  avatar?: string;\n\n  @ApiProperty()\n  cover?: string;\n}\n\nexport class PagesResponse {\n  @ApiProperty()\n  payload: PageResponseDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\nexport class PageResponse {\n  @ApiProperty()\n  payload: PageResponseDto;\n}\n\nexport class FollowResponse {\n  @ApiProperty()\n  payload: UserResponseDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/authentications/src/app/dtos/dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/authentications/src/app/dtos/dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/authentications/src/app/dtos/dto.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nexport class GuestLoginDto {\n  @ApiProperty()\n  deviceUUID: string;\n}\n\nexport class CheckEmailExistDto {\n  @ApiProperty()\n  email: string;\n}\n\nexport class LoginDto {\n  @ApiProperty()\n  username: string;\n  @ApiProperty()\n  password: string;\n}\n\nclass RegisterPayload {\n  @ApiProperty()\n  email: string;\n  @ApiProperty()\n  password: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  castcleId: string;\n}\n\nexport class RegisterByEmailDto {\n  @ApiProperty()\n  channel: 'email';\n  @ApiProperty()\n  payload: RegisterPayload;\n}\n\nexport class CheckIdExistDto {\n  @ApiProperty()\n  castcleId: string;\n}\n\nexport class TokenResponse {\n  @ApiProperty()\n  accessToken: string;\n\n  @ApiProperty()\n  refreshToken: string;\n}\n\nexport class CheckingResponse {\n  @ApiProperty()\n  message: string;\n\n  @ApiProperty()\n  payload: {\n    exist: boolean;\n  };\n}\n\nexport class RefreshTokenResponse {\n  @ApiProperty()\n  accessToken: string;\n}\n\nclass suggestCastcleIdPayload {\n  @ApiProperty()\n  suggestCastcleId: string;\n}\n\nexport class SuggestCastcleIdReponse {\n  @ApiProperty()\n  payload: suggestCastcleIdPayload;\n}\n\nexport class ChangePasswordBody {\n  @ApiProperty()\n  refCode: string;\n  @ApiProperty()\n  newPassword: string;\n}\n\nexport class VerificationPasswordBody {\n  @ApiProperty()\n  password: string;\n}\n\nexport class VerificationPasswordResponse {\n  @ApiProperty()\n  refCode: string;\n  @ApiProperty()\n  expiresTime: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MemberAccessTokenPayload.html":{"url":"interfaces/MemberAccessTokenPayload.html","title":"interface - MemberAccessTokenPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MemberAccessTokenPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/token.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AccessTokenPayload\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            castcleId\n                                        \n                                \n                                \n                                        \n                                            displayName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        castcleId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        castcleId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AccessTokenPayload {\n  id: string;\n  preferredLanguage: string[];\n  role: 'member' | 'guest'; // member or guest\n  accessTokenExpiresTime?: string; // 30 นาทีจาก create\n}\n\nexport interface MemberAccessTokenPayload extends AccessTokenPayload {\n  role: 'member';\n  castcleId: string;\n  displayName: string;\n  email?: string;\n  avatar?: string;\n}\n\nexport interface RefreshTokenPayload {\n  id: string;\n  role: 'member' | 'guest';\n  refreshTokenExpiresTime?: string;\n}\n\nexport interface EmailVerifyToken {\n  id: string;\n  verifyTokenExpiresTime?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Otp.html":{"url":"classes/Otp.html","title":"class - Otp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Otp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/schemas/otp.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CastcleBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                action\n                            \n                            \n                                expireDate\n                            \n                            \n                                refCode\n                            \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                visibility\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Account\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined, ref: 'Account'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/otp.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/otp.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expireDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/otp.schema.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/otp.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        visibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityVisibility\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:37\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { env } from '../environment';\nimport { Document, Model } from 'mongoose';\nimport { CastcleBase } from './base.schema';\nimport { Account } from './account.schema';\nimport { Password } from '@castcle-api/utils';\n\nexport enum OtpObjective {\n  ChangePassword = 'changepassword'\n}\n\nexport type OtpDocument = Otp & IOtp;\n\n@Schema({ timestamps: true })\nexport class Otp extends CastcleBase {\n  @Prop({\n    required: true,\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Account'\n  })\n  account: Account;\n\n  @Prop({ required: true })\n  action: string;\n\n  @Prop({ required: true })\n  refCode: string;\n\n  @Prop({ required: true })\n  expireDate: Date;\n}\n\nexport const OtpSchema = SchemaFactory.createForClass(Otp);\n\ninterface IOtp extends Document {\n  isValid(): boolean;\n}\n\nexport interface OtpModel extends Model {\n  /**\n   *  generate random refCode, check if it exist keep generating until found not exist one\n   * @param {mongoose.Schema.Types.ObjectId} accountId\n   * @param {OtpObjective} objective\n   * @returns {Promise}\n   */\n  generate(accountId: any, objective: OtpObjective): Promise;\n}\n\nOtpSchema.statics.generate = async function (\n  accountId: any,\n  objective: OtpObjective\n) {\n  let newRefCode: string;\n  let otpFindingResult;\n  do {\n    newRefCode = Password.generateRandomDigits(env.otp_digits);\n    otpFindingResult = await this.findOne({\n      account: accountId,\n      action: objective,\n      refCode: newRefCode\n    }).exec();\n  } while (otpFindingResult);\n  const now = new Date();\n  const otp = new this({\n    account: accountId,\n    action: objective,\n    refCode: newRefCode,\n    expireDate: new Date(now.getTime() + env.otp_expires_in * 1000)\n  });\n  return otp.save();\n};\n\nOtpSchema.methods.isValid = function () {\n  const now = new Date().getTime();\n  const expireDate = (this as OtpDocument).expireDate.getTime();\n  return expireDate - now >= 0;\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OtpModel.html":{"url":"interfaces/OtpModel.html","title":"interface - OtpModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OtpModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/schemas/otp.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        generate\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generate\n                        \n                    \n                \n            \n            \n                \ngenerate(accountId: any, objective: OtpObjective)\n                \n            \n\n\n            \n                \n                    Defined in libs/database/src/lib/schemas/otp.schema.ts:70\n                \n            \n\n\n            \n                \n                     generate random refCode, check if it exist keep generating until found not exist one\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accountId\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    objective\n                                    \n                                                OtpObjective\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { env } from '../environment';\nimport { Document, Model } from 'mongoose';\nimport { CastcleBase } from './base.schema';\nimport { Account } from './account.schema';\nimport { Password } from '@castcle-api/utils';\n\nexport enum OtpObjective {\n  ChangePassword = 'changepassword'\n}\n\nexport type OtpDocument = Otp & IOtp;\n\n@Schema({ timestamps: true })\nexport class Otp extends CastcleBase {\n  @Prop({\n    required: true,\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Account'\n  })\n  account: Account;\n\n  @Prop({ required: true })\n  action: string;\n\n  @Prop({ required: true })\n  refCode: string;\n\n  @Prop({ required: true })\n  expireDate: Date;\n}\n\nexport const OtpSchema = SchemaFactory.createForClass(Otp);\n\ninterface IOtp extends Document {\n  isValid(): boolean;\n}\n\nexport interface OtpModel extends Model {\n  /**\n   *  generate random refCode, check if it exist keep generating until found not exist one\n   * @param {mongoose.Schema.Types.ObjectId} accountId\n   * @param {OtpObjective} objective\n   * @returns {Promise}\n   */\n  generate(accountId: any, objective: OtpObjective): Promise;\n}\n\nOtpSchema.statics.generate = async function (\n  accountId: any,\n  objective: OtpObjective\n) {\n  let newRefCode: string;\n  let otpFindingResult;\n  do {\n    newRefCode = Password.generateRandomDigits(env.otp_digits);\n    otpFindingResult = await this.findOne({\n      account: accountId,\n      action: objective,\n      refCode: newRefCode\n    }).exec();\n  } while (otpFindingResult);\n  const now = new Date();\n  const otp = new this({\n    account: accountId,\n    action: objective,\n    refCode: newRefCode,\n    expireDate: new Date(now.getTime() + env.otp_expires_in * 1000)\n  });\n  return otp.save();\n};\n\nOtpSchema.methods.isValid = function () {\n  const now = new Date().getTime();\n  const expireDate = (this as OtpDocument).expireDate.getTime();\n  return expireDate - now >= 0;\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PageController.html":{"url":"controllers/PageController.html","title":"controller - PageController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PageController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/bases/src/app/controllers/pages/pages.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createPage\n                            \n                            \n                                    Async\n                                deletePage\n                            \n                            \n                                    Async\n                                getAllPages\n                            \n                            \n                                    Async\n                                getPageContents\n                            \n                            \n                                    Async\n                                getPageFromId\n                            \n                            \n                                    Async\n                                updatePage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createPage\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPage(req: CredentialRequest, body: PageDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiBody({type: PageResponse})@ApiResponse({status: 201, type: PageDto})@UseInterceptors(CredentialInterceptor)@Post('pages')\n                \n            \n\n            \n                \n                    Defined in apps/bases/src/app/controllers/pages/pages.controller.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                PageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deletePage\n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePage(req: CredentialRequest, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiResponse({status: 204})@HttpCode(204)@Delete('pages/:id')\n                \n            \n\n            \n                \n                    Defined in apps/bases/src/app/controllers/pages/pages.controller.ts:256\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllPages\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllPages(sortByOption: literal type, pageOption: number, limitOption: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiOkResponse({type: PagesResponse})@UseInterceptors(PageInterceptor)@Get('pages')\n                \n            \n\n            \n                \n                    Defined in apps/bases/src/app/controllers/pages/pages.controller.ts:228\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    sortByOption\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.sortBy\n                                    \n\n                                \n                                \n                                    pageOption\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.page\n                                    \n\n                                \n                                \n                                    limitOption\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.limit\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPageContents\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPageContents(id: string, req: CredentialRequest, sortByOption: literal type, pageOption: number, limitOption: number, contentTypeOption: ContentType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiOkResponse({type: ContentResponse})@UseInterceptors(ContentsInterceptor)@ApiQuery({name: 'sortBy', enum: SortByEnum, required: false})@ApiQuery({name: 'page', type: Number, required: false})@ApiQuery({name: 'limit', type: Number, required: false})@ApiQuery({name: 'type', enum: ContentType, required: false})@Get('pages/:id/contents')\n                \n            \n\n            \n                \n                    Defined in apps/bases/src/app/controllers/pages/pages.controller.ts:300\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                    \n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        that contain current user credential\n\n                                    \n                                \n                                \n                                    sortByOption\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.sortBy\n                                    \n\n                                    \n                                    \n                                \n                                \n                                    pageOption\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.page\n                                    \n\n                                    \n                                    \n                                \n                                \n                                    limitOption\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.limit\n                                    \n\n                                    \n                                    \n                                \n                                \n                                    contentTypeOption\n                                    \n                                                ContentType\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.type\n                                    \n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        all contents that has been map with contentService.getContentsFromUser()\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPageFromId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPageFromId(req: CredentialRequest, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiOkResponse({type: PageResponseDto})@UseInterceptors(PageInterceptor)@Get('pages/:id')\n                \n            \n\n            \n                \n                    Defined in apps/bases/src/app/controllers/pages/pages.controller.ts:213\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePage\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePage(req: CredentialRequest, id: string, body: UpdatePageDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiBody({type: UpdatePageDto})@ApiResponse({status: 201, type: PageDto})@HttpCode(201)@UseInterceptors(PageInterceptor)@Put('pages/:id')\n                \n            \n\n            \n                \n                    Defined in apps/bases/src/app/controllers/pages/pages.controller.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                UpdatePageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright (c) 2021, Castcle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 3 only, as\n * published by the Free Software Foundation.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n * version 3 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 3 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Castcle, 22 Phet Kasem 47/2 Alley, Bang Khae, Bangkok,\n * Thailand 10160, or visit www.castcle.com if you need additional information\n * or have any questions.\n */\n\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  Param,\n  Post,\n  Put,\n  Req,\n  UseInterceptors\n} from '@nestjs/common';\nimport { AppService } from '../../app.service';\nimport {\n  AuthenticationService,\n  UserService,\n  ContentService\n} from '@castcle-api/database';\nimport { CastLogger, CastLoggerOptions } from '@castcle-api/logger';\nimport {\n  ContentResponse,\n  ContentsResponse,\n  ContentType,\n  DEFAULT_CONTENT_QUERY_OPTIONS,\n  PageDto,\n  PagesResponse,\n  UpdatePageDto,\n  PageResponse,\n  PageResponseDto\n} from '@castcle-api/database/dtos';\nimport {\n  CredentialInterceptor,\n  CredentialRequest,\n  ContentsInterceptor\n} from '@castcle-api/utils/interceptors';\nimport {\n  SortByPipe,\n  PagePipe,\n  LimitPipe,\n  SortByEnum,\n  ContentTypePipe\n} from '@castcle-api/utils/pipes';\nimport { CastcleException, CastcleStatus } from '@castcle-api/utils/exception';\nimport { Image, UploadOptions } from '@castcle-api/utils/aws';\nimport {\n  ApiBearerAuth,\n  ApiBody,\n  ApiHeader,\n  ApiOkResponse,\n  ApiQuery,\n  ApiResponse\n} from '@nestjs/swagger';\nimport { UserDocument, UserType } from '@castcle-api/database/schemas';\nimport { PageInterceptor } from '../../interceptors/page.interceptor';\nimport { Query } from '@nestjs/common';\nimport { Configs } from '@castcle-api/environments';\n\n@ApiHeader({\n  name: Configs.RequiredHeaders.AcceptLanguague.name,\n  description: Configs.RequiredHeaders.AcceptLanguague.description,\n  example: Configs.RequiredHeaders.AcceptLanguague.example,\n  required: true\n})\n@ApiHeader({\n  name: Configs.RequiredHeaders.AcceptVersion.name,\n  description: Configs.RequiredHeaders.AcceptVersion.description,\n  example: Configs.RequiredHeaders.AcceptVersion.example,\n  required: true\n})\n@Controller({\n  version: '1.0'\n})\n@Controller()\nexport class PageController {\n  constructor(\n    private readonly appService: AppService,\n    private authService: AuthenticationService,\n    private userService: UserService,\n    private contentService: ContentService\n  ) {}\n  private readonly logger = new CastLogger(\n    PageController.name,\n    CastLoggerOptions\n  );\n\n  _uploadImage = (base64: string, options?: UploadOptions) =>\n    Image.upload(base64, options);\n\n  /**\n   *\n   * @param {string} idOrCastCleId\n   * @param {CredentialRequest} req\n   * @returns {UserDocument} User schema that got from userService.getUserFromId() or authService.getUserFromCastcleId()\n   */\n  _getPageByIdOrCastcleId = async (\n    idOrCastCleId: string,\n    req: CredentialRequest\n  ) => {\n    const idResult = await this.userService.getUserFromId(idOrCastCleId);\n    if (idResult && idResult.type === UserType.Page) return idResult;\n    const castcleIdResult = await this.authService.getUserFromCastcleId(\n      idOrCastCleId\n    );\n    if (castcleIdResult && castcleIdResult.type === UserType.Page)\n      return castcleIdResult;\n    else\n      throw new CastcleException(\n        CastcleStatus.REQUEST_URL_NOT_FOUND,\n        req.$language\n      );\n  };\n\n  @ApiBearerAuth()\n  @ApiBody({\n    type: PageResponse\n  })\n  @ApiResponse({\n    status: 201,\n    type: PageDto\n  })\n  @UseInterceptors(CredentialInterceptor)\n  @Post('pages')\n  async createPage(@Req() req: CredentialRequest, @Body() body: PageDto) {\n    //check if page name exist\n    const namingResult = await this.authService.getUserFromCastcleId(\n      body.castcleId\n    );\n    if (namingResult)\n      throw new CastcleException(CastcleStatus.PAGE_IS_EXIST, req.$language);\n    //TODO !!! performance issue\n    body.avatar = (\n      await this._uploadImage(body.avatar, {\n        filename: `page-avatar-${body.castcleId}`\n      })\n    ).uri;\n    body.cover = (\n      await this._uploadImage(body.cover, {\n        filename: `page-cover-${body.castcleId}`\n      })\n    ).uri;\n    const page = await this.userService.createPageFromCredential(\n      req.$credential,\n      body\n    );\n    return page.toPageResponse();\n  }\n\n  @ApiBearerAuth()\n  @ApiBody({\n    type: UpdatePageDto\n  })\n  @ApiResponse({\n    status: 201,\n    type: PageDto\n  })\n  @HttpCode(201)\n  @UseInterceptors(PageInterceptor)\n  @Put('pages/:id')\n  async updatePage(\n    @Req() req: CredentialRequest,\n    @Param('id') id: string,\n    @Body() body: UpdatePageDto\n  ) {\n    //check if page name exist\n    const page = await this._getPageByIdOrCastcleId(id, req);\n    //TODO !!! performance issue\n    if (body.avatar)\n      page.profile.images.avatar = (\n        await this._uploadImage(body.avatar, {\n          filename: `page-avatar-${id}`\n        })\n      ).uri;\n    if (body.cover)\n      page.profile.images.cover = (\n        await this._uploadImage(body.cover, {\n          filename: `page-cover-${id}`\n        })\n      ).uri;\n    if (body.displayName) page.displayName = body.displayName;\n    const afterPage = await page.save();\n    return afterPage.toPageResponse();\n  }\n\n  @ApiBearerAuth()\n  @ApiOkResponse({\n    type: PageResponseDto\n  })\n  @UseInterceptors(PageInterceptor)\n  @Get('pages/:id')\n  async getPageFromId(\n    @Req() req: CredentialRequest,\n    @Param('id') id: string\n  ): Promise {\n    //check if page name exist\n    const page = await this._getPageByIdOrCastcleId(id, req);\n    return page.toPageResponse();\n  }\n\n  @ApiBearerAuth()\n  @ApiOkResponse({\n    type: PagesResponse\n  })\n  @UseInterceptors(PageInterceptor)\n  @Get('pages')\n  async getAllPages(\n    @Query('sortBy', SortByPipe)\n    sortByOption: {\n      field: string;\n      type: 'desc' | 'asc';\n    } = DEFAULT_CONTENT_QUERY_OPTIONS.sortBy,\n    @Query('page', PagePipe)\n    pageOption: number = DEFAULT_CONTENT_QUERY_OPTIONS.page,\n    @Query('limit', LimitPipe)\n    limitOption: number = DEFAULT_CONTENT_QUERY_OPTIONS.limit\n  ): Promise {\n    const pages = await this.userService.getAllPages({\n      page: pageOption,\n      sortBy: sortByOption,\n      limit: limitOption\n    });\n    return {\n      payload: pages.items.map((p) => p.toPageResponse()),\n      pagination: pages.pagination\n    };\n  }\n\n  @ApiBearerAuth()\n  @ApiResponse({\n    status: 204\n  })\n  @HttpCode(204)\n  @Delete('pages/:id')\n  async deletePage(@Req() req: CredentialRequest, @Param('id') id: string) {\n    const page = await this._getPageByIdOrCastcleId(id, req);\n    if (String(page.ownerAccount) === String(req.$credential.account._id)) {\n      await page.delete();\n      return '';\n    } else\n      throw new CastcleException(\n        CastcleStatus.INVALID_ACCESS_TOKEN,\n        req.$language\n      );\n  }\n\n  /**\n   *\n   * @param {string} idOrCastcleId of page\n   * @param {CredentialRequest} req that contain current user credential\n   * @returns {Promise} all contents that has been map with contentService.getContentsFromUser()\n   */\n  @ApiBearerAuth()\n  @ApiOkResponse({\n    type: ContentResponse\n  })\n  @UseInterceptors(ContentsInterceptor)\n  @ApiQuery({\n    name: 'sortBy',\n    enum: SortByEnum,\n    required: false\n  })\n  @ApiQuery({\n    name: 'page',\n    type: Number,\n    required: false\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: Number,\n    required: false\n  })\n  @ApiQuery({\n    name: 'type',\n    enum: ContentType,\n    required: false\n  })\n  @Get('pages/:id/contents')\n  async getPageContents(\n    @Param('id') id: string,\n    @Req() req: CredentialRequest,\n    @Query('sortBy', SortByPipe)\n    sortByOption: {\n      field: string;\n      type: 'desc' | 'asc';\n    } = DEFAULT_CONTENT_QUERY_OPTIONS.sortBy,\n    @Query('page', PagePipe)\n    pageOption: number = DEFAULT_CONTENT_QUERY_OPTIONS.page,\n    @Query('limit', LimitPipe)\n    limitOption: number = DEFAULT_CONTENT_QUERY_OPTIONS.limit,\n    @Query('type', ContentTypePipe)\n    contentTypeOption: ContentType = DEFAULT_CONTENT_QUERY_OPTIONS.type\n  ): Promise {\n    const page = await this._getPageByIdOrCastcleId(id, req);\n    const contents = await this.contentService.getContentsFromUser(page, {\n      sortBy: sortByOption,\n      limit: limitOption,\n      page: pageOption,\n      type: contentTypeOption\n    });\n    return {\n      payload: contents.items.map((c) => c.toContentPayload()),\n      pagination: contents.pagination\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PageController-1.html":{"url":"controllers/PageController-1.html","title":"controller - PageController-1","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PageController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/bases/src/app/controllers/pages/pages.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createPage\n                            \n                            \n                                    Async\n                                deletePage\n                            \n                            \n                                    Async\n                                getAllPages\n                            \n                            \n                                    Async\n                                getPageContents\n                            \n                            \n                                    Async\n                                getPageFromId\n                            \n                            \n                                    Async\n                                updatePage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createPage\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPage(req: CredentialRequest, body: PageDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiBody({type: PageResponse})@ApiResponse({status: 201, type: PageDto})@UseInterceptors(CredentialInterceptor)@Post('pages')\n                \n            \n\n            \n                \n                    Defined in apps/bases/src/app/controllers/pages/pages.controller.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                PageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deletePage\n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePage(req: CredentialRequest, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiResponse({status: 204})@HttpCode(204)@Delete('pages/:id')\n                \n            \n\n            \n                \n                    Defined in apps/bases/src/app/controllers/pages/pages.controller.ts:256\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllPages\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllPages(sortByOption: literal type, pageOption: number, limitOption: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiOkResponse({type: PagesResponse})@UseInterceptors(PageInterceptor)@Get('pages')\n                \n            \n\n            \n                \n                    Defined in apps/bases/src/app/controllers/pages/pages.controller.ts:228\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    sortByOption\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.sortBy\n                                    \n\n                                \n                                \n                                    pageOption\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.page\n                                    \n\n                                \n                                \n                                    limitOption\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.limit\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPageContents\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPageContents(id: string, req: CredentialRequest, sortByOption: literal type, pageOption: number, limitOption: number, contentTypeOption: ContentType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiOkResponse({type: ContentResponse})@UseInterceptors(ContentsInterceptor)@ApiQuery({name: 'sortBy', enum: SortByEnum, required: false})@ApiQuery({name: 'page', type: Number, required: false})@ApiQuery({name: 'limit', type: Number, required: false})@ApiQuery({name: 'type', enum: ContentType, required: false})@Get('pages/:id/contents')\n                \n            \n\n            \n                \n                    Defined in apps/bases/src/app/controllers/pages/pages.controller.ts:300\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                    \n                                \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        that contain current user credential\n\n                                    \n                                \n                                \n                                    sortByOption\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.sortBy\n                                    \n\n                                    \n                                    \n                                \n                                \n                                    pageOption\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.page\n                                    \n\n                                    \n                                    \n                                \n                                \n                                    limitOption\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.limit\n                                    \n\n                                    \n                                    \n                                \n                                \n                                    contentTypeOption\n                                    \n                                                ContentType\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONTENT_QUERY_OPTIONS.type\n                                    \n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        all contents that has been map with contentService.getContentsFromUser()\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPageFromId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPageFromId(req: CredentialRequest, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiOkResponse({type: PageResponseDto})@UseInterceptors(PageInterceptor)@Get('pages/:id')\n                \n            \n\n            \n                \n                    Defined in apps/bases/src/app/controllers/pages/pages.controller.ts:213\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePage\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePage(req: CredentialRequest, id: string, body: UpdatePageDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiBody({type: UpdatePageDto})@ApiResponse({status: 201, type: PageDto})@HttpCode(201)@UseInterceptors(PageInterceptor)@Put('pages/:id')\n                \n            \n\n            \n                \n                    Defined in apps/bases/src/app/controllers/pages/pages.controller.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                CredentialRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                UpdatePageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright (c) 2021, Castcle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 3 only, as\n * published by the Free Software Foundation.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n * version 3 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 3 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Castcle, 22 Phet Kasem 47/2 Alley, Bang Khae, Bangkok,\n * Thailand 10160, or visit www.castcle.com if you need additional information\n * or have any questions.\n */\n\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  Param,\n  Post,\n  Put,\n  Req,\n  UseInterceptors\n} from '@nestjs/common';\nimport { AppService } from '../../app.service';\nimport {\n  AuthenticationService,\n  UserService,\n  ContentService\n} from '@castcle-api/database';\nimport { CastLogger, CastLoggerOptions } from '@castcle-api/logger';\nimport {\n  ContentResponse,\n  ContentsResponse,\n  ContentType,\n  DEFAULT_CONTENT_QUERY_OPTIONS,\n  PageDto,\n  PagesResponse,\n  UpdatePageDto,\n  PageResponse,\n  PageResponseDto\n} from '@castcle-api/database/dtos';\nimport {\n  CredentialInterceptor,\n  CredentialRequest,\n  ContentsInterceptor\n} from '@castcle-api/utils/interceptors';\nimport {\n  SortByPipe,\n  PagePipe,\n  LimitPipe,\n  SortByEnum,\n  ContentTypePipe\n} from '@castcle-api/utils/pipes';\nimport { CastcleException, CastcleStatus } from '@castcle-api/utils/exception';\nimport { Image, UploadOptions } from '@castcle-api/utils/aws';\nimport {\n  ApiBearerAuth,\n  ApiBody,\n  ApiHeader,\n  ApiOkResponse,\n  ApiQuery,\n  ApiResponse\n} from '@nestjs/swagger';\nimport { UserDocument, UserType } from '@castcle-api/database/schemas';\nimport { PageInterceptor } from '../../interceptors/page.interceptor';\nimport { Query } from '@nestjs/common';\nimport { Configs } from '@castcle-api/environments';\n\n@ApiHeader({\n  name: Configs.RequiredHeaders.AcceptLanguague.name,\n  description: Configs.RequiredHeaders.AcceptLanguague.description,\n  example: Configs.RequiredHeaders.AcceptLanguague.example,\n  required: true\n})\n@ApiHeader({\n  name: Configs.RequiredHeaders.AcceptVersion.name,\n  description: Configs.RequiredHeaders.AcceptVersion.description,\n  example: Configs.RequiredHeaders.AcceptVersion.example,\n  required: true\n})\n@Controller({\n  version: '1.0'\n})\n@Controller()\nexport class PageController {\n  constructor(\n    private readonly appService: AppService,\n    private authService: AuthenticationService,\n    private userService: UserService,\n    private contentService: ContentService\n  ) {}\n  private readonly logger = new CastLogger(\n    PageController.name,\n    CastLoggerOptions\n  );\n\n  _uploadImage = (base64: string, options?: UploadOptions) =>\n    Image.upload(base64, options);\n\n  /**\n   *\n   * @param {string} idOrCastCleId\n   * @param {CredentialRequest} req\n   * @returns {UserDocument} User schema that got from userService.getUserFromId() or authService.getUserFromCastcleId()\n   */\n  _getPageByIdOrCastcleId = async (\n    idOrCastCleId: string,\n    req: CredentialRequest\n  ) => {\n    const idResult = await this.userService.getUserFromId(idOrCastCleId);\n    if (idResult && idResult.type === UserType.Page) return idResult;\n    const castcleIdResult = await this.authService.getUserFromCastcleId(\n      idOrCastCleId\n    );\n    if (castcleIdResult && castcleIdResult.type === UserType.Page)\n      return castcleIdResult;\n    else\n      throw new CastcleException(\n        CastcleStatus.REQUEST_URL_NOT_FOUND,\n        req.$language\n      );\n  };\n\n  @ApiBearerAuth()\n  @ApiBody({\n    type: PageResponse\n  })\n  @ApiResponse({\n    status: 201,\n    type: PageDto\n  })\n  @UseInterceptors(CredentialInterceptor)\n  @Post('pages')\n  async createPage(@Req() req: CredentialRequest, @Body() body: PageDto) {\n    //check if page name exist\n    const namingResult = await this.authService.getUserFromCastcleId(\n      body.castcleId\n    );\n    if (namingResult)\n      throw new CastcleException(CastcleStatus.PAGE_IS_EXIST, req.$language);\n    //TODO !!! performance issue\n    body.avatar = (\n      await this._uploadImage(body.avatar, {\n        filename: `page-avatar-${body.castcleId}`\n      })\n    ).uri;\n    body.cover = (\n      await this._uploadImage(body.cover, {\n        filename: `page-cover-${body.castcleId}`\n      })\n    ).uri;\n    const page = await this.userService.createPageFromCredential(\n      req.$credential,\n      body\n    );\n    return page.toPageResponse();\n  }\n\n  @ApiBearerAuth()\n  @ApiBody({\n    type: UpdatePageDto\n  })\n  @ApiResponse({\n    status: 201,\n    type: PageDto\n  })\n  @HttpCode(201)\n  @UseInterceptors(PageInterceptor)\n  @Put('pages/:id')\n  async updatePage(\n    @Req() req: CredentialRequest,\n    @Param('id') id: string,\n    @Body() body: UpdatePageDto\n  ) {\n    //check if page name exist\n    const page = await this._getPageByIdOrCastcleId(id, req);\n    //TODO !!! performance issue\n    if (body.avatar)\n      page.profile.images.avatar = (\n        await this._uploadImage(body.avatar, {\n          filename: `page-avatar-${id}`\n        })\n      ).uri;\n    if (body.cover)\n      page.profile.images.cover = (\n        await this._uploadImage(body.cover, {\n          filename: `page-cover-${id}`\n        })\n      ).uri;\n    if (body.displayName) page.displayName = body.displayName;\n    const afterPage = await page.save();\n    return afterPage.toPageResponse();\n  }\n\n  @ApiBearerAuth()\n  @ApiOkResponse({\n    type: PageResponseDto\n  })\n  @UseInterceptors(PageInterceptor)\n  @Get('pages/:id')\n  async getPageFromId(\n    @Req() req: CredentialRequest,\n    @Param('id') id: string\n  ): Promise {\n    //check if page name exist\n    const page = await this._getPageByIdOrCastcleId(id, req);\n    return page.toPageResponse();\n  }\n\n  @ApiBearerAuth()\n  @ApiOkResponse({\n    type: PagesResponse\n  })\n  @UseInterceptors(PageInterceptor)\n  @Get('pages')\n  async getAllPages(\n    @Query('sortBy', SortByPipe)\n    sortByOption: {\n      field: string;\n      type: 'desc' | 'asc';\n    } = DEFAULT_CONTENT_QUERY_OPTIONS.sortBy,\n    @Query('page', PagePipe)\n    pageOption: number = DEFAULT_CONTENT_QUERY_OPTIONS.page,\n    @Query('limit', LimitPipe)\n    limitOption: number = DEFAULT_CONTENT_QUERY_OPTIONS.limit\n  ): Promise {\n    const pages = await this.userService.getAllPages({\n      page: pageOption,\n      sortBy: sortByOption,\n      limit: limitOption\n    });\n    return {\n      payload: pages.items.map((p) => p.toPageResponse()),\n      pagination: pages.pagination\n    };\n  }\n\n  @ApiBearerAuth()\n  @ApiResponse({\n    status: 204\n  })\n  @HttpCode(204)\n  @Delete('pages/:id')\n  async deletePage(@Req() req: CredentialRequest, @Param('id') id: string) {\n    const page = await this._getPageByIdOrCastcleId(id, req);\n    if (String(page.ownerAccount) === String(req.$credential.account._id)) {\n      await page.delete();\n      return '';\n    } else\n      throw new CastcleException(\n        CastcleStatus.INVALID_ACCESS_TOKEN,\n        req.$language\n      );\n  }\n\n  /**\n   *\n   * @param {string} idOrCastcleId of page\n   * @param {CredentialRequest} req that contain current user credential\n   * @returns {Promise} all contents that has been map with contentService.getContentsFromUser()\n   */\n  @ApiBearerAuth()\n  @ApiOkResponse({\n    type: ContentResponse\n  })\n  @UseInterceptors(ContentsInterceptor)\n  @ApiQuery({\n    name: 'sortBy',\n    enum: SortByEnum,\n    required: false\n  })\n  @ApiQuery({\n    name: 'page',\n    type: Number,\n    required: false\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: Number,\n    required: false\n  })\n  @ApiQuery({\n    name: 'type',\n    enum: ContentType,\n    required: false\n  })\n  @Get('pages/:id/contents')\n  async getPageContents(\n    @Param('id') id: string,\n    @Req() req: CredentialRequest,\n    @Query('sortBy', SortByPipe)\n    sortByOption: {\n      field: string;\n      type: 'desc' | 'asc';\n    } = DEFAULT_CONTENT_QUERY_OPTIONS.sortBy,\n    @Query('page', PagePipe)\n    pageOption: number = DEFAULT_CONTENT_QUERY_OPTIONS.page,\n    @Query('limit', LimitPipe)\n    limitOption: number = DEFAULT_CONTENT_QUERY_OPTIONS.limit,\n    @Query('type', ContentTypePipe)\n    contentTypeOption: ContentType = DEFAULT_CONTENT_QUERY_OPTIONS.type\n  ): Promise {\n    const page = await this._getPageByIdOrCastcleId(id, req);\n    const contents = await this.contentService.getContentsFromUser(page, {\n      sortBy: sortByOption,\n      limit: limitOption,\n      page: pageOption,\n      type: contentTypeOption\n    });\n    return {\n      payload: contents.items.map((c) => c.toContentPayload()),\n      pagination: contents.pagination\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageDto.html":{"url":"classes/PageDto.html","title":"class - PageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avatar\n                            \n                            \n                                castcleId\n                            \n                            \n                                cover\n                            \n                            \n                                displayName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        castcleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cover\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:109\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Pagination } from './common.dto';\n\nclass UserImage {\n  @ApiProperty()\n  avatar: string;\n  @ApiProperty()\n  cover: string;\n}\n\nclass Link {\n  @ApiProperty()\n  facebook?: string;\n\n  @ApiProperty()\n  twitter?: string;\n\n  @ApiProperty()\n  youtube?: string;\n\n  @ApiProperty()\n  medium?: string;\n\n  @ApiProperty()\n  website?: string | null;\n}\n\nclass Counter {\n  @ApiProperty()\n  count: number;\n}\n\nexport class UserResponseDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  castcleId: string;\n\n  @ApiProperty()\n  email?: string;\n\n  @ApiProperty()\n  overview: string | null;\n\n  @ApiProperty()\n  dob: string | null;\n\n  @ApiProperty()\n  images: UserImage;\n\n  @ApiProperty()\n  links: Link;\n\n  @ApiProperty()\n  following: Counter;\n\n  @ApiProperty()\n  followers: Counter;\n\n  @ApiProperty()\n  verified: boolean;\n\n  @ApiProperty()\n  followed: boolean;\n}\n\nexport class UpdateUserDto {\n  @ApiProperty()\n  overview?: string;\n\n  @ApiProperty()\n  dob?: string;\n\n  @ApiProperty()\n  images?: UserImage;\n\n  @ApiProperty()\n  links?: Link;\n}\n\nexport class PageDto {\n  @ApiProperty()\n  castcleId: string;\n\n  @ApiProperty()\n  displayName: string;\n\n  @ApiProperty()\n  avatar: string;\n\n  @ApiProperty()\n  cover: string;\n}\n\nexport class PageResponseDto {\n  @ApiProperty()\n  castcleId: string;\n\n  @ApiProperty()\n  displayName: string;\n\n  @ApiProperty()\n  avatar: string;\n\n  @ApiProperty()\n  cover: string;\n\n  @ApiProperty()\n  updated: string;\n\n  @ApiProperty()\n  created: string;\n}\n\nexport class UpdatePageDto {\n  @ApiProperty()\n  displayName?: string;\n\n  @ApiProperty()\n  avatar?: string;\n\n  @ApiProperty()\n  cover?: string;\n}\n\nexport class PagesResponse {\n  @ApiProperty()\n  payload: PageResponseDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\nexport class PageResponse {\n  @ApiProperty()\n  payload: PageResponseDto;\n}\n\nexport class FollowResponse {\n  @ApiProperty()\n  payload: UserResponseDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PageInterceptor.html":{"url":"injectables/PageInterceptor.html","title":"injectable - PageInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PageInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/bases/src/app/interceptors/page.interceptor.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CredentialInterceptor\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        intercept\n                        \n                    \n                \n            \n            \n                \n                    \n                    intercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Inherited from         CredentialInterceptor\n\n                \n            \n            \n                \n                        Defined in         CredentialInterceptor:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, Injectable } from '@nestjs/common';\nimport { PageDto } from '@castcle-api/database/dtos';\n\nimport { Image } from '@castcle-api/utils/aws';\nimport {\n  CredentialInterceptor,\n  CredentialRequest\n} from '@castcle-api/utils/interceptors';\nimport { map } from 'rxjs';\n\n@Injectable()\nexport class PageInterceptor extends CredentialInterceptor {\n  async intercept(context: ExecutionContext, next: CallHandler) {\n    const superResult = await super.intercept(context, next);\n    return superResult.pipe(\n      map((data: PageDto) => {\n        data.avatar = new Image(data.avatar).toSignUrl();\n        data.cover = new Image(data.cover).toSignUrl();\n        return data;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagePipe.html":{"url":"injectables/PagePipe.html","title":"injectable - PagePipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/utils/pipes/src/lib/query/query.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                PagePipe will transform query params to number default would be 0\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(pageQuery?: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/utils/pipes/src/lib/query/query.pipe.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageQuery\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ArgumentMetadata, Injectable, PipeTransform } from '@nestjs/common';\nimport {\n  DEFAULT_CONTENT_QUERY_OPTIONS,\n  DEFAULT_QUERY_OPTIONS\n} from '@castcle-api/database/dtos';\nimport { ContentType } from '@castcle-api/database/dtos';\n\n//TODO !!! need to move this to somewhere else\nexport const LIMIT_MAX = 1000;\n\nexport enum SortByEnum {\n  Desc = 'desc',\n  Asc = 'asc'\n}\n\n/**\n * SortByPipe will transform query params to {field:`sortField`, type:`desc|asc`}\n */\n@Injectable()\nexport class SortByPipe implements PipeTransform {\n  /**\n   *\n   * @param {string} sortByQuery\n   * @returns {field:string, type:string}\n   */\n  transform(sortByQuery?: string): { field: string; type: string } {\n    if (sortByQuery && sortByQuery.match(/(desc|asc)\\((\\w+)\\)/)) {\n      const sortByResult = sortByQuery.match(/(desc|asc)\\((\\w+)\\)/);\n      return {\n        type:\n          sortByResult[1] === SortByEnum.Desc\n            ? SortByEnum.Desc\n            : SortByEnum.Asc,\n        field: sortByResult[2]\n      };\n    } else {\n      return DEFAULT_QUERY_OPTIONS.sortBy;\n    }\n  }\n}\n/**\n * PagePipe will transform query params to number default would be 0\n */\n@Injectable()\nexport class PagePipe implements PipeTransform {\n  /**\n   *\n   * @param {string} pageQuery\n   * @returns {number}\n   */\n  transform(pageQuery?: string): number {\n    if (pageQuery && !isNaN(Number(pageQuery))) return Number(pageQuery);\n    return DEFAULT_QUERY_OPTIONS.page;\n  }\n}\n\n/**\n * LimitPipe will transform query params to number default would be 25\n */\n@Injectable()\nexport class LimitPipe implements PipeTransform {\n  /**\n   *\n   * @param {string} limitQuery\n   * @returns {number}\n   */\n  transform(limitQuery?: string): number {\n    if (limitQuery && !isNaN(Number(limitQuery)))\n      return Number(limitQuery) \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageResponse.html":{"url":"classes/PageResponse.html","title":"class - PageResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                payload\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PageResponseDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:159\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Pagination } from './common.dto';\n\nclass UserImage {\n  @ApiProperty()\n  avatar: string;\n  @ApiProperty()\n  cover: string;\n}\n\nclass Link {\n  @ApiProperty()\n  facebook?: string;\n\n  @ApiProperty()\n  twitter?: string;\n\n  @ApiProperty()\n  youtube?: string;\n\n  @ApiProperty()\n  medium?: string;\n\n  @ApiProperty()\n  website?: string | null;\n}\n\nclass Counter {\n  @ApiProperty()\n  count: number;\n}\n\nexport class UserResponseDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  castcleId: string;\n\n  @ApiProperty()\n  email?: string;\n\n  @ApiProperty()\n  overview: string | null;\n\n  @ApiProperty()\n  dob: string | null;\n\n  @ApiProperty()\n  images: UserImage;\n\n  @ApiProperty()\n  links: Link;\n\n  @ApiProperty()\n  following: Counter;\n\n  @ApiProperty()\n  followers: Counter;\n\n  @ApiProperty()\n  verified: boolean;\n\n  @ApiProperty()\n  followed: boolean;\n}\n\nexport class UpdateUserDto {\n  @ApiProperty()\n  overview?: string;\n\n  @ApiProperty()\n  dob?: string;\n\n  @ApiProperty()\n  images?: UserImage;\n\n  @ApiProperty()\n  links?: Link;\n}\n\nexport class PageDto {\n  @ApiProperty()\n  castcleId: string;\n\n  @ApiProperty()\n  displayName: string;\n\n  @ApiProperty()\n  avatar: string;\n\n  @ApiProperty()\n  cover: string;\n}\n\nexport class PageResponseDto {\n  @ApiProperty()\n  castcleId: string;\n\n  @ApiProperty()\n  displayName: string;\n\n  @ApiProperty()\n  avatar: string;\n\n  @ApiProperty()\n  cover: string;\n\n  @ApiProperty()\n  updated: string;\n\n  @ApiProperty()\n  created: string;\n}\n\nexport class UpdatePageDto {\n  @ApiProperty()\n  displayName?: string;\n\n  @ApiProperty()\n  avatar?: string;\n\n  @ApiProperty()\n  cover?: string;\n}\n\nexport class PagesResponse {\n  @ApiProperty()\n  payload: PageResponseDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\nexport class PageResponse {\n  @ApiProperty()\n  payload: PageResponseDto;\n}\n\nexport class FollowResponse {\n  @ApiProperty()\n  payload: UserResponseDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageResponseDto.html":{"url":"classes/PageResponseDto.html","title":"class - PageResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avatar\n                            \n                            \n                                castcleId\n                            \n                            \n                                cover\n                            \n                            \n                                created\n                            \n                            \n                                displayName\n                            \n                            \n                                updated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:126\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        castcleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cover\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:129\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:123\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:132\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Pagination } from './common.dto';\n\nclass UserImage {\n  @ApiProperty()\n  avatar: string;\n  @ApiProperty()\n  cover: string;\n}\n\nclass Link {\n  @ApiProperty()\n  facebook?: string;\n\n  @ApiProperty()\n  twitter?: string;\n\n  @ApiProperty()\n  youtube?: string;\n\n  @ApiProperty()\n  medium?: string;\n\n  @ApiProperty()\n  website?: string | null;\n}\n\nclass Counter {\n  @ApiProperty()\n  count: number;\n}\n\nexport class UserResponseDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  castcleId: string;\n\n  @ApiProperty()\n  email?: string;\n\n  @ApiProperty()\n  overview: string | null;\n\n  @ApiProperty()\n  dob: string | null;\n\n  @ApiProperty()\n  images: UserImage;\n\n  @ApiProperty()\n  links: Link;\n\n  @ApiProperty()\n  following: Counter;\n\n  @ApiProperty()\n  followers: Counter;\n\n  @ApiProperty()\n  verified: boolean;\n\n  @ApiProperty()\n  followed: boolean;\n}\n\nexport class UpdateUserDto {\n  @ApiProperty()\n  overview?: string;\n\n  @ApiProperty()\n  dob?: string;\n\n  @ApiProperty()\n  images?: UserImage;\n\n  @ApiProperty()\n  links?: Link;\n}\n\nexport class PageDto {\n  @ApiProperty()\n  castcleId: string;\n\n  @ApiProperty()\n  displayName: string;\n\n  @ApiProperty()\n  avatar: string;\n\n  @ApiProperty()\n  cover: string;\n}\n\nexport class PageResponseDto {\n  @ApiProperty()\n  castcleId: string;\n\n  @ApiProperty()\n  displayName: string;\n\n  @ApiProperty()\n  avatar: string;\n\n  @ApiProperty()\n  cover: string;\n\n  @ApiProperty()\n  updated: string;\n\n  @ApiProperty()\n  created: string;\n}\n\nexport class UpdatePageDto {\n  @ApiProperty()\n  displayName?: string;\n\n  @ApiProperty()\n  avatar?: string;\n\n  @ApiProperty()\n  cover?: string;\n}\n\nexport class PagesResponse {\n  @ApiProperty()\n  payload: PageResponseDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\nexport class PageResponse {\n  @ApiProperty()\n  payload: PageResponseDto;\n}\n\nexport class FollowResponse {\n  @ApiProperty()\n  payload: UserResponseDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagesResponse.html":{"url":"classes/PagesResponse.html","title":"class - PagesResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagesResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pagination\n                            \n                            \n                                payload\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        pagination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pagination\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:154\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PageResponseDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:151\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Pagination } from './common.dto';\n\nclass UserImage {\n  @ApiProperty()\n  avatar: string;\n  @ApiProperty()\n  cover: string;\n}\n\nclass Link {\n  @ApiProperty()\n  facebook?: string;\n\n  @ApiProperty()\n  twitter?: string;\n\n  @ApiProperty()\n  youtube?: string;\n\n  @ApiProperty()\n  medium?: string;\n\n  @ApiProperty()\n  website?: string | null;\n}\n\nclass Counter {\n  @ApiProperty()\n  count: number;\n}\n\nexport class UserResponseDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  castcleId: string;\n\n  @ApiProperty()\n  email?: string;\n\n  @ApiProperty()\n  overview: string | null;\n\n  @ApiProperty()\n  dob: string | null;\n\n  @ApiProperty()\n  images: UserImage;\n\n  @ApiProperty()\n  links: Link;\n\n  @ApiProperty()\n  following: Counter;\n\n  @ApiProperty()\n  followers: Counter;\n\n  @ApiProperty()\n  verified: boolean;\n\n  @ApiProperty()\n  followed: boolean;\n}\n\nexport class UpdateUserDto {\n  @ApiProperty()\n  overview?: string;\n\n  @ApiProperty()\n  dob?: string;\n\n  @ApiProperty()\n  images?: UserImage;\n\n  @ApiProperty()\n  links?: Link;\n}\n\nexport class PageDto {\n  @ApiProperty()\n  castcleId: string;\n\n  @ApiProperty()\n  displayName: string;\n\n  @ApiProperty()\n  avatar: string;\n\n  @ApiProperty()\n  cover: string;\n}\n\nexport class PageResponseDto {\n  @ApiProperty()\n  castcleId: string;\n\n  @ApiProperty()\n  displayName: string;\n\n  @ApiProperty()\n  avatar: string;\n\n  @ApiProperty()\n  cover: string;\n\n  @ApiProperty()\n  updated: string;\n\n  @ApiProperty()\n  created: string;\n}\n\nexport class UpdatePageDto {\n  @ApiProperty()\n  displayName?: string;\n\n  @ApiProperty()\n  avatar?: string;\n\n  @ApiProperty()\n  cover?: string;\n}\n\nexport class PagesResponse {\n  @ApiProperty()\n  payload: PageResponseDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\nexport class PageResponse {\n  @ApiProperty()\n  payload: PageResponseDto;\n}\n\nexport class FollowResponse {\n  @ApiProperty()\n  payload: UserResponseDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pagination.html":{"url":"classes/Pagination.html","title":"class - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/common.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                next\n                            \n                            \n                                    Optional\n                                previous\n                            \n                            \n                                    Optional\n                                self\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/common.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        next\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/common.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        previous\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/common.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        self\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/common.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class Pagination {\n  @ApiProperty()\n  previous?: number;\n  @ApiProperty()\n  self?: number;\n  @ApiProperty()\n  next?: number;\n  @ApiProperty()\n  limit?: number;\n}\n\nexport class CastcleQueryOptions {\n  sortBy?: {\n    field: string;\n    type: 'desc' | 'asc';\n  } = {\n    field: 'updatedAt',\n    type: 'desc'\n  };\n  type?: string;\n  page?: number = 1;\n  limit?: number = 25;\n}\n\nexport const DEFAULT_QUERY_OPTIONS = {\n  sortBy: {\n    field: 'updatedAt',\n    type: 'desc'\n  },\n  page: 1,\n  limit: 25\n} as CastcleQueryOptions;\n\nexport enum EntityVisibility {\n  Hidden = 'hidden',\n  Publish = 'publish',\n  Deleted = 'deleted'\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Participant.html":{"url":"classes/Participant.html","title":"class - Participant","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Participant\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/content.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"people\" | \"page\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:100\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Pagination } from './common.dto';\nimport { CastcleQueryOptions } from './common.dto';\n\nclass Url {\n  @ApiProperty()\n  url: string;\n}\n\nclass Link {\n  @ApiProperty()\n  type: string;\n\n  @ApiProperty()\n  url: string;\n}\n\nclass BlogPhoto {\n  @ApiProperty()\n  cover: Url;\n\n  @ApiProperty()\n  contents: Url[];\n}\n\nclass ShortPhoto {\n  @ApiProperty()\n  contents: Url[];\n}\n\nexport class ShortPayload {\n  @ApiProperty()\n  message?: string;\n  @ApiProperty()\n  photo?: ShortPhoto;\n  @ApiProperty()\n  link?: Link[];\n}\n\nexport class ImagePayload {\n  @ApiProperty()\n  photo?: ShortPhoto;\n}\n\nexport class BlogPayload {\n  @ApiProperty()\n  header: string;\n  @ApiProperty()\n  message: string;\n  @ApiProperty()\n  photo?: BlogPhoto;\n\n  link?: Link[];\n}\n\nexport class QuotePayload {\n  source: any; //contain content._id\n  message?: string;\n  photo?: ShortPhoto;\n}\n\nexport class RecastPayload {\n  source: any; //contain content._id\n  photo?: ShortPhoto;\n}\n\nclass Feature {\n  @ApiProperty()\n  slug: 'feed';\n  @ApiProperty()\n  name: 'Feed';\n  @ApiProperty()\n  key: 'feature.feed';\n}\n\nclass Participant {\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  name: string;\n}\n\nclass Like {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  liked: boolean; // viewer like it or not\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Comment {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  commented: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Recast {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  recasted: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nexport class Author {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  castcleId: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  avatar: string | null;\n  @ApiProperty()\n  verified: boolean;\n  @ApiProperty()\n  followed: boolean;\n}\n\nexport class ContentPayloadDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  type:\n    | ContentType.Short\n    | ContentType.Blog\n    | ContentType.Image\n    | ContentType.Quote\n    | ContentType.Recast;\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | QuotePayload | RecastPayload;\n\n  @ApiProperty()\n  feature: Feature;\n\n  @ApiProperty()\n  liked: Like;\n\n  @ApiProperty()\n  commented: Comment;\n\n  @ApiProperty()\n  recasted?: Recast;\n\n  @ApiProperty()\n  quoteCast?: ContentPayloadDto;\n\n  @ApiProperty()\n  author: Author;\n\n  @ApiProperty()\n  created: string;\n  @ApiProperty()\n  updated: string;\n}\n\nclass AuthorDto {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n}\n\nexport class SaveContentDto {\n  @ApiProperty()\n  type: 'short' | 'blog' | 'image';\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | ImagePayload;\n\n  @ApiProperty()\n  author?: AuthorDto;\n}\n\nexport enum ContentType {\n  Short = 'short',\n  Blog = 'blog',\n  Image = 'image',\n  Recast = 'recast',\n  Quote = 'quote'\n}\n\nexport class CastcleContentQueryOptions extends CastcleQueryOptions {\n  type?: ContentType;\n}\n\nexport const DEFAULT_CONTENT_QUERY_OPTIONS = {\n  sortBy: {\n    field: 'updatedAt',\n    type: 'desc'\n  },\n  type: ContentType.Short,\n  page: 1,\n  limit: 25\n} as CastcleContentQueryOptions;\n\nexport class ContentResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto;\n}\n\nexport class ContentsResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuotePayload.html":{"url":"classes/QuotePayload.html","title":"class - QuotePayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuotePayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/content.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                photo\n                            \n                            \n                                source\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        photo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShortPhoto\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:79\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Pagination } from './common.dto';\nimport { CastcleQueryOptions } from './common.dto';\n\nclass Url {\n  @ApiProperty()\n  url: string;\n}\n\nclass Link {\n  @ApiProperty()\n  type: string;\n\n  @ApiProperty()\n  url: string;\n}\n\nclass BlogPhoto {\n  @ApiProperty()\n  cover: Url;\n\n  @ApiProperty()\n  contents: Url[];\n}\n\nclass ShortPhoto {\n  @ApiProperty()\n  contents: Url[];\n}\n\nexport class ShortPayload {\n  @ApiProperty()\n  message?: string;\n  @ApiProperty()\n  photo?: ShortPhoto;\n  @ApiProperty()\n  link?: Link[];\n}\n\nexport class ImagePayload {\n  @ApiProperty()\n  photo?: ShortPhoto;\n}\n\nexport class BlogPayload {\n  @ApiProperty()\n  header: string;\n  @ApiProperty()\n  message: string;\n  @ApiProperty()\n  photo?: BlogPhoto;\n\n  link?: Link[];\n}\n\nexport class QuotePayload {\n  source: any; //contain content._id\n  message?: string;\n  photo?: ShortPhoto;\n}\n\nexport class RecastPayload {\n  source: any; //contain content._id\n  photo?: ShortPhoto;\n}\n\nclass Feature {\n  @ApiProperty()\n  slug: 'feed';\n  @ApiProperty()\n  name: 'Feed';\n  @ApiProperty()\n  key: 'feature.feed';\n}\n\nclass Participant {\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  name: string;\n}\n\nclass Like {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  liked: boolean; // viewer like it or not\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Comment {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  commented: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Recast {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  recasted: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nexport class Author {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  castcleId: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  avatar: string | null;\n  @ApiProperty()\n  verified: boolean;\n  @ApiProperty()\n  followed: boolean;\n}\n\nexport class ContentPayloadDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  type:\n    | ContentType.Short\n    | ContentType.Blog\n    | ContentType.Image\n    | ContentType.Quote\n    | ContentType.Recast;\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | QuotePayload | RecastPayload;\n\n  @ApiProperty()\n  feature: Feature;\n\n  @ApiProperty()\n  liked: Like;\n\n  @ApiProperty()\n  commented: Comment;\n\n  @ApiProperty()\n  recasted?: Recast;\n\n  @ApiProperty()\n  quoteCast?: ContentPayloadDto;\n\n  @ApiProperty()\n  author: Author;\n\n  @ApiProperty()\n  created: string;\n  @ApiProperty()\n  updated: string;\n}\n\nclass AuthorDto {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n}\n\nexport class SaveContentDto {\n  @ApiProperty()\n  type: 'short' | 'blog' | 'image';\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | ImagePayload;\n\n  @ApiProperty()\n  author?: AuthorDto;\n}\n\nexport enum ContentType {\n  Short = 'short',\n  Blog = 'blog',\n  Image = 'image',\n  Recast = 'recast',\n  Quote = 'quote'\n}\n\nexport class CastcleContentQueryOptions extends CastcleQueryOptions {\n  type?: ContentType;\n}\n\nexport const DEFAULT_CONTENT_QUERY_OPTIONS = {\n  sortBy: {\n    field: 'updatedAt',\n    type: 'desc'\n  },\n  type: ContentType.Short,\n  page: 1,\n  limit: 25\n} as CastcleContentQueryOptions;\n\nexport class ContentResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto;\n}\n\nexport class ContentsResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Recast.html":{"url":"classes/Recast.html","title":"class - Recast","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Recast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/content.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                count\n                            \n                            \n                                participants\n                            \n                            \n                                recasted\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        participants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Participant[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:131\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recasted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:129\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Pagination } from './common.dto';\nimport { CastcleQueryOptions } from './common.dto';\n\nclass Url {\n  @ApiProperty()\n  url: string;\n}\n\nclass Link {\n  @ApiProperty()\n  type: string;\n\n  @ApiProperty()\n  url: string;\n}\n\nclass BlogPhoto {\n  @ApiProperty()\n  cover: Url;\n\n  @ApiProperty()\n  contents: Url[];\n}\n\nclass ShortPhoto {\n  @ApiProperty()\n  contents: Url[];\n}\n\nexport class ShortPayload {\n  @ApiProperty()\n  message?: string;\n  @ApiProperty()\n  photo?: ShortPhoto;\n  @ApiProperty()\n  link?: Link[];\n}\n\nexport class ImagePayload {\n  @ApiProperty()\n  photo?: ShortPhoto;\n}\n\nexport class BlogPayload {\n  @ApiProperty()\n  header: string;\n  @ApiProperty()\n  message: string;\n  @ApiProperty()\n  photo?: BlogPhoto;\n\n  link?: Link[];\n}\n\nexport class QuotePayload {\n  source: any; //contain content._id\n  message?: string;\n  photo?: ShortPhoto;\n}\n\nexport class RecastPayload {\n  source: any; //contain content._id\n  photo?: ShortPhoto;\n}\n\nclass Feature {\n  @ApiProperty()\n  slug: 'feed';\n  @ApiProperty()\n  name: 'Feed';\n  @ApiProperty()\n  key: 'feature.feed';\n}\n\nclass Participant {\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  name: string;\n}\n\nclass Like {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  liked: boolean; // viewer like it or not\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Comment {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  commented: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Recast {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  recasted: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nexport class Author {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  castcleId: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  avatar: string | null;\n  @ApiProperty()\n  verified: boolean;\n  @ApiProperty()\n  followed: boolean;\n}\n\nexport class ContentPayloadDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  type:\n    | ContentType.Short\n    | ContentType.Blog\n    | ContentType.Image\n    | ContentType.Quote\n    | ContentType.Recast;\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | QuotePayload | RecastPayload;\n\n  @ApiProperty()\n  feature: Feature;\n\n  @ApiProperty()\n  liked: Like;\n\n  @ApiProperty()\n  commented: Comment;\n\n  @ApiProperty()\n  recasted?: Recast;\n\n  @ApiProperty()\n  quoteCast?: ContentPayloadDto;\n\n  @ApiProperty()\n  author: Author;\n\n  @ApiProperty()\n  created: string;\n  @ApiProperty()\n  updated: string;\n}\n\nclass AuthorDto {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n}\n\nexport class SaveContentDto {\n  @ApiProperty()\n  type: 'short' | 'blog' | 'image';\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | ImagePayload;\n\n  @ApiProperty()\n  author?: AuthorDto;\n}\n\nexport enum ContentType {\n  Short = 'short',\n  Blog = 'blog',\n  Image = 'image',\n  Recast = 'recast',\n  Quote = 'quote'\n}\n\nexport class CastcleContentQueryOptions extends CastcleQueryOptions {\n  type?: ContentType;\n}\n\nexport const DEFAULT_CONTENT_QUERY_OPTIONS = {\n  sortBy: {\n    field: 'updatedAt',\n    type: 'desc'\n  },\n  type: ContentType.Short,\n  page: 1,\n  limit: 25\n} as CastcleContentQueryOptions;\n\nexport class ContentResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto;\n}\n\nexport class ContentsResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RecastPayload.html":{"url":"classes/RecastPayload.html","title":"class - RecastPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RecastPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/content.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                photo\n                            \n                            \n                                source\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        photo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShortPhoto\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:85\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Pagination } from './common.dto';\nimport { CastcleQueryOptions } from './common.dto';\n\nclass Url {\n  @ApiProperty()\n  url: string;\n}\n\nclass Link {\n  @ApiProperty()\n  type: string;\n\n  @ApiProperty()\n  url: string;\n}\n\nclass BlogPhoto {\n  @ApiProperty()\n  cover: Url;\n\n  @ApiProperty()\n  contents: Url[];\n}\n\nclass ShortPhoto {\n  @ApiProperty()\n  contents: Url[];\n}\n\nexport class ShortPayload {\n  @ApiProperty()\n  message?: string;\n  @ApiProperty()\n  photo?: ShortPhoto;\n  @ApiProperty()\n  link?: Link[];\n}\n\nexport class ImagePayload {\n  @ApiProperty()\n  photo?: ShortPhoto;\n}\n\nexport class BlogPayload {\n  @ApiProperty()\n  header: string;\n  @ApiProperty()\n  message: string;\n  @ApiProperty()\n  photo?: BlogPhoto;\n\n  link?: Link[];\n}\n\nexport class QuotePayload {\n  source: any; //contain content._id\n  message?: string;\n  photo?: ShortPhoto;\n}\n\nexport class RecastPayload {\n  source: any; //contain content._id\n  photo?: ShortPhoto;\n}\n\nclass Feature {\n  @ApiProperty()\n  slug: 'feed';\n  @ApiProperty()\n  name: 'Feed';\n  @ApiProperty()\n  key: 'feature.feed';\n}\n\nclass Participant {\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  name: string;\n}\n\nclass Like {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  liked: boolean; // viewer like it or not\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Comment {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  commented: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Recast {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  recasted: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nexport class Author {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  castcleId: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  avatar: string | null;\n  @ApiProperty()\n  verified: boolean;\n  @ApiProperty()\n  followed: boolean;\n}\n\nexport class ContentPayloadDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  type:\n    | ContentType.Short\n    | ContentType.Blog\n    | ContentType.Image\n    | ContentType.Quote\n    | ContentType.Recast;\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | QuotePayload | RecastPayload;\n\n  @ApiProperty()\n  feature: Feature;\n\n  @ApiProperty()\n  liked: Like;\n\n  @ApiProperty()\n  commented: Comment;\n\n  @ApiProperty()\n  recasted?: Recast;\n\n  @ApiProperty()\n  quoteCast?: ContentPayloadDto;\n\n  @ApiProperty()\n  author: Author;\n\n  @ApiProperty()\n  created: string;\n  @ApiProperty()\n  updated: string;\n}\n\nclass AuthorDto {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n}\n\nexport class SaveContentDto {\n  @ApiProperty()\n  type: 'short' | 'blog' | 'image';\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | ImagePayload;\n\n  @ApiProperty()\n  author?: AuthorDto;\n}\n\nexport enum ContentType {\n  Short = 'short',\n  Blog = 'blog',\n  Image = 'image',\n  Recast = 'recast',\n  Quote = 'quote'\n}\n\nexport class CastcleContentQueryOptions extends CastcleQueryOptions {\n  type?: ContentType;\n}\n\nexport const DEFAULT_CONTENT_QUERY_OPTIONS = {\n  sortBy: {\n    field: 'updatedAt',\n    type: 'desc'\n  },\n  type: ContentType.Short,\n  page: 1,\n  limit: 25\n} as CastcleContentQueryOptions;\n\nexport class ContentResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto;\n}\n\nexport class ContentsResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RefreshTokenPayload.html":{"url":"interfaces/RefreshTokenPayload.html","title":"interface - RefreshTokenPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RefreshTokenPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/token.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            refreshTokenExpiresTime\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshTokenExpiresTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshTokenExpiresTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     \"member\" | \"guest\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"member\" | \"guest\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AccessTokenPayload {\n  id: string;\n  preferredLanguage: string[];\n  role: 'member' | 'guest'; // member or guest\n  accessTokenExpiresTime?: string; // 30 นาทีจาก create\n}\n\nexport interface MemberAccessTokenPayload extends AccessTokenPayload {\n  role: 'member';\n  castcleId: string;\n  displayName: string;\n  email?: string;\n  avatar?: string;\n}\n\nexport interface RefreshTokenPayload {\n  id: string;\n  role: 'member' | 'guest';\n  refreshTokenExpiresTime?: string;\n}\n\nexport interface EmailVerifyToken {\n  id: string;\n  verifyTokenExpiresTime?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTokenResponse.html":{"url":"classes/RefreshTokenResponse.html","title":"class - RefreshTokenResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTokenResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/authentications/src/app/dtos/dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/authentications/src/app/dtos/dto.ts:85\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nexport class GuestLoginDto {\n  @ApiProperty()\n  deviceUUID: string;\n}\n\nexport class CheckEmailExistDto {\n  @ApiProperty()\n  email: string;\n}\n\nexport class LoginDto {\n  @ApiProperty()\n  username: string;\n  @ApiProperty()\n  password: string;\n}\n\nclass RegisterPayload {\n  @ApiProperty()\n  email: string;\n  @ApiProperty()\n  password: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  castcleId: string;\n}\n\nexport class RegisterByEmailDto {\n  @ApiProperty()\n  channel: 'email';\n  @ApiProperty()\n  payload: RegisterPayload;\n}\n\nexport class CheckIdExistDto {\n  @ApiProperty()\n  castcleId: string;\n}\n\nexport class TokenResponse {\n  @ApiProperty()\n  accessToken: string;\n\n  @ApiProperty()\n  refreshToken: string;\n}\n\nexport class CheckingResponse {\n  @ApiProperty()\n  message: string;\n\n  @ApiProperty()\n  payload: {\n    exist: boolean;\n  };\n}\n\nexport class RefreshTokenResponse {\n  @ApiProperty()\n  accessToken: string;\n}\n\nclass suggestCastcleIdPayload {\n  @ApiProperty()\n  suggestCastcleId: string;\n}\n\nexport class SuggestCastcleIdReponse {\n  @ApiProperty()\n  payload: suggestCastcleIdPayload;\n}\n\nexport class ChangePasswordBody {\n  @ApiProperty()\n  refCode: string;\n  @ApiProperty()\n  newPassword: string;\n}\n\nexport class VerificationPasswordBody {\n  @ApiProperty()\n  password: string;\n}\n\nexport class VerificationPasswordResponse {\n  @ApiProperty()\n  refCode: string;\n  @ApiProperty()\n  expiresTime: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterByEmailDto.html":{"url":"classes/RegisterByEmailDto.html","title":"class - RegisterByEmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterByEmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/authentications/src/app/dtos/dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                channel\n                            \n                            \n                                payload\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        channel\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/authentications/src/app/dtos/dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RegisterPayload\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/authentications/src/app/dtos/dto.ts:57\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nexport class GuestLoginDto {\n  @ApiProperty()\n  deviceUUID: string;\n}\n\nexport class CheckEmailExistDto {\n  @ApiProperty()\n  email: string;\n}\n\nexport class LoginDto {\n  @ApiProperty()\n  username: string;\n  @ApiProperty()\n  password: string;\n}\n\nclass RegisterPayload {\n  @ApiProperty()\n  email: string;\n  @ApiProperty()\n  password: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  castcleId: string;\n}\n\nexport class RegisterByEmailDto {\n  @ApiProperty()\n  channel: 'email';\n  @ApiProperty()\n  payload: RegisterPayload;\n}\n\nexport class CheckIdExistDto {\n  @ApiProperty()\n  castcleId: string;\n}\n\nexport class TokenResponse {\n  @ApiProperty()\n  accessToken: string;\n\n  @ApiProperty()\n  refreshToken: string;\n}\n\nexport class CheckingResponse {\n  @ApiProperty()\n  message: string;\n\n  @ApiProperty()\n  payload: {\n    exist: boolean;\n  };\n}\n\nexport class RefreshTokenResponse {\n  @ApiProperty()\n  accessToken: string;\n}\n\nclass suggestCastcleIdPayload {\n  @ApiProperty()\n  suggestCastcleId: string;\n}\n\nexport class SuggestCastcleIdReponse {\n  @ApiProperty()\n  payload: suggestCastcleIdPayload;\n}\n\nexport class ChangePasswordBody {\n  @ApiProperty()\n  refCode: string;\n  @ApiProperty()\n  newPassword: string;\n}\n\nexport class VerificationPasswordBody {\n  @ApiProperty()\n  password: string;\n}\n\nexport class VerificationPasswordResponse {\n  @ApiProperty()\n  refCode: string;\n  @ApiProperty()\n  expiresTime: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterPayload.html":{"url":"classes/RegisterPayload.html","title":"class - RegisterPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/authentications/src/app/dtos/dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                castcleId\n                            \n                            \n                                displayName\n                            \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        castcleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/authentications/src/app/dtos/dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/authentications/src/app/dtos/dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/authentications/src/app/dtos/dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/authentications/src/app/dtos/dto.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nexport class GuestLoginDto {\n  @ApiProperty()\n  deviceUUID: string;\n}\n\nexport class CheckEmailExistDto {\n  @ApiProperty()\n  email: string;\n}\n\nexport class LoginDto {\n  @ApiProperty()\n  username: string;\n  @ApiProperty()\n  password: string;\n}\n\nclass RegisterPayload {\n  @ApiProperty()\n  email: string;\n  @ApiProperty()\n  password: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  castcleId: string;\n}\n\nexport class RegisterByEmailDto {\n  @ApiProperty()\n  channel: 'email';\n  @ApiProperty()\n  payload: RegisterPayload;\n}\n\nexport class CheckIdExistDto {\n  @ApiProperty()\n  castcleId: string;\n}\n\nexport class TokenResponse {\n  @ApiProperty()\n  accessToken: string;\n\n  @ApiProperty()\n  refreshToken: string;\n}\n\nexport class CheckingResponse {\n  @ApiProperty()\n  message: string;\n\n  @ApiProperty()\n  payload: {\n    exist: boolean;\n  };\n}\n\nexport class RefreshTokenResponse {\n  @ApiProperty()\n  accessToken: string;\n}\n\nclass suggestCastcleIdPayload {\n  @ApiProperty()\n  suggestCastcleId: string;\n}\n\nexport class SuggestCastcleIdReponse {\n  @ApiProperty()\n  payload: suggestCastcleIdPayload;\n}\n\nexport class ChangePasswordBody {\n  @ApiProperty()\n  refCode: string;\n  @ApiProperty()\n  newPassword: string;\n}\n\nexport class VerificationPasswordBody {\n  @ApiProperty()\n  password: string;\n}\n\nexport class VerificationPasswordResponse {\n  @ApiProperty()\n  refCode: string;\n  @ApiProperty()\n  expiresTime: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Relationship.html":{"url":"classes/Relationship.html","title":"class - Relationship","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Relationship\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/schemas/relationship.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CastcleBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                followedUser\n                            \n                            \n                                isFollowPage\n                            \n                            \n                                user\n                            \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                visibility\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        followedUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined, ref: 'User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/relationship.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFollowPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/relationship.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined, ref: 'User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/relationship.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        visibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityVisibility\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:37\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Document, Model } from 'mongoose';\nimport { CastcleBase } from './base.schema';\nimport { User } from './user.schema';\n\n@Schema({ timestamps: true })\nexport class Relationship extends CastcleBase {\n  @Prop({ required: true, type: mongoose.Schema.Types.ObjectId, ref: 'User' })\n  user: User;\n\n  @Prop({ required: true, type: mongoose.Schema.Types.ObjectId, ref: 'User' })\n  followedUser: User;\n\n  //TODO !!! might need to change to embed followedUser and user instead\n  @Prop()\n  isFollowPage: boolean;\n}\n\nexport type RelationshipDocument = Relationship & Document;\nexport const RelationshipSchema = SchemaFactory.createForClass(Relationship);\nexport const RelationshipSchemaFactory = (): mongoose.Schema => {\n  return RelationshipSchema;\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Revision.html":{"url":"classes/Revision.html","title":"class - Revision","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Revision\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/schemas/revision.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CastcleBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                objectRef\n                            \n                            \n                                payload\n                            \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                visibility\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        objectRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/revision.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Content | Comment\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/revision.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        visibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityVisibility\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:37\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Document } from 'mongoose';\nimport { CastcleBase } from './base.schema';\nimport { Content } from './content.schema';\nimport { Comment } from './comment.schema';\n\nexport type RevisionDocument = Revision & Document;\n\n@Schema({ timestamps: true })\nexport class Revision extends CastcleBase {\n  @Prop({ required: true, type: Object })\n  objectRef: any;\n\n  @Prop({ required: true, type: Object })\n  payload: Content | Comment;\n}\n\nexport const Revisionchema = SchemaFactory.createForClass(Revision);\nexport const RevisionchemaFactory = (): mongoose.Schema => {\n  return Revisionchema;\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveContentDto.html":{"url":"classes/SaveContentDto.html","title":"class - SaveContentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveContentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/content.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                author\n                            \n                            \n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthorDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:205\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ShortPayload | BlogPayload | ImagePayload\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:202\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"short\" | \"blog\" | \"image\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:199\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Pagination } from './common.dto';\nimport { CastcleQueryOptions } from './common.dto';\n\nclass Url {\n  @ApiProperty()\n  url: string;\n}\n\nclass Link {\n  @ApiProperty()\n  type: string;\n\n  @ApiProperty()\n  url: string;\n}\n\nclass BlogPhoto {\n  @ApiProperty()\n  cover: Url;\n\n  @ApiProperty()\n  contents: Url[];\n}\n\nclass ShortPhoto {\n  @ApiProperty()\n  contents: Url[];\n}\n\nexport class ShortPayload {\n  @ApiProperty()\n  message?: string;\n  @ApiProperty()\n  photo?: ShortPhoto;\n  @ApiProperty()\n  link?: Link[];\n}\n\nexport class ImagePayload {\n  @ApiProperty()\n  photo?: ShortPhoto;\n}\n\nexport class BlogPayload {\n  @ApiProperty()\n  header: string;\n  @ApiProperty()\n  message: string;\n  @ApiProperty()\n  photo?: BlogPhoto;\n\n  link?: Link[];\n}\n\nexport class QuotePayload {\n  source: any; //contain content._id\n  message?: string;\n  photo?: ShortPhoto;\n}\n\nexport class RecastPayload {\n  source: any; //contain content._id\n  photo?: ShortPhoto;\n}\n\nclass Feature {\n  @ApiProperty()\n  slug: 'feed';\n  @ApiProperty()\n  name: 'Feed';\n  @ApiProperty()\n  key: 'feature.feed';\n}\n\nclass Participant {\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  name: string;\n}\n\nclass Like {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  liked: boolean; // viewer like it or not\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Comment {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  commented: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Recast {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  recasted: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nexport class Author {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  castcleId: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  avatar: string | null;\n  @ApiProperty()\n  verified: boolean;\n  @ApiProperty()\n  followed: boolean;\n}\n\nexport class ContentPayloadDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  type:\n    | ContentType.Short\n    | ContentType.Blog\n    | ContentType.Image\n    | ContentType.Quote\n    | ContentType.Recast;\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | QuotePayload | RecastPayload;\n\n  @ApiProperty()\n  feature: Feature;\n\n  @ApiProperty()\n  liked: Like;\n\n  @ApiProperty()\n  commented: Comment;\n\n  @ApiProperty()\n  recasted?: Recast;\n\n  @ApiProperty()\n  quoteCast?: ContentPayloadDto;\n\n  @ApiProperty()\n  author: Author;\n\n  @ApiProperty()\n  created: string;\n  @ApiProperty()\n  updated: string;\n}\n\nclass AuthorDto {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n}\n\nexport class SaveContentDto {\n  @ApiProperty()\n  type: 'short' | 'blog' | 'image';\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | ImagePayload;\n\n  @ApiProperty()\n  author?: AuthorDto;\n}\n\nexport enum ContentType {\n  Short = 'short',\n  Blog = 'blog',\n  Image = 'image',\n  Recast = 'recast',\n  Quote = 'quote'\n}\n\nexport class CastcleContentQueryOptions extends CastcleQueryOptions {\n  type?: ContentType;\n}\n\nexport const DEFAULT_CONTENT_QUERY_OPTIONS = {\n  sortBy: {\n    field: 'updatedAt',\n    type: 'desc'\n  },\n  type: ContentType.Short,\n  page: 1,\n  limit: 25\n} as CastcleContentQueryOptions;\n\nexport class ContentResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto;\n}\n\nexport class ContentsResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveCredentialDto.html":{"url":"classes/SaveCredentialDto.html","title":"class - SaveCredentialDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveCredentialDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/account.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                accessTokenExpireDate\n                            \n                            \n                                    Optional\n                                account\n                            \n                            \n                                    Optional\n                                device\n                            \n                            \n                                    Optional\n                                deviceUUID\n                            \n                            \n                                    Optional\n                                platform\n                            \n                            \n                                    Optional\n                                refreshToken\n                            \n                            \n                                    Optional\n                                refreshTokenExpireDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/account.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        accessTokenExpireDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/account.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/account.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        device\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/account.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deviceUUID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/account.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        platform\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/account.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/account.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        refreshTokenExpireDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/account.dto.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as mongoose from 'mongoose';\nimport { EntityVisibility } from './common.dto';\n\nexport class SaveCredentialDto {\n  account?: {\n    _id: mongoose.Types.ObjectId;\n    isGuest: boolean;\n  };\n  accessToken: string;\n  refreshToken?: string;\n  accessTokenExpireDate: Date;\n  refreshTokenExpireDate?: Date;\n  platform?: string;\n  deviceUUID?: string;\n  device?: string;\n}\n\nexport class CreateCredentialDto {\n  account: {\n    _id: mongoose.Types.ObjectId;\n    isGuest: boolean;\n  };\n  accessToken: string;\n  refreshToken: string;\n  accessTokenExpireDate: Date;\n  refreshTokenExpireDate?: Date;\n  platform: string;\n  deviceUUID: string;\n  device: string;\n}\n\nexport class CreateAccountDto {\n  isGuest: boolean;\n  updateDate: Date;\n  createDate: Date;\n  preferences: {\n    languages: string[];\n  };\n  visibility = EntityVisibility.Publish;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShortPayload.html":{"url":"classes/ShortPayload.html","title":"class - ShortPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShortPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/content.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                link\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                photo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        link\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Link[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        photo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShortPhoto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:57\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Pagination } from './common.dto';\nimport { CastcleQueryOptions } from './common.dto';\n\nclass Url {\n  @ApiProperty()\n  url: string;\n}\n\nclass Link {\n  @ApiProperty()\n  type: string;\n\n  @ApiProperty()\n  url: string;\n}\n\nclass BlogPhoto {\n  @ApiProperty()\n  cover: Url;\n\n  @ApiProperty()\n  contents: Url[];\n}\n\nclass ShortPhoto {\n  @ApiProperty()\n  contents: Url[];\n}\n\nexport class ShortPayload {\n  @ApiProperty()\n  message?: string;\n  @ApiProperty()\n  photo?: ShortPhoto;\n  @ApiProperty()\n  link?: Link[];\n}\n\nexport class ImagePayload {\n  @ApiProperty()\n  photo?: ShortPhoto;\n}\n\nexport class BlogPayload {\n  @ApiProperty()\n  header: string;\n  @ApiProperty()\n  message: string;\n  @ApiProperty()\n  photo?: BlogPhoto;\n\n  link?: Link[];\n}\n\nexport class QuotePayload {\n  source: any; //contain content._id\n  message?: string;\n  photo?: ShortPhoto;\n}\n\nexport class RecastPayload {\n  source: any; //contain content._id\n  photo?: ShortPhoto;\n}\n\nclass Feature {\n  @ApiProperty()\n  slug: 'feed';\n  @ApiProperty()\n  name: 'Feed';\n  @ApiProperty()\n  key: 'feature.feed';\n}\n\nclass Participant {\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  name: string;\n}\n\nclass Like {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  liked: boolean; // viewer like it or not\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Comment {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  commented: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Recast {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  recasted: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nexport class Author {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  castcleId: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  avatar: string | null;\n  @ApiProperty()\n  verified: boolean;\n  @ApiProperty()\n  followed: boolean;\n}\n\nexport class ContentPayloadDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  type:\n    | ContentType.Short\n    | ContentType.Blog\n    | ContentType.Image\n    | ContentType.Quote\n    | ContentType.Recast;\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | QuotePayload | RecastPayload;\n\n  @ApiProperty()\n  feature: Feature;\n\n  @ApiProperty()\n  liked: Like;\n\n  @ApiProperty()\n  commented: Comment;\n\n  @ApiProperty()\n  recasted?: Recast;\n\n  @ApiProperty()\n  quoteCast?: ContentPayloadDto;\n\n  @ApiProperty()\n  author: Author;\n\n  @ApiProperty()\n  created: string;\n  @ApiProperty()\n  updated: string;\n}\n\nclass AuthorDto {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n}\n\nexport class SaveContentDto {\n  @ApiProperty()\n  type: 'short' | 'blog' | 'image';\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | ImagePayload;\n\n  @ApiProperty()\n  author?: AuthorDto;\n}\n\nexport enum ContentType {\n  Short = 'short',\n  Blog = 'blog',\n  Image = 'image',\n  Recast = 'recast',\n  Quote = 'quote'\n}\n\nexport class CastcleContentQueryOptions extends CastcleQueryOptions {\n  type?: ContentType;\n}\n\nexport const DEFAULT_CONTENT_QUERY_OPTIONS = {\n  sortBy: {\n    field: 'updatedAt',\n    type: 'desc'\n  },\n  type: ContentType.Short,\n  page: 1,\n  limit: 25\n} as CastcleContentQueryOptions;\n\nexport class ContentResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto;\n}\n\nexport class ContentsResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShortPhoto.html":{"url":"classes/ShortPhoto.html","title":"class - ShortPhoto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShortPhoto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/content.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contents\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contents\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Url[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Pagination } from './common.dto';\nimport { CastcleQueryOptions } from './common.dto';\n\nclass Url {\n  @ApiProperty()\n  url: string;\n}\n\nclass Link {\n  @ApiProperty()\n  type: string;\n\n  @ApiProperty()\n  url: string;\n}\n\nclass BlogPhoto {\n  @ApiProperty()\n  cover: Url;\n\n  @ApiProperty()\n  contents: Url[];\n}\n\nclass ShortPhoto {\n  @ApiProperty()\n  contents: Url[];\n}\n\nexport class ShortPayload {\n  @ApiProperty()\n  message?: string;\n  @ApiProperty()\n  photo?: ShortPhoto;\n  @ApiProperty()\n  link?: Link[];\n}\n\nexport class ImagePayload {\n  @ApiProperty()\n  photo?: ShortPhoto;\n}\n\nexport class BlogPayload {\n  @ApiProperty()\n  header: string;\n  @ApiProperty()\n  message: string;\n  @ApiProperty()\n  photo?: BlogPhoto;\n\n  link?: Link[];\n}\n\nexport class QuotePayload {\n  source: any; //contain content._id\n  message?: string;\n  photo?: ShortPhoto;\n}\n\nexport class RecastPayload {\n  source: any; //contain content._id\n  photo?: ShortPhoto;\n}\n\nclass Feature {\n  @ApiProperty()\n  slug: 'feed';\n  @ApiProperty()\n  name: 'Feed';\n  @ApiProperty()\n  key: 'feature.feed';\n}\n\nclass Participant {\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  name: string;\n}\n\nclass Like {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  liked: boolean; // viewer like it or not\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Comment {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  commented: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Recast {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  recasted: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nexport class Author {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  castcleId: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  avatar: string | null;\n  @ApiProperty()\n  verified: boolean;\n  @ApiProperty()\n  followed: boolean;\n}\n\nexport class ContentPayloadDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  type:\n    | ContentType.Short\n    | ContentType.Blog\n    | ContentType.Image\n    | ContentType.Quote\n    | ContentType.Recast;\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | QuotePayload | RecastPayload;\n\n  @ApiProperty()\n  feature: Feature;\n\n  @ApiProperty()\n  liked: Like;\n\n  @ApiProperty()\n  commented: Comment;\n\n  @ApiProperty()\n  recasted?: Recast;\n\n  @ApiProperty()\n  quoteCast?: ContentPayloadDto;\n\n  @ApiProperty()\n  author: Author;\n\n  @ApiProperty()\n  created: string;\n  @ApiProperty()\n  updated: string;\n}\n\nclass AuthorDto {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n}\n\nexport class SaveContentDto {\n  @ApiProperty()\n  type: 'short' | 'blog' | 'image';\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | ImagePayload;\n\n  @ApiProperty()\n  author?: AuthorDto;\n}\n\nexport enum ContentType {\n  Short = 'short',\n  Blog = 'blog',\n  Image = 'image',\n  Recast = 'recast',\n  Quote = 'quote'\n}\n\nexport class CastcleContentQueryOptions extends CastcleQueryOptions {\n  type?: ContentType;\n}\n\nexport const DEFAULT_CONTENT_QUERY_OPTIONS = {\n  sortBy: {\n    field: 'updatedAt',\n    type: 'desc'\n  },\n  type: ContentType.Short,\n  page: 1,\n  limit: 25\n} as CastcleContentQueryOptions;\n\nexport class ContentResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto;\n}\n\nexport class ContentsResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignupRequirements.html":{"url":"interfaces/SignupRequirements.html","title":"interface - SignupRequirements","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignupRequirements\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/services/authentication.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayId\n                                        \n                                \n                                \n                                        \n                                            displayName\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model } from 'mongoose';\nimport { Inject, Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { AccountDocument, AccountSchema } from '../schemas/account.schema';\nimport {\n  AccountActivationDocument,\n  AccountActivationModel\n} from '../schemas/accountActivation.schema';\nimport { UserDocument, UserType } from '../schemas/user.schema';\nimport { OtpDocument, OtpModel, OtpObjective } from '../schemas/otp.schema';\nimport * as mongoose from 'mongoose';\nimport { CreateCredentialDto, CreateAccountDto } from '../dtos/account.dto';\nimport {\n  CredentialDocument,\n  CredentialModel\n} from '../schemas/credential.schema';\nimport { CastcleName, Token } from '@castcle-api/utils';\nimport {\n  AccessTokenPayload,\n  RefreshTokenPayload,\n  EmailVerifyToken,\n  MemberAccessTokenPayload\n} from '../dtos/token.dto';\nimport { EntityVisibility } from '../dtos/common.dto';\n\nexport interface AccountRequirements {\n  header: {\n    platform: string;\n  };\n  device: string;\n  deviceUUID: string;\n  languagesPreferences: string[];\n}\n\nexport interface SignupRequirements {\n  email: string;\n  password: string;\n  displayName: string;\n  displayId: string;\n}\n\n@Injectable()\nexport class AuthenticationService {\n  constructor(\n    @InjectModel('Account') public _accountModel: Model,\n    @InjectModel('Credential')\n    public _credentialModel: CredentialModel,\n    @InjectModel('AccountActivation')\n    public _accountActivationModel: AccountActivationModel,\n    @InjectModel('User')\n    public _userModel: Model,\n    @InjectModel('Otp')\n    public _otpModel: OtpModel\n  ) {}\n\n  getGuestCredentialFromDeviceUUID = (deviceUUID: string) =>\n    this._credentialModel\n      .findOne({ deviceUUID: deviceUUID, 'account.isGuest': true })\n      .exec();\n\n  getCredentialFromRefreshToken = (refreshToken: string) =>\n    this._credentialModel.findOne({ refreshToken: refreshToken }).exec();\n\n  getCredentialFromAccessToken = (accessToken: string) =>\n    this._credentialModel.findOne({ accessToken: accessToken }).exec();\n\n  async createAccount(accountRequirements: AccountRequirements) {\n    const newAccount = new this._accountModel({\n      isGuest: true,\n      preferences: {\n        languages: accountRequirements.languagesPreferences\n      }\n    } as CreateAccountDto);\n    newAccount.visibility = EntityVisibility.Publish;\n    const accountDocument = await newAccount.save();\n    const accessTokenResult = this._generateAccessToken({\n      id: accountDocument._id as string,\n      preferredLanguage: accountRequirements.languagesPreferences,\n      role: 'guest'\n    });\n    const refreshTokenResult = this._generateRefreshToken({\n      id: accountDocument._id as string,\n      role: 'guest'\n    });\n    const credential = new this._credentialModel({\n      account: {\n        _id: mongoose.Types.ObjectId(accountDocument._id),\n        isGuest: true,\n        visibility: EntityVisibility.Publish\n      },\n      accessToken: accessTokenResult.accessToken,\n      accessTokenExpireDate: accessTokenResult.accessTokenExpireDate,\n      refreshToken: refreshTokenResult.refreshToken,\n      refreshTokenExpireDate: refreshTokenResult.refreshTokenExpireDate,\n      device: accountRequirements.device,\n      platform: accountRequirements.header.platform,\n      deviceUUID: accountRequirements.deviceUUID\n    } as CreateCredentialDto);\n    const credentialDocument = await credential.save();\n    //TODO !!! : how to reduct this\n    if (!newAccount.credentials) newAccount.credentials = [];\n    newAccount.credentials.push({\n      _id: mongoose.Types.ObjectId(credentialDocument._id),\n      deviceUUID: credentialDocument.deviceUUID\n    });\n    await newAccount.save();\n    return { accountDocument, credentialDocument };\n  }\n\n  async linkCredentialToAccount(\n    credential: CredentialDocument,\n    account: AccountDocument\n  ) {\n    if (account._id === credential.account) {\n      return credential; // already link\n    }\n    //remove account old crdentiial\n    await this._accountModel.findByIdAndDelete(credential.account);\n    credential.account = account._id;\n    const credentialAccount = await this._accountModel.findById(account._id);\n    if (credentialAccount) {\n      if (!credentialAccount.credentials) credentialAccount.credentials = [];\n      credentialAccount.credentials.push({\n        _id: mongoose.Types.ObjectId(credential._id),\n        deviceUUID: credential.deviceUUID\n      });\n      await credentialAccount.save();\n    }\n    //set new account credential to current account\n    return credential.save();\n  }\n\n  getAccountFromCredential = (credential: CredentialDocument) =>\n    this._accountModel.findById(credential.account).exec();\n\n  getAccountFromEmail = (email: string) =>\n    this._accountModel\n      .findOne({ email: email, visibility: EntityVisibility.Publish })\n      .exec();\n\n  getUserFromCastcleId = (id: string) => {\n    return this._userModel.findOne({ displayId: id }).exec();\n  };\n\n  getAccountActivationFromVerifyToken = (token: string) =>\n    this._accountActivationModel.findOne({ verifyToken: token }).exec();\n\n  getAccountActivationFromCredential = (credential: CredentialDocument) =>\n    this._accountActivationModel\n      .findOne({ account: credential.account })\n      .exec();\n\n  validateEmail = (email: string) => {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email.toLowerCase());\n  };\n\n  _generateAccessToken = (payload: AccessTokenPayload) =>\n    this._credentialModel.generateAccessToken(payload);\n  _generateRefreshToken = (payload: RefreshTokenPayload) =>\n    this._credentialModel.generateRefreshToken(payload);\n  _generateEmailVerifyToken = (payload: EmailVerifyToken) =>\n    this._accountActivationModel.generateVerifyToken(payload);\n\n  async verifyAccessToken(accessToken: string) {\n    const credentialDocument = await this._credentialModel\n      .findOne({ accessToken: accessToken })\n      .exec();\n    if (credentialDocument && credentialDocument.isAccessTokenValid())\n      return true;\n    else return false;\n  }\n\n  async verifyAccount(accountActivation: AccountActivationDocument) {\n    const now = new Date();\n    accountActivation.activationDate = now;\n    await accountActivation.save();\n    //update ac\n    const account = await this._accountModel\n      .findById(accountActivation.account)\n      .exec();\n    account.isGuest = false;\n    account.activateDate = now;\n    const savedAccount = await account.save();\n    return savedAccount;\n  }\n\n  async signupByEmail(\n    account: AccountDocument,\n    requirements: SignupRequirements\n  ) {\n    account.isGuest = false;\n    //account.email = requirements.email;\n    //account.password =  requirements.password;\n    await account.changePassword(requirements.password, requirements.email);\n    //create user here\n    const user = new this._userModel({\n      ownerAccount: account._id,\n      displayName: requirements.displayName,\n      displayId: requirements.displayId,\n      type: UserType.People\n    });\n    await user.save();\n    return this.createAccountActivation(account, 'email');\n  }\n\n  createAccountActivation(account: AccountDocument, type: 'email' | 'phone') {\n    const emailTokenResult = this._generateEmailVerifyToken({\n      id: account._id\n    });\n    const accountActivation = new this._accountActivationModel({\n      account: account._id,\n      type: type,\n      verifyToken: emailTokenResult.verifyToken,\n      verifyTokenExpireDate: emailTokenResult.verifyTokenExpireDate\n    });\n    return accountActivation.save();\n  }\n\n  revokeAccountActivation(accountActivation: AccountActivationDocument) {\n    const emailTokenResult = this._generateEmailVerifyToken({\n      id: accountActivation.account as unknown as string\n    });\n    accountActivation.revocationDate = new Date();\n    accountActivation.verifyToken = emailTokenResult.verifyToken;\n    accountActivation.verifyTokenExpireDate =\n      emailTokenResult.verifyTokenExpireDate;\n    return accountActivation.save();\n  }\n\n  /**\n   *\n   * @param {string} displayName this will show suggestName + totalUser(if suggestName is already exist)\n   * @returns {Promise} suggestCastCleId\n   */\n  async suggestCastcleId(displayName: string) {\n    const name = new CastcleName(displayName);\n    const result = await this.getUserFromCastcleId(name.suggestCastcleId);\n    if (result) {\n      const totalUser = await this._userModel.countDocuments().exec();\n      return name.suggestCastcleId + totalUser;\n    } else return name.suggestCastcleId;\n  }\n\n  /**\n   * generate refCode and create Otp Document\n   * @param {AccountDocument} account\n   * @returns {OtpDocument}\n   */\n  async generateOtp(account: AccountDocument) {\n    const otp = await this._otpModel.generate(\n      account._id,\n      OtpObjective.ChangePassword\n    );\n    return otp;\n  }\n\n  /**\n   * find refCode that has the same refCode and\n   * @param {AccountDocument} account\n   * @param {string} refCode\n   * @returns {OtpDocument}\n   */\n  async getOtpFromAccount(account: AccountDocument, refCode: string) {\n    return this._otpModel\n      .findOne({ account: account._id, refCode: refCode })\n      .exec();\n  }\n\n  /**\n   * this will assume that we already check otp is valid. this function will change current account password and delete otp then return newly change password account\n   * @param {AccountDocument} account\n   * @param {OtpDocument} otp\n   * @param {string} newPassword\n   * @returns {Promise}\n   */\n  async changePassword(\n    account: AccountDocument,\n    otp: OtpDocument,\n    newPassword: string\n  ) {\n    let newAccount: AccountDocument;\n    const session = await this._accountModel.startSession();\n    session.withTransaction(async () => {\n      newAccount = await account.changePassword(newPassword);\n      await otp.delete();\n    });\n    session.endSession();\n    return newAccount;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SortByPipe.html":{"url":"injectables/SortByPipe.html","title":"injectable - SortByPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SortByPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/utils/pipes/src/lib/query/query.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                SortByPipe will transform query params to {field:sortField, type:desc|asc}\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(sortByQuery?: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/utils/pipes/src/lib/query/query.pipe.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sortByQuery\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        :string, type:string}\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ArgumentMetadata, Injectable, PipeTransform } from '@nestjs/common';\nimport {\n  DEFAULT_CONTENT_QUERY_OPTIONS,\n  DEFAULT_QUERY_OPTIONS\n} from '@castcle-api/database/dtos';\nimport { ContentType } from '@castcle-api/database/dtos';\n\n//TODO !!! need to move this to somewhere else\nexport const LIMIT_MAX = 1000;\n\nexport enum SortByEnum {\n  Desc = 'desc',\n  Asc = 'asc'\n}\n\n/**\n * SortByPipe will transform query params to {field:`sortField`, type:`desc|asc`}\n */\n@Injectable()\nexport class SortByPipe implements PipeTransform {\n  /**\n   *\n   * @param {string} sortByQuery\n   * @returns {field:string, type:string}\n   */\n  transform(sortByQuery?: string): { field: string; type: string } {\n    if (sortByQuery && sortByQuery.match(/(desc|asc)\\((\\w+)\\)/)) {\n      const sortByResult = sortByQuery.match(/(desc|asc)\\((\\w+)\\)/);\n      return {\n        type:\n          sortByResult[1] === SortByEnum.Desc\n            ? SortByEnum.Desc\n            : SortByEnum.Asc,\n        field: sortByResult[2]\n      };\n    } else {\n      return DEFAULT_QUERY_OPTIONS.sortBy;\n    }\n  }\n}\n/**\n * PagePipe will transform query params to number default would be 0\n */\n@Injectable()\nexport class PagePipe implements PipeTransform {\n  /**\n   *\n   * @param {string} pageQuery\n   * @returns {number}\n   */\n  transform(pageQuery?: string): number {\n    if (pageQuery && !isNaN(Number(pageQuery))) return Number(pageQuery);\n    return DEFAULT_QUERY_OPTIONS.page;\n  }\n}\n\n/**\n * LimitPipe will transform query params to number default would be 25\n */\n@Injectable()\nexport class LimitPipe implements PipeTransform {\n  /**\n   *\n   * @param {string} limitQuery\n   * @returns {number}\n   */\n  transform(limitQuery?: string): number {\n    if (limitQuery && !isNaN(Number(limitQuery)))\n      return Number(limitQuery) \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SuggestCastcleIdReponse.html":{"url":"classes/SuggestCastcleIdReponse.html","title":"class - SuggestCastcleIdReponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SuggestCastcleIdReponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/authentications/src/app/dtos/dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                payload\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         suggestCastcleIdPayload\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/authentications/src/app/dtos/dto.ts:95\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nexport class GuestLoginDto {\n  @ApiProperty()\n  deviceUUID: string;\n}\n\nexport class CheckEmailExistDto {\n  @ApiProperty()\n  email: string;\n}\n\nexport class LoginDto {\n  @ApiProperty()\n  username: string;\n  @ApiProperty()\n  password: string;\n}\n\nclass RegisterPayload {\n  @ApiProperty()\n  email: string;\n  @ApiProperty()\n  password: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  castcleId: string;\n}\n\nexport class RegisterByEmailDto {\n  @ApiProperty()\n  channel: 'email';\n  @ApiProperty()\n  payload: RegisterPayload;\n}\n\nexport class CheckIdExistDto {\n  @ApiProperty()\n  castcleId: string;\n}\n\nexport class TokenResponse {\n  @ApiProperty()\n  accessToken: string;\n\n  @ApiProperty()\n  refreshToken: string;\n}\n\nexport class CheckingResponse {\n  @ApiProperty()\n  message: string;\n\n  @ApiProperty()\n  payload: {\n    exist: boolean;\n  };\n}\n\nexport class RefreshTokenResponse {\n  @ApiProperty()\n  accessToken: string;\n}\n\nclass suggestCastcleIdPayload {\n  @ApiProperty()\n  suggestCastcleId: string;\n}\n\nexport class SuggestCastcleIdReponse {\n  @ApiProperty()\n  payload: suggestCastcleIdPayload;\n}\n\nexport class ChangePasswordBody {\n  @ApiProperty()\n  refCode: string;\n  @ApiProperty()\n  newPassword: string;\n}\n\nexport class VerificationPasswordBody {\n  @ApiProperty()\n  password: string;\n}\n\nexport class VerificationPasswordResponse {\n  @ApiProperty()\n  refCode: string;\n  @ApiProperty()\n  expiresTime: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenHeader.html":{"url":"interfaces/TokenHeader.html","title":"interface - TokenHeader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/authentication.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            acceptVersion\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        acceptVersion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        acceptVersion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenHeader {\n  acceptVersion: string;\n}\n\nexport class CreateAccountDto {\n  isGuest: boolean;\n  updateDate: Date;\n  createDate: Date;\n  preferences: {\n    languages: string[];\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TokenInterceptor.html":{"url":"injectables/TokenInterceptor.html","title":"injectable - TokenInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TokenInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/utils/interceptors/src/lib/token/token.interceptor.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        HeadersInterceptor\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Inherited from         HeadersInterceptor\n\n                \n            \n            \n                \n                        Defined in         HeadersInterceptor:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport * as util from '../util';\nimport {\n  HeadersInterceptor,\n  HeadersRequest\n} from '../headers/headers.interceptor';\n\nexport interface TokenRequest extends HeadersRequest {\n  $token: string;\n}\n\n@Injectable()\nexport class TokenInterceptor extends HeadersInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const HeaderIntercepResult = super.intercept(context, next);\n    const request = context.switchToHttp().getRequest();\n    request.$token = util.getTokenFromRequest(request);\n    return HeaderIntercepResult;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenRequest.html":{"url":"interfaces/TokenRequest.html","title":"interface - TokenRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/utils/interceptors/src/lib/token/token.interceptor.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        HeadersRequest\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            $token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        $token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CallHandler, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport * as util from '../util';\nimport {\n  HeadersInterceptor,\n  HeadersRequest\n} from '../headers/headers.interceptor';\n\nexport interface TokenRequest extends HeadersRequest {\n  $token: string;\n}\n\n@Injectable()\nexport class TokenInterceptor extends HeadersInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const HeaderIntercepResult = super.intercept(context, next);\n    const request = context.switchToHttp().getRequest();\n    request.$token = util.getTokenFromRequest(request);\n    return HeaderIntercepResult;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TokenResponse.html":{"url":"classes/TokenResponse.html","title":"class - TokenResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TokenResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/authentications/src/app/dtos/dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/authentications/src/app/dtos/dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/authentications/src/app/dtos/dto.ts:70\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nexport class GuestLoginDto {\n  @ApiProperty()\n  deviceUUID: string;\n}\n\nexport class CheckEmailExistDto {\n  @ApiProperty()\n  email: string;\n}\n\nexport class LoginDto {\n  @ApiProperty()\n  username: string;\n  @ApiProperty()\n  password: string;\n}\n\nclass RegisterPayload {\n  @ApiProperty()\n  email: string;\n  @ApiProperty()\n  password: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  castcleId: string;\n}\n\nexport class RegisterByEmailDto {\n  @ApiProperty()\n  channel: 'email';\n  @ApiProperty()\n  payload: RegisterPayload;\n}\n\nexport class CheckIdExistDto {\n  @ApiProperty()\n  castcleId: string;\n}\n\nexport class TokenResponse {\n  @ApiProperty()\n  accessToken: string;\n\n  @ApiProperty()\n  refreshToken: string;\n}\n\nexport class CheckingResponse {\n  @ApiProperty()\n  message: string;\n\n  @ApiProperty()\n  payload: {\n    exist: boolean;\n  };\n}\n\nexport class RefreshTokenResponse {\n  @ApiProperty()\n  accessToken: string;\n}\n\nclass suggestCastcleIdPayload {\n  @ApiProperty()\n  suggestCastcleId: string;\n}\n\nexport class SuggestCastcleIdReponse {\n  @ApiProperty()\n  payload: suggestCastcleIdPayload;\n}\n\nexport class ChangePasswordBody {\n  @ApiProperty()\n  refCode: string;\n  @ApiProperty()\n  newPassword: string;\n}\n\nexport class VerificationPasswordBody {\n  @ApiProperty()\n  password: string;\n}\n\nexport class VerificationPasswordResponse {\n  @ApiProperty()\n  refCode: string;\n  @ApiProperty()\n  expiresTime: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePageDto.html":{"url":"classes/UpdatePageDto.html","title":"class - UpdatePageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                avatar\n                            \n                            \n                                    Optional\n                                cover\n                            \n                            \n                                    Optional\n                                displayName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:143\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        cover\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:146\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:140\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Pagination } from './common.dto';\n\nclass UserImage {\n  @ApiProperty()\n  avatar: string;\n  @ApiProperty()\n  cover: string;\n}\n\nclass Link {\n  @ApiProperty()\n  facebook?: string;\n\n  @ApiProperty()\n  twitter?: string;\n\n  @ApiProperty()\n  youtube?: string;\n\n  @ApiProperty()\n  medium?: string;\n\n  @ApiProperty()\n  website?: string | null;\n}\n\nclass Counter {\n  @ApiProperty()\n  count: number;\n}\n\nexport class UserResponseDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  castcleId: string;\n\n  @ApiProperty()\n  email?: string;\n\n  @ApiProperty()\n  overview: string | null;\n\n  @ApiProperty()\n  dob: string | null;\n\n  @ApiProperty()\n  images: UserImage;\n\n  @ApiProperty()\n  links: Link;\n\n  @ApiProperty()\n  following: Counter;\n\n  @ApiProperty()\n  followers: Counter;\n\n  @ApiProperty()\n  verified: boolean;\n\n  @ApiProperty()\n  followed: boolean;\n}\n\nexport class UpdateUserDto {\n  @ApiProperty()\n  overview?: string;\n\n  @ApiProperty()\n  dob?: string;\n\n  @ApiProperty()\n  images?: UserImage;\n\n  @ApiProperty()\n  links?: Link;\n}\n\nexport class PageDto {\n  @ApiProperty()\n  castcleId: string;\n\n  @ApiProperty()\n  displayName: string;\n\n  @ApiProperty()\n  avatar: string;\n\n  @ApiProperty()\n  cover: string;\n}\n\nexport class PageResponseDto {\n  @ApiProperty()\n  castcleId: string;\n\n  @ApiProperty()\n  displayName: string;\n\n  @ApiProperty()\n  avatar: string;\n\n  @ApiProperty()\n  cover: string;\n\n  @ApiProperty()\n  updated: string;\n\n  @ApiProperty()\n  created: string;\n}\n\nexport class UpdatePageDto {\n  @ApiProperty()\n  displayName?: string;\n\n  @ApiProperty()\n  avatar?: string;\n\n  @ApiProperty()\n  cover?: string;\n}\n\nexport class PagesResponse {\n  @ApiProperty()\n  payload: PageResponseDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\nexport class PageResponse {\n  @ApiProperty()\n  payload: PageResponseDto;\n}\n\nexport class FollowResponse {\n  @ApiProperty()\n  payload: UserResponseDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                dob\n                            \n                            \n                                    Optional\n                                images\n                            \n                            \n                                    Optional\n                                links\n                            \n                            \n                                    Optional\n                                overview\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dob\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserImage\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        links\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Link\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        overview\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:92\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Pagination } from './common.dto';\n\nclass UserImage {\n  @ApiProperty()\n  avatar: string;\n  @ApiProperty()\n  cover: string;\n}\n\nclass Link {\n  @ApiProperty()\n  facebook?: string;\n\n  @ApiProperty()\n  twitter?: string;\n\n  @ApiProperty()\n  youtube?: string;\n\n  @ApiProperty()\n  medium?: string;\n\n  @ApiProperty()\n  website?: string | null;\n}\n\nclass Counter {\n  @ApiProperty()\n  count: number;\n}\n\nexport class UserResponseDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  castcleId: string;\n\n  @ApiProperty()\n  email?: string;\n\n  @ApiProperty()\n  overview: string | null;\n\n  @ApiProperty()\n  dob: string | null;\n\n  @ApiProperty()\n  images: UserImage;\n\n  @ApiProperty()\n  links: Link;\n\n  @ApiProperty()\n  following: Counter;\n\n  @ApiProperty()\n  followers: Counter;\n\n  @ApiProperty()\n  verified: boolean;\n\n  @ApiProperty()\n  followed: boolean;\n}\n\nexport class UpdateUserDto {\n  @ApiProperty()\n  overview?: string;\n\n  @ApiProperty()\n  dob?: string;\n\n  @ApiProperty()\n  images?: UserImage;\n\n  @ApiProperty()\n  links?: Link;\n}\n\nexport class PageDto {\n  @ApiProperty()\n  castcleId: string;\n\n  @ApiProperty()\n  displayName: string;\n\n  @ApiProperty()\n  avatar: string;\n\n  @ApiProperty()\n  cover: string;\n}\n\nexport class PageResponseDto {\n  @ApiProperty()\n  castcleId: string;\n\n  @ApiProperty()\n  displayName: string;\n\n  @ApiProperty()\n  avatar: string;\n\n  @ApiProperty()\n  cover: string;\n\n  @ApiProperty()\n  updated: string;\n\n  @ApiProperty()\n  created: string;\n}\n\nexport class UpdatePageDto {\n  @ApiProperty()\n  displayName?: string;\n\n  @ApiProperty()\n  avatar?: string;\n\n  @ApiProperty()\n  cover?: string;\n}\n\nexport class PagesResponse {\n  @ApiProperty()\n  payload: PageResponseDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\nexport class PageResponse {\n  @ApiProperty()\n  payload: PageResponseDto;\n}\n\nexport class FollowResponse {\n  @ApiProperty()\n  payload: UserResponseDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Uploader.html":{"url":"classes/Uploader.html","title":"class - Uploader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Uploader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/utils/aws/src/lib/uploader.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bucket\n                            \n                            \n                                    Public\n                                destination\n                            \n                            \n                                s3\n                            \n                            \n                                uploadFromBase64ToS3\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(bucket: string, destination: string)\n                    \n                \n                        \n                            \n                                Defined in libs/utils/aws/src/lib/uploader.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bucket\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        destination\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        bucket\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/utils/aws/src/lib/uploader.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        destination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/utils/aws/src/lib/uploader.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        s3\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AWS.S3\n\n                    \n                \n                    \n                        \n                                Defined in libs/utils/aws/src/lib/uploader.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadFromBase64ToS3\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in libs/utils/aws/src/lib/uploader.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as AWS from 'aws-sdk';\nimport { CastcleException, CastcleStatus } from '@castcle-api/utils/exception';\n\nexport type UploadOptions = {\n  filename?: string;\n  language?: string;\n  addTime?: boolean;\n  order?: number;\n};\n\nexport class Uploader {\n  s3: AWS.S3;\n  constructor(public bucket: string, public destination: string) {\n    this.s3 = new AWS.S3();\n  }\n\n  uploadFromBase64ToS3 = async (base64: string, options?: UploadOptions) => {\n    try {\n      const buffer = Buffer.from(\n        base64.replace(/^data:image\\/\\w+;base64,/, ''),\n        'base64'\n      );\n      const extensionName = options && options.addTime ? `-${Date.now()}` : '';\n      const saveName =\n        options && options.filename\n          ? `${options.filename}${extensionName}`\n          : `${Date.now()}`;\n      console.log({\n        Bucket: this.bucket,\n        Body: buffer,\n        ContentEncoding: 'base64',\n        Key: `${this.destination}/${saveName}`\n      });\n      return this.s3\n        .upload({\n          Bucket: this.bucket,\n          Body: buffer,\n          ContentEncoding: 'base64',\n          Key: `${this.destination}/${saveName}`\n        })\n        .promise();\n    } catch (error) {\n      const errorLanguage =\n        options && options.language ? options.language : 'en';\n      throw new CastcleException(CastcleStatus.UPLOAD_FAILED, errorLanguage);\n    }\n  };\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Url.html":{"url":"classes/Url.html","title":"class - Url","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Url\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/content.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/content.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Pagination } from './common.dto';\nimport { CastcleQueryOptions } from './common.dto';\n\nclass Url {\n  @ApiProperty()\n  url: string;\n}\n\nclass Link {\n  @ApiProperty()\n  type: string;\n\n  @ApiProperty()\n  url: string;\n}\n\nclass BlogPhoto {\n  @ApiProperty()\n  cover: Url;\n\n  @ApiProperty()\n  contents: Url[];\n}\n\nclass ShortPhoto {\n  @ApiProperty()\n  contents: Url[];\n}\n\nexport class ShortPayload {\n  @ApiProperty()\n  message?: string;\n  @ApiProperty()\n  photo?: ShortPhoto;\n  @ApiProperty()\n  link?: Link[];\n}\n\nexport class ImagePayload {\n  @ApiProperty()\n  photo?: ShortPhoto;\n}\n\nexport class BlogPayload {\n  @ApiProperty()\n  header: string;\n  @ApiProperty()\n  message: string;\n  @ApiProperty()\n  photo?: BlogPhoto;\n\n  link?: Link[];\n}\n\nexport class QuotePayload {\n  source: any; //contain content._id\n  message?: string;\n  photo?: ShortPhoto;\n}\n\nexport class RecastPayload {\n  source: any; //contain content._id\n  photo?: ShortPhoto;\n}\n\nclass Feature {\n  @ApiProperty()\n  slug: 'feed';\n  @ApiProperty()\n  name: 'Feed';\n  @ApiProperty()\n  key: 'feature.feed';\n}\n\nclass Participant {\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  name: string;\n}\n\nclass Like {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  liked: boolean; // viewer like it or not\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Comment {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  commented: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nclass Recast {\n  @ApiProperty()\n  count: number;\n  @ApiProperty()\n  recasted: boolean;\n  @ApiProperty()\n  participants: Participant[];\n}\n\nexport class Author {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n  @ApiProperty()\n  castcleId: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  avatar: string | null;\n  @ApiProperty()\n  verified: boolean;\n  @ApiProperty()\n  followed: boolean;\n}\n\nexport class ContentPayloadDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  type:\n    | ContentType.Short\n    | ContentType.Blog\n    | ContentType.Image\n    | ContentType.Quote\n    | ContentType.Recast;\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | QuotePayload | RecastPayload;\n\n  @ApiProperty()\n  feature: Feature;\n\n  @ApiProperty()\n  liked: Like;\n\n  @ApiProperty()\n  commented: Comment;\n\n  @ApiProperty()\n  recasted?: Recast;\n\n  @ApiProperty()\n  quoteCast?: ContentPayloadDto;\n\n  @ApiProperty()\n  author: Author;\n\n  @ApiProperty()\n  created: string;\n  @ApiProperty()\n  updated: string;\n}\n\nclass AuthorDto {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  type: 'people' | 'page';\n}\n\nexport class SaveContentDto {\n  @ApiProperty()\n  type: 'short' | 'blog' | 'image';\n\n  @ApiProperty()\n  payload: ShortPayload | BlogPayload | ImagePayload;\n\n  @ApiProperty()\n  author?: AuthorDto;\n}\n\nexport enum ContentType {\n  Short = 'short',\n  Blog = 'blog',\n  Image = 'image',\n  Recast = 'recast',\n  Quote = 'quote'\n}\n\nexport class CastcleContentQueryOptions extends CastcleQueryOptions {\n  type?: ContentType;\n}\n\nexport const DEFAULT_CONTENT_QUERY_OPTIONS = {\n  sortBy: {\n    field: 'updatedAt',\n    type: 'desc'\n  },\n  type: ContentType.Short,\n  page: 1,\n  limit: 25\n} as CastcleContentQueryOptions;\n\nexport class ContentResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto;\n}\n\nexport class ContentsResponse {\n  @ApiProperty()\n  payload: ContentPayloadDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/schemas/user.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CastcleBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayId\n                            \n                            \n                                displayName\n                            \n                            \n                                followedCount\n                            \n                            \n                                followerCount\n                            \n                            \n                                ownerAccount\n                            \n                            \n                                    Optional\n                                profile\n                            \n                            \n                                type\n                            \n                            \n                                verified\n                            \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                visibility\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/user.schema.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/user.schema.ts:84\n                        \n                    \n\n            \n                \n                    This is the same as castcleId\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        followedCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/user.schema.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        followerCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/user.schema.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ownerAccount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Account\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined, ref: 'Account'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/user.schema.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserProfile\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/user.schema.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/user.schema.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/user.schema.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        visibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityVisibility\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:37\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Document, Model } from 'mongoose';\nimport { Account, AccountDocument } from '../schemas/account.schema';\nimport { CastcleBase } from './base.schema';\nimport {\n  PageDto,\n  PageResponse,\n  PageResponseDto,\n  UserResponseDto\n} from '../dtos/user.dto';\nimport { RelationshipDocument } from './relationship.schema';\nimport { EntityVisibility } from '../dtos/common.dto';\n\nexport type UserDocument = User & IUser;\n\ntype ProfileImage = {\n  avatar?: string;\n  cover?: string;\n};\n\nexport interface UserProfile {\n  birthdate?: string;\n  overview?: string;\n  works?: string[];\n  educations?: string[];\n  homeTowns?: string[];\n  websites?: {\n    website: string;\n    detail: string;\n  }[];\n  socials?: {\n    facebook?: string;\n    twitter?: string;\n    youtube?: string;\n    medium?: string;\n  };\n  details?: string;\n  images?: ProfileImage;\n}\n\nexport enum UserType {\n  People = 'people',\n  Page = 'page'\n}\n\n@Schema({ timestamps: true })\nexport class User extends CastcleBase {\n  @Prop({\n    required: true,\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Account'\n  })\n  ownerAccount: Account;\n\n  /**\n   * This is the same as castcleId\n   * @field this is field displayName\n   */\n  @Prop({ required: true })\n  displayName: string;\n\n  @Prop({ required: true })\n  displayId: string;\n\n  @Prop({ type: Object })\n  profile?: UserProfile;\n\n  @Prop({ required: true })\n  type: string;\n\n  @Prop()\n  verified: boolean;\n\n  @Prop()\n  followerCount: number;\n\n  @Prop()\n  followedCount: number;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\nexport interface IUser extends Document {\n  toUserResponse(): Promise;\n  toPageResponse(): PageResponseDto;\n  follow(user: UserDocument): Promise;\n  unfollow(user: UserDocument): Promise;\n}\n\nexport interface UserModel extends mongoose.Model {\n  covertToUserResponse(user: User | UserDocument): UserResponseDto;\n}\n\nconst _covertToUserResponse = (self: User | UserDocument) => {\n  const selfSocial: any =\n    self.profile && self.profile.socials ? { ...self.profile.socials } : {};\n  if (self.profile && self.profile.websites && self.profile.websites.length > 0)\n    selfSocial.website = self.profile.websites[0].website;\n  return {\n    id: self._id,\n    castcleId: self.displayId,\n    dob: self.profile && self.profile.birthdate ? self.profile.birthdate : null,\n    followers: {\n      count: self.followerCount\n    },\n    following: {\n      count: self.followedCount\n    },\n    images: {\n      avatar:\n        self.profile && self.profile.images && self.profile.images.avatar\n          ? self.profile.images.avatar\n          : 'http://placehold.it/100x100', // TODO !!! need to check S3 about static url\n      cover:\n        self.profile && self.profile.images && self.profile.images.cover\n          ? self.profile.images.cover\n          : 'http://placehold.it/200x200'\n    },\n    overview:\n      self.profile && self.profile.overview ? self.profile.overview : null,\n    links: selfSocial,\n    verified: self.verified ? true : false\n  } as UserResponseDto;\n};\n\nUserSchema.statics.covertToUserResponse = (self: User | UserDocument) =>\n  _covertToUserResponse(self);\n\nUserSchema.methods.toUserResponse = async function () {\n  const self = await (this as UserDocument)\n    .populate('ownerAccount')\n    .execPopulate();\n  const response = _covertToUserResponse(self);\n  response.email = self.ownerAccount.email;\n  const selfSocial: any =\n    self.profile && self.profile.socials ? { ...self.profile.socials } : {};\n  return response;\n};\n\nUserSchema.methods.toPageResponse = function () {\n  return {\n    castcleId: (this as UserDocument).displayId,\n    displayName: (this as UserDocument).displayName,\n    avatar: (this as UserDocument).profile.images.avatar,\n    cover: (this as UserDocument).profile.images.cover,\n    updated: (this as UserDocument).updatedAt.toISOString(),\n    created: (this as UserDocument).createdAt.toISOString()\n  } as PageResponseDto;\n};\n\nexport const UserSchemaFactory = (\n  relationshipModel: Model\n): mongoose.Schema => {\n  /**\n   * Make sure all aggregate counter is 0\n   */\n  UserSchema.pre('save', function (next) {\n    if (!(this as UserDocument).visibility)\n      (this as UserDocument).visibility = EntityVisibility.Publish;\n    if (!(this as UserDocument).followedCount)\n      (this as UserDocument).followedCount = 0;\n    if (!(this as UserDocument).followerCount)\n      (this as UserDocument).followerCount = 0;\n    next();\n  });\n  UserSchema.methods.follow = async function (followedUser: UserDocument) {\n    const session = await relationshipModel.startSession();\n    await session.withTransaction(async () => {\n      ///TODO !!! Might have to change if relationship is embed\n      const setObject = {\n        user: (this as UserDocument)._id,\n        followedUser: followedUser._id,\n        isFollowPage: false\n      };\n      if ((followedUser as UserDocument).type === UserType.Page)\n        setObject.isFollowPage = true;\n      const result = await relationshipModel\n        .updateOne(\n          {\n            user: (this as UserDocument)._id,\n            followedUser: followedUser._id\n          },\n          {\n            $setOnInsert: setObject\n          },\n          {\n            upsert: true\n          }\n        )\n        .exec();\n      if (result.upserted) {\n        (this as UserDocument).followedCount++;\n        followedUser.followerCount++;\n        await Promise.all([this.save(), followedUser.save()]);\n      }\n    });\n    session.endSession();\n  };\n\n  UserSchema.methods.unfollow = async function (followedUser: UserDocument) {\n    const session = await relationshipModel.startSession();\n    await session.withTransaction(async () => {\n      const result = await relationshipModel\n        .deleteOne({\n          user: this._id,\n          followedUser: followedUser._id\n        })\n        .exec();\n      if (result.deletedCount === 1) {\n        (this as UserDocument).followedCount--;\n        followedUser.followerCount--;\n        await Promise.all([this.save(), followedUser.save()]);\n      }\n    });\n    session.endSession();\n  };\n  return UserSchema;\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserImage.html":{"url":"classes/UserImage.html","title":"class - UserImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avatar\n                            \n                            \n                                cover\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cover\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Pagination } from './common.dto';\n\nclass UserImage {\n  @ApiProperty()\n  avatar: string;\n  @ApiProperty()\n  cover: string;\n}\n\nclass Link {\n  @ApiProperty()\n  facebook?: string;\n\n  @ApiProperty()\n  twitter?: string;\n\n  @ApiProperty()\n  youtube?: string;\n\n  @ApiProperty()\n  medium?: string;\n\n  @ApiProperty()\n  website?: string | null;\n}\n\nclass Counter {\n  @ApiProperty()\n  count: number;\n}\n\nexport class UserResponseDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  castcleId: string;\n\n  @ApiProperty()\n  email?: string;\n\n  @ApiProperty()\n  overview: string | null;\n\n  @ApiProperty()\n  dob: string | null;\n\n  @ApiProperty()\n  images: UserImage;\n\n  @ApiProperty()\n  links: Link;\n\n  @ApiProperty()\n  following: Counter;\n\n  @ApiProperty()\n  followers: Counter;\n\n  @ApiProperty()\n  verified: boolean;\n\n  @ApiProperty()\n  followed: boolean;\n}\n\nexport class UpdateUserDto {\n  @ApiProperty()\n  overview?: string;\n\n  @ApiProperty()\n  dob?: string;\n\n  @ApiProperty()\n  images?: UserImage;\n\n  @ApiProperty()\n  links?: Link;\n}\n\nexport class PageDto {\n  @ApiProperty()\n  castcleId: string;\n\n  @ApiProperty()\n  displayName: string;\n\n  @ApiProperty()\n  avatar: string;\n\n  @ApiProperty()\n  cover: string;\n}\n\nexport class PageResponseDto {\n  @ApiProperty()\n  castcleId: string;\n\n  @ApiProperty()\n  displayName: string;\n\n  @ApiProperty()\n  avatar: string;\n\n  @ApiProperty()\n  cover: string;\n\n  @ApiProperty()\n  updated: string;\n\n  @ApiProperty()\n  created: string;\n}\n\nexport class UpdatePageDto {\n  @ApiProperty()\n  displayName?: string;\n\n  @ApiProperty()\n  avatar?: string;\n\n  @ApiProperty()\n  cover?: string;\n}\n\nexport class PagesResponse {\n  @ApiProperty()\n  payload: PageResponseDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\nexport class PageResponse {\n  @ApiProperty()\n  payload: PageResponseDto;\n}\n\nexport class FollowResponse {\n  @ApiProperty()\n  payload: UserResponseDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserModel.html":{"url":"interfaces/UserModel.html","title":"interface - UserModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/schemas/user.schema.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        covertToUserResponse\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        covertToUserResponse\n                        \n                    \n                \n            \n            \n                \ncovertToUserResponse(user: User | UserDocument)\n                \n            \n\n\n            \n                \n                    Defined in libs/database/src/lib/schemas/user.schema.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User | UserDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserResponseDto\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Document, Model } from 'mongoose';\nimport { Account, AccountDocument } from '../schemas/account.schema';\nimport { CastcleBase } from './base.schema';\nimport {\n  PageDto,\n  PageResponse,\n  PageResponseDto,\n  UserResponseDto\n} from '../dtos/user.dto';\nimport { RelationshipDocument } from './relationship.schema';\nimport { EntityVisibility } from '../dtos/common.dto';\n\nexport type UserDocument = User & IUser;\n\ntype ProfileImage = {\n  avatar?: string;\n  cover?: string;\n};\n\nexport interface UserProfile {\n  birthdate?: string;\n  overview?: string;\n  works?: string[];\n  educations?: string[];\n  homeTowns?: string[];\n  websites?: {\n    website: string;\n    detail: string;\n  }[];\n  socials?: {\n    facebook?: string;\n    twitter?: string;\n    youtube?: string;\n    medium?: string;\n  };\n  details?: string;\n  images?: ProfileImage;\n}\n\nexport enum UserType {\n  People = 'people',\n  Page = 'page'\n}\n\n@Schema({ timestamps: true })\nexport class User extends CastcleBase {\n  @Prop({\n    required: true,\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Account'\n  })\n  ownerAccount: Account;\n\n  /**\n   * This is the same as castcleId\n   * @field this is field displayName\n   */\n  @Prop({ required: true })\n  displayName: string;\n\n  @Prop({ required: true })\n  displayId: string;\n\n  @Prop({ type: Object })\n  profile?: UserProfile;\n\n  @Prop({ required: true })\n  type: string;\n\n  @Prop()\n  verified: boolean;\n\n  @Prop()\n  followerCount: number;\n\n  @Prop()\n  followedCount: number;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\nexport interface IUser extends Document {\n  toUserResponse(): Promise;\n  toPageResponse(): PageResponseDto;\n  follow(user: UserDocument): Promise;\n  unfollow(user: UserDocument): Promise;\n}\n\nexport interface UserModel extends mongoose.Model {\n  covertToUserResponse(user: User | UserDocument): UserResponseDto;\n}\n\nconst _covertToUserResponse = (self: User | UserDocument) => {\n  const selfSocial: any =\n    self.profile && self.profile.socials ? { ...self.profile.socials } : {};\n  if (self.profile && self.profile.websites && self.profile.websites.length > 0)\n    selfSocial.website = self.profile.websites[0].website;\n  return {\n    id: self._id,\n    castcleId: self.displayId,\n    dob: self.profile && self.profile.birthdate ? self.profile.birthdate : null,\n    followers: {\n      count: self.followerCount\n    },\n    following: {\n      count: self.followedCount\n    },\n    images: {\n      avatar:\n        self.profile && self.profile.images && self.profile.images.avatar\n          ? self.profile.images.avatar\n          : 'http://placehold.it/100x100', // TODO !!! need to check S3 about static url\n      cover:\n        self.profile && self.profile.images && self.profile.images.cover\n          ? self.profile.images.cover\n          : 'http://placehold.it/200x200'\n    },\n    overview:\n      self.profile && self.profile.overview ? self.profile.overview : null,\n    links: selfSocial,\n    verified: self.verified ? true : false\n  } as UserResponseDto;\n};\n\nUserSchema.statics.covertToUserResponse = (self: User | UserDocument) =>\n  _covertToUserResponse(self);\n\nUserSchema.methods.toUserResponse = async function () {\n  const self = await (this as UserDocument)\n    .populate('ownerAccount')\n    .execPopulate();\n  const response = _covertToUserResponse(self);\n  response.email = self.ownerAccount.email;\n  const selfSocial: any =\n    self.profile && self.profile.socials ? { ...self.profile.socials } : {};\n  return response;\n};\n\nUserSchema.methods.toPageResponse = function () {\n  return {\n    castcleId: (this as UserDocument).displayId,\n    displayName: (this as UserDocument).displayName,\n    avatar: (this as UserDocument).profile.images.avatar,\n    cover: (this as UserDocument).profile.images.cover,\n    updated: (this as UserDocument).updatedAt.toISOString(),\n    created: (this as UserDocument).createdAt.toISOString()\n  } as PageResponseDto;\n};\n\nexport const UserSchemaFactory = (\n  relationshipModel: Model\n): mongoose.Schema => {\n  /**\n   * Make sure all aggregate counter is 0\n   */\n  UserSchema.pre('save', function (next) {\n    if (!(this as UserDocument).visibility)\n      (this as UserDocument).visibility = EntityVisibility.Publish;\n    if (!(this as UserDocument).followedCount)\n      (this as UserDocument).followedCount = 0;\n    if (!(this as UserDocument).followerCount)\n      (this as UserDocument).followerCount = 0;\n    next();\n  });\n  UserSchema.methods.follow = async function (followedUser: UserDocument) {\n    const session = await relationshipModel.startSession();\n    await session.withTransaction(async () => {\n      ///TODO !!! Might have to change if relationship is embed\n      const setObject = {\n        user: (this as UserDocument)._id,\n        followedUser: followedUser._id,\n        isFollowPage: false\n      };\n      if ((followedUser as UserDocument).type === UserType.Page)\n        setObject.isFollowPage = true;\n      const result = await relationshipModel\n        .updateOne(\n          {\n            user: (this as UserDocument)._id,\n            followedUser: followedUser._id\n          },\n          {\n            $setOnInsert: setObject\n          },\n          {\n            upsert: true\n          }\n        )\n        .exec();\n      if (result.upserted) {\n        (this as UserDocument).followedCount++;\n        followedUser.followerCount++;\n        await Promise.all([this.save(), followedUser.save()]);\n      }\n    });\n    session.endSession();\n  };\n\n  UserSchema.methods.unfollow = async function (followedUser: UserDocument) {\n    const session = await relationshipModel.startSession();\n    await session.withTransaction(async () => {\n      const result = await relationshipModel\n        .deleteOne({\n          user: this._id,\n          followedUser: followedUser._id\n        })\n        .exec();\n      if (result.deletedCount === 1) {\n        (this as UserDocument).followedCount--;\n        followedUser.followerCount--;\n        await Promise.all([this.save(), followedUser.save()]);\n      }\n    });\n    session.endSession();\n  };\n  return UserSchema;\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserProfile.html":{"url":"interfaces/UserProfile.html","title":"interface - UserProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/schemas/user.schema.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            birthdate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            details\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            educations\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            homeTowns\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            images\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            overview\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            socials\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            websites\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            works\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        birthdate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birthdate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        details:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        educations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        educations:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeTowns\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        homeTowns:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:         ProfileImage\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProfileImage\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overview\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overview:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        socials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        socials:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        websites\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        websites:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        works\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        works:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Document, Model } from 'mongoose';\nimport { Account, AccountDocument } from '../schemas/account.schema';\nimport { CastcleBase } from './base.schema';\nimport {\n  PageDto,\n  PageResponse,\n  PageResponseDto,\n  UserResponseDto\n} from '../dtos/user.dto';\nimport { RelationshipDocument } from './relationship.schema';\nimport { EntityVisibility } from '../dtos/common.dto';\n\nexport type UserDocument = User & IUser;\n\ntype ProfileImage = {\n  avatar?: string;\n  cover?: string;\n};\n\nexport interface UserProfile {\n  birthdate?: string;\n  overview?: string;\n  works?: string[];\n  educations?: string[];\n  homeTowns?: string[];\n  websites?: {\n    website: string;\n    detail: string;\n  }[];\n  socials?: {\n    facebook?: string;\n    twitter?: string;\n    youtube?: string;\n    medium?: string;\n  };\n  details?: string;\n  images?: ProfileImage;\n}\n\nexport enum UserType {\n  People = 'people',\n  Page = 'page'\n}\n\n@Schema({ timestamps: true })\nexport class User extends CastcleBase {\n  @Prop({\n    required: true,\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Account'\n  })\n  ownerAccount: Account;\n\n  /**\n   * This is the same as castcleId\n   * @field this is field displayName\n   */\n  @Prop({ required: true })\n  displayName: string;\n\n  @Prop({ required: true })\n  displayId: string;\n\n  @Prop({ type: Object })\n  profile?: UserProfile;\n\n  @Prop({ required: true })\n  type: string;\n\n  @Prop()\n  verified: boolean;\n\n  @Prop()\n  followerCount: number;\n\n  @Prop()\n  followedCount: number;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\nexport interface IUser extends Document {\n  toUserResponse(): Promise;\n  toPageResponse(): PageResponseDto;\n  follow(user: UserDocument): Promise;\n  unfollow(user: UserDocument): Promise;\n}\n\nexport interface UserModel extends mongoose.Model {\n  covertToUserResponse(user: User | UserDocument): UserResponseDto;\n}\n\nconst _covertToUserResponse = (self: User | UserDocument) => {\n  const selfSocial: any =\n    self.profile && self.profile.socials ? { ...self.profile.socials } : {};\n  if (self.profile && self.profile.websites && self.profile.websites.length > 0)\n    selfSocial.website = self.profile.websites[0].website;\n  return {\n    id: self._id,\n    castcleId: self.displayId,\n    dob: self.profile && self.profile.birthdate ? self.profile.birthdate : null,\n    followers: {\n      count: self.followerCount\n    },\n    following: {\n      count: self.followedCount\n    },\n    images: {\n      avatar:\n        self.profile && self.profile.images && self.profile.images.avatar\n          ? self.profile.images.avatar\n          : 'http://placehold.it/100x100', // TODO !!! need to check S3 about static url\n      cover:\n        self.profile && self.profile.images && self.profile.images.cover\n          ? self.profile.images.cover\n          : 'http://placehold.it/200x200'\n    },\n    overview:\n      self.profile && self.profile.overview ? self.profile.overview : null,\n    links: selfSocial,\n    verified: self.verified ? true : false\n  } as UserResponseDto;\n};\n\nUserSchema.statics.covertToUserResponse = (self: User | UserDocument) =>\n  _covertToUserResponse(self);\n\nUserSchema.methods.toUserResponse = async function () {\n  const self = await (this as UserDocument)\n    .populate('ownerAccount')\n    .execPopulate();\n  const response = _covertToUserResponse(self);\n  response.email = self.ownerAccount.email;\n  const selfSocial: any =\n    self.profile && self.profile.socials ? { ...self.profile.socials } : {};\n  return response;\n};\n\nUserSchema.methods.toPageResponse = function () {\n  return {\n    castcleId: (this as UserDocument).displayId,\n    displayName: (this as UserDocument).displayName,\n    avatar: (this as UserDocument).profile.images.avatar,\n    cover: (this as UserDocument).profile.images.cover,\n    updated: (this as UserDocument).updatedAt.toISOString(),\n    created: (this as UserDocument).createdAt.toISOString()\n  } as PageResponseDto;\n};\n\nexport const UserSchemaFactory = (\n  relationshipModel: Model\n): mongoose.Schema => {\n  /**\n   * Make sure all aggregate counter is 0\n   */\n  UserSchema.pre('save', function (next) {\n    if (!(this as UserDocument).visibility)\n      (this as UserDocument).visibility = EntityVisibility.Publish;\n    if (!(this as UserDocument).followedCount)\n      (this as UserDocument).followedCount = 0;\n    if (!(this as UserDocument).followerCount)\n      (this as UserDocument).followerCount = 0;\n    next();\n  });\n  UserSchema.methods.follow = async function (followedUser: UserDocument) {\n    const session = await relationshipModel.startSession();\n    await session.withTransaction(async () => {\n      ///TODO !!! Might have to change if relationship is embed\n      const setObject = {\n        user: (this as UserDocument)._id,\n        followedUser: followedUser._id,\n        isFollowPage: false\n      };\n      if ((followedUser as UserDocument).type === UserType.Page)\n        setObject.isFollowPage = true;\n      const result = await relationshipModel\n        .updateOne(\n          {\n            user: (this as UserDocument)._id,\n            followedUser: followedUser._id\n          },\n          {\n            $setOnInsert: setObject\n          },\n          {\n            upsert: true\n          }\n        )\n        .exec();\n      if (result.upserted) {\n        (this as UserDocument).followedCount++;\n        followedUser.followerCount++;\n        await Promise.all([this.save(), followedUser.save()]);\n      }\n    });\n    session.endSession();\n  };\n\n  UserSchema.methods.unfollow = async function (followedUser: UserDocument) {\n    const session = await relationshipModel.startSession();\n    await session.withTransaction(async () => {\n      const result = await relationshipModel\n        .deleteOne({\n          user: this._id,\n          followedUser: followedUser._id\n        })\n        .exec();\n      if (result.deletedCount === 1) {\n        (this as UserDocument).followedCount--;\n        followedUser.followerCount--;\n        await Promise.all([this.save(), followedUser.save()]);\n      }\n    });\n    session.endSession();\n  };\n  return UserSchema;\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResponseDto.html":{"url":"classes/UserResponseDto.html","title":"class - UserResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                castcleId\n                            \n                            \n                                dob\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                followed\n                            \n                            \n                                followers\n                            \n                            \n                                following\n                            \n                            \n                                id\n                            \n                            \n                                images\n                            \n                            \n                                links\n                            \n                            \n                                overview\n                            \n                            \n                                verified\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        castcleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dob\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        followed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        followers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Counter\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        following\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Counter\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserImage\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        links\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Link\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        overview\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/user.dto.ts:84\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Pagination } from './common.dto';\n\nclass UserImage {\n  @ApiProperty()\n  avatar: string;\n  @ApiProperty()\n  cover: string;\n}\n\nclass Link {\n  @ApiProperty()\n  facebook?: string;\n\n  @ApiProperty()\n  twitter?: string;\n\n  @ApiProperty()\n  youtube?: string;\n\n  @ApiProperty()\n  medium?: string;\n\n  @ApiProperty()\n  website?: string | null;\n}\n\nclass Counter {\n  @ApiProperty()\n  count: number;\n}\n\nexport class UserResponseDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  castcleId: string;\n\n  @ApiProperty()\n  email?: string;\n\n  @ApiProperty()\n  overview: string | null;\n\n  @ApiProperty()\n  dob: string | null;\n\n  @ApiProperty()\n  images: UserImage;\n\n  @ApiProperty()\n  links: Link;\n\n  @ApiProperty()\n  following: Counter;\n\n  @ApiProperty()\n  followers: Counter;\n\n  @ApiProperty()\n  verified: boolean;\n\n  @ApiProperty()\n  followed: boolean;\n}\n\nexport class UpdateUserDto {\n  @ApiProperty()\n  overview?: string;\n\n  @ApiProperty()\n  dob?: string;\n\n  @ApiProperty()\n  images?: UserImage;\n\n  @ApiProperty()\n  links?: Link;\n}\n\nexport class PageDto {\n  @ApiProperty()\n  castcleId: string;\n\n  @ApiProperty()\n  displayName: string;\n\n  @ApiProperty()\n  avatar: string;\n\n  @ApiProperty()\n  cover: string;\n}\n\nexport class PageResponseDto {\n  @ApiProperty()\n  castcleId: string;\n\n  @ApiProperty()\n  displayName: string;\n\n  @ApiProperty()\n  avatar: string;\n\n  @ApiProperty()\n  cover: string;\n\n  @ApiProperty()\n  updated: string;\n\n  @ApiProperty()\n  created: string;\n}\n\nexport class UpdatePageDto {\n  @ApiProperty()\n  displayName?: string;\n\n  @ApiProperty()\n  avatar?: string;\n\n  @ApiProperty()\n  cover?: string;\n}\n\nexport class PagesResponse {\n  @ApiProperty()\n  payload: PageResponseDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\nexport class PageResponse {\n  @ApiProperty()\n  payload: PageResponseDto;\n}\n\nexport class FollowResponse {\n  @ApiProperty()\n  payload: UserResponseDto[];\n\n  @ApiProperty()\n  pagination: Pagination;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _accountModel\n                            \n                            \n                                    Public\n                                _credentialModel\n                            \n                            \n                                    Public\n                                _relationshipModel\n                            \n                            \n                                    Public\n                                _userModel\n                            \n                            \n                                createPageFromCredential\n                            \n                            \n                                createPageFromUser\n                            \n                            \n                                deactive\n                            \n                            \n                                deleteUserFromId\n                            \n                            \n                                follow\n                            \n                            \n                                getAllPages\n                            \n                            \n                                getFollower\n                            \n                            \n                                getFollowing\n                            \n                            \n                                getUserFromCredential\n                            \n                            \n                                getUserFromId\n                            \n                            \n                                reactive\n                            \n                            \n                                unfollow\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_accountModel: Model, _credentialModel: CredentialModel, _userModel: UserModel, _relationshipModel: Model, contentService: ContentService)\n                    \n                \n                        \n                            \n                                Defined in libs/database/src/lib/services/user.service.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _accountModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _credentialModel\n                                                  \n                                                        \n                                                                        CredentialModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userModel\n                                                  \n                                                        \n                                                                        UserModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _relationshipModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        contentService\n                                                  \n                                                        \n                                                                        ContentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _accountModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectModel('Account')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/user.service.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _credentialModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CredentialModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectModel('Credential')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/user.service.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _relationshipModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectModel('Relationship')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/user.service.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _userModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectModel('User')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/user.service.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createPageFromCredential\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/user.service.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createPageFromUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/user.service.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deactive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/user.service.ts:256\n                        \n                    \n\n            \n                \n                    TODO !!! need to find a way to put in transaction\nDeactivate User account\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                        \n                                    \n                                    \n                                            \n                                                    user\n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUserFromId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/user.service.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        follow\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/user.service.ts:170\n                        \n                    \n\n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                        \n                                    \n                                    \n                                            \n                                                    user\n                                            \n                                            \n                                                    followedUser\n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllPages\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/user.service.ts:149\n                        \n                    \n\n            \n                \n                    get all pages\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                        \n                                    \n                                    \n                                            \n                                                    queryOptions\n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFollower\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/user.service.ts:187\n                        \n                    \n\n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                        \n                                    \n                                    \n                                            \n                                                    user\n                                            \n                                            \n                                                    queryOption\n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFollowing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/user.service.ts:225\n                        \n                    \n\n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                        \n                                    \n                                    \n                                            \n                                                    user\n                                            \n                                            \n                                                    queryOption\n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserFromCredential\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/user.service.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserFromId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/user.service.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reactive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/user.service.ts:322\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unfollow\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/user.service.ts:178\n                        \n                    \n\n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                        \n                                    \n                                    \n                                            \n                                                    user\n                                            \n                                            \n                                                    followedUser\n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/user.service.ts:84\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Model } from 'mongoose';\nimport * as mongoose from 'mongoose';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { AccountDocument } from '../schemas/account.schema';\nimport { CredentialDocument, CredentialModel } from '../schemas';\nimport {\n  UserDocument,\n  UserType,\n  UserModel,\n  User\n} from '../schemas/user.schema';\nimport { RelationshipDocument } from '../schemas/relationship.schema';\nimport { ContentDocument } from '../schemas/content.schema';\nimport { FollowResponse, PageDto, UpdateUserDto } from '../dtos/user.dto';\nimport { CastcleQueryOptions } from '../dtos';\nimport { createPagination } from '../utils/common';\nimport {\n  DEFAULT_QUERY_OPTIONS,\n  EntityVisibility,\n  Pagination\n} from '../dtos/common.dto';\nimport { ContentService } from './content.service';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectModel('Account') public _accountModel: Model,\n    @InjectModel('Credential')\n    public _credentialModel: CredentialModel,\n    @InjectModel('User')\n    public _userModel: UserModel,\n    @InjectModel('Relationship')\n    public _relationshipModel: Model,\n    private contentService: ContentService\n  ) {}\n\n  getUserFromCredential = (credential: CredentialDocument) =>\n    this._userModel\n      .findOne({\n        ownerAccount: credential.account._id,\n        type: UserType.People,\n        visibility: EntityVisibility.Publish\n      })\n      .exec();\n\n  getUserFromId = (id: string) => {\n    try {\n      if (mongoose.Types.ObjectId(id)) {\n        return this._userModel\n          .findOne({\n            _id: id,\n            visibility: EntityVisibility.Publish\n          })\n          .exec();\n      } else return null;\n    } catch (error) {\n      return null;\n    }\n  };\n\n  updateUser = (user: UserDocument, updateUserDto: UpdateUserDto) => {\n    if (!user.profile) user.profile = {};\n    if (updateUserDto.overview) user.profile.overview = updateUserDto.overview;\n    if (updateUserDto.dob) user.profile.birthdate = updateUserDto.dob;\n    if (updateUserDto.links) {\n      if (!user.profile.socials) user.profile.socials = {};\n      const socialNetworks = ['facebook', 'medium', 'twitter', 'youtube'];\n      socialNetworks.forEach((social) => {\n        if (updateUserDto.links[social])\n          user.profile.socials[social] = updateUserDto.links[social];\n        if (updateUserDto.links.website)\n          user.profile.websites = [\n            {\n              website: updateUserDto.links.website,\n              detail: updateUserDto.links.website\n            }\n          ];\n      });\n    }\n    if (updateUserDto.images) {\n      if (!user.profile.images) user.profile.images = {};\n      if (updateUserDto.images.avatar)\n        user.profile.images.avatar = updateUserDto.images.avatar;\n      if (updateUserDto.images.cover)\n        user.profile.images.cover = updateUserDto.images.cover;\n    }\n    console.log('saving dto', updateUserDto);\n\n    console.log('saving website', user.profile.websites);\n    console.log('saving user', user);\n    return user.save();\n  };\n\n  deleteUserFromId = (id: string) =>\n    this._userModel.findByIdAndDelete(id).exec();\n\n  createPageFromCredential = async (\n    credential: CredentialDocument,\n    pageDto: PageDto\n  ) => {\n    const user = await this.getUserFromCredential(credential);\n    return this.createPageFromUser(user, pageDto);\n  };\n\n  createPageFromUser = (user: UserDocument, pageDto: PageDto) => {\n    const newPage = new this._userModel({\n      ownerAccount: user.ownerAccount,\n      type: UserType.Page,\n      displayId: pageDto.castcleId,\n      displayName: pageDto.displayName,\n      profile: {\n        images: {\n          avatar: pageDto.avatar,\n          cover: pageDto.cover\n        }\n      }\n    });\n    return newPage.save();\n  };\n\n  /**\n   * get all pages\n   * @param {CastcleQueryOptions} queryOptions\n   * @returns {Promise}\n   */\n  getAllPages = async (queryOptions: CastcleQueryOptions) => {\n    const pagination = createPagination(\n      queryOptions,\n      await this._userModel.count({ type: UserType.Page })\n    );\n    const itemsQuery = this._userModel\n      .find({ type: UserType.Page })\n      .skip(queryOptions.page - 1)\n      .limit(queryOptions.limit);\n    let items: UserDocument[];\n    if (queryOptions.sortBy.type === 'desc')\n      items = await itemsQuery.sort(`-${queryOptions.sortBy.field}`).exec();\n    else items = await itemsQuery.sort(`${queryOptions.sortBy.field}`).exec();\n    return { items, pagination };\n  };\n  /**\n   *\n   * @param {UserDocument} user\n   * @param {UserDocument} followedUser\n   * @returns {Promise}\n   */\n  follow = async (user: UserDocument, followedUser: UserDocument) =>\n    user.follow(followedUser);\n  /**\n   *\n   * @param {UserDocument} user\n   * @param {UserDocument} followedUser\n   * @returns {Promise}\n   */\n  unfollow = async (user: UserDocument, followedUser: UserDocument) =>\n    user.unfollow(followedUser);\n\n  /**\n   *\n   * @param user\n   * @param queryOption\n   * @returns\n   */\n  getFollower = async (\n    user: UserDocument,\n    queryOption: CastcleQueryOptions = DEFAULT_QUERY_OPTIONS\n  ) => {\n    console.log('-----getFollower----');\n\n    const filter: { followedUser: any; isFollowPage?: boolean } = {\n      followedUser: user._id\n    };\n    console.log('filter', filter);\n    if (queryOption.type)\n      filter.isFollowPage = queryOption.type === UserType.Page ? true : false;\n    let query = this._relationshipModel\n      .find(filter)\n      .skip(queryOption.page - 1)\n      .limit(queryOption.limit)\n      .populate('user');\n    if (queryOption.sortBy.type === 'desc')\n      query = query.sort(`-${queryOption.sortBy.field}`);\n    else query = query.sort(`${queryOption.sortBy.field}`);\n    const totalFollower = await this._relationshipModel.count(filter).exec();\n    const relationships = await query.exec();\n    console.log('total', totalFollower);\n    console.log(relationships);\n    return {\n      items: relationships.map((r) =>\n        this._userModel.covertToUserResponse(r.user)\n      ),\n      pagination: createPagination(queryOption, totalFollower)\n    };\n  };\n\n  /**\n   *\n   * @param user\n   * @param queryOption\n   * @returns\n   */\n  getFollowing = async (\n    user: UserDocument,\n    queryOption: CastcleQueryOptions = DEFAULT_QUERY_OPTIONS\n  ) => {\n    const filter: { user: any; isFollowPage?: boolean } = { user: user._id };\n    if (queryOption.type)\n      filter.isFollowPage = queryOption.type === UserType.Page ? true : false;\n    let query = this._relationshipModel\n      .find(filter)\n      .skip(queryOption.page - 1)\n      .limit(queryOption.limit);\n    //      .populate('followedUser');\n    if (queryOption.sortBy.type === 'desc')\n      query = query.sort(`-${queryOption.sortBy.field}`);\n    else query = query.sort(`${queryOption.sortBy.field}`);\n    const totalFollowing = await this._relationshipModel.count(filter).exec();\n    const relationships = await query.exec();\n    return {\n      items: relationships.map((r) =>\n        this._userModel.covertToUserResponse(r.followedUser)\n      ),\n      pagination: createPagination(queryOption, totalFollowing)\n    };\n  };\n\n  /**\n   * TODO !!! need to find a way to put in transaction\n   * Deactivate User account\n   * @param {UserDocument} user\n   * @returns {UserDocument}\n   */\n  deactive = async (user: UserDocument) => {\n    //all page from user has to be delete\n    if (user.type === UserType.People) {\n      //check if he has a page;\n      //each page has to be deactivated\n      const pages = await this._userModel\n        .find({ ownerAccount: user.ownerAccount, type: UserType.Page })\n        .exec();\n      const promiseDeactivatePages = pages.map((p) => this.deactive(p));\n      await Promise.all(promiseDeactivatePages);\n      //all content from page of user has to be delete\n    }\n    //TODO !!! will move this logic to queue\n    /*\n    //all content form user has to be delete\n    //TODO !!! this should move to cron or something to do at background and add pagination\n    const contents = await this.contentService._contentModel\n      .find({ 'author.id': user._id })\n      .exec();\n    const promiseRemoveContents: Promise[] = contents.map(\n      (contentItem) => this.contentService.deleteContentFromId(contentItem._id)\n    );\n    await Promise.all(promiseRemoveContents);\n\n    //remove all engagements (like) Aggregator that this user do (quote/requote agg) already remove with deleteContentFromId()\n    //TODO !!! need to improve performance by bypass the engagement save hook and use updateMany instead\n    // but need to find a way to get all engagement contents to be more effective\n    const engagements = await this.contentService._engagementModel\n      .find({ user: user._id, visibility: EntityVisibility.Publish })\n      .exec();\n    const promiseHideEngagements = engagements.map((engagement) => {\n      engagement.visibility = EntityVisibility.Hidden;\n      return engagement.save();\n    });\n    await Promise.all(promiseHideEngagements);\n    //update follower / followee aggregator\n    const relationships = await this._relationshipModel\n      .find({ user: user._id })\n      .populate('followedUser')\n      .exec();\n    //TODO !!! need to improve performance\n    const promiseUpdateFollower = relationships.map((r) =>\n      this._userModel\n        .updateOne(r._id, {\n          $inc: {\n            followerCount: -1\n          }\n        })\n        .exec()\n    );\n    await Promise.all(promiseUpdateFollower);\n    */\n    //change status to delete\n    user.visibility = EntityVisibility.Deleted;\n    const userResult = user.save();\n    //deactive userAccount\n    if (user.type === UserType.Page)\n      await this._accountModel.updateOne(\n        { _id: user.ownerAccount },\n        {\n          visibility: EntityVisibility.Deleted\n        }\n      );\n    return userResult;\n  };\n\n  reactive = async (user: UserDocument) => {\n    //all page from user has to be delete\n    if (user.type === UserType.People) {\n      //check if he has a page;\n      //each page has to be deactivated\n      const pages = await this._userModel\n        .find({ ownerAccount: user.ownerAccount, type: UserType.Page })\n        .exec();\n      const promiseReactivatePages = pages.map((p) => this.reactive(p));\n      await Promise.all(promiseReactivatePages);\n      //all content from page of user has to be delete\n    }\n    //TODO !!! will move this logic to queue\n    /*\n    //all content form user has to be delete\n    //TODO !!! this should move to cron or something to do at background and add pagination\n    const contents = await this.contentService._contentModel\n      .find({ 'author.id': user._id })\n      .exec();\n    const promiseReactiveContents: Promise[] = contents.map(\n      (contentItem) => this.contentService.recoverContentFromId(contentItem._id)\n    );\n    await Promise.all(promiseReactiveContents);\n\n    //remove all engagements (like) Aggregator that this user do (quote/requote agg) already remove with deleteContentFromId()\n    //TODO !!! need to improve performance by bypass the engagement save hook and use updateMany instead\n    // but need to find a way to get all engagement contents to be more effective\n    const engagements = await this.contentService._engagementModel\n      .find({ user: user._id, visibility: EntityVisibility.Publish })\n      .exec();\n    const promisePublishEngagements = engagements.map((engagement) => {\n      engagement.visibility = EntityVisibility.Publish;\n      return engagement.save();\n    });\n    await Promise.all(promisePublishEngagements);\n    //update follower / followee aggregator\n    const relationships = await this._relationshipModel\n      .find({ user: user._id })\n      .populate('followedUser')\n      .exec();\n    //TODO !!! need to improve performance\n    const promiseUpdateFollower = relationships.map((r) =>\n      this._userModel\n        .updateOne(r._id, {\n          $inc: {\n            followerCount: 1\n          }\n        })\n        .exec()\n    );\n    await Promise.all(promiseUpdateFollower);\n    */\n    //change status to delete\n    user.visibility = EntityVisibility.Publish;\n    //deactive userAccount\n    if (user.type === UserType.Page)\n      await this._accountModel.updateOne(\n        { _id: user.ownerAccount },\n        {\n          visibility: EntityVisibility.Publish\n        }\n      );\n    return user.save();\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilsAwsModule.html":{"url":"modules/UtilsAwsModule.html","title":"module - UtilsAwsModule","body":"\n                   \n\n\n\n\n    Modules\n    UtilsAwsModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/utils/aws/src/lib/utils-aws.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Image } from './image';\nimport { Uploader, UploadOptions } from './uploader';\n\n@Module({\n  controllers: [],\n  providers: [],\n  exports: []\n})\nexport class UtilsAwsModule {}\n\nexport { Image, Uploader, UploadOptions };\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilsExceptionModule.html":{"url":"modules/UtilsExceptionModule.html","title":"module - UtilsExceptionModule","body":"\n                   \n\n\n\n\n    Modules\n    UtilsExceptionModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/utils/exception/src/lib/utils-exception.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright (c) 2021, Castcle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 3 only, as\n * published by the Free Software Foundation.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n * version 3 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 3 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Castcle, 22 Phet Kasem 47/2 Alley, Bang Khae, Bangkok,\n * Thailand 10160, or visit www.castcle.com if you need additional information\n * or have any questions.\n */\nimport { Module } from '@nestjs/common';\nimport { CastcleException, CastcleStatus } from './castcle.exception';\n\n@Module({\n  controllers: [],\n  providers: [],\n  exports: []\n})\nexport class UtilsExceptionModule {}\n\nexport { CastcleException, CastcleStatus };\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilsInterceptorsModule.html":{"url":"modules/UtilsInterceptorsModule.html","title":"module - UtilsInterceptorsModule","body":"\n                   \n\n\n\n\n    Modules\n    UtilsInterceptorsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UtilsInterceptorsModule\n\n\n\ncluster_UtilsInterceptorsModule_imports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nUtilsInterceptorsModule\n\nUtilsInterceptorsModule\n\nUtilsInterceptorsModule -->\n\nDatabaseModule->UtilsInterceptorsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/utils/interceptors/src/lib/utils-interceptors.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright (c) 2021, Castcle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 3 only, as\n * published by the Free Software Foundation.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n * version 3 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 3 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Castcle, 22 Phet Kasem 47/2 Alley, Bang Khae, Bangkok,\n * Thailand 10160, or visit www.castcle.com if you need additional information\n * or have any questions.\n */\nimport { Module } from '@nestjs/common';\nimport { DatabaseModule } from '@castcle-api/database';\nimport {\n  HeadersInterceptor,\n  HeadersRequest\n} from './headers/headers.interceptor';\nimport { TokenInterceptor, TokenRequest } from './token/token.interceptor';\nimport {\n  ContentInterceptor,\n  ContentsInterceptor\n} from './contents/contents.interceptor';\nimport {\n  CredentialInterceptor,\n  CredentialRequest\n} from './credential/credential.interceptor';\n\n@Module({\n  imports: [DatabaseModule],\n  controllers: [],\n  providers: [],\n  exports: []\n})\nexport class UtilsInterceptorsModule {}\n\nexport {\n  HeadersInterceptor,\n  HeadersRequest,\n  TokenInterceptor,\n  CredentialInterceptor,\n  CredentialRequest,\n  TokenRequest,\n  ContentInterceptor,\n  ContentsInterceptor\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilsModule.html":{"url":"modules/UtilsModule.html","title":"module - UtilsModule","body":"\n                   \n\n\n\n\n    Modules\n    UtilsModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/utils/src/lib/utils.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright (c) 2021, Castcle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 3 only, as\n * published by the Free Software Foundation.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n * version 3 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 3 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Castcle, 22 Phet Kasem 47/2 Alley, Bang Khae, Bangkok,\n * Thailand 10160, or visit www.castcle.com if you need additional information\n * or have any questions.\n */\nimport { Module } from '@nestjs/common';\nimport { Token } from './token';\nimport { Password } from './password';\nimport { CastcleName } from './castcle-name';\nimport { Host } from './host';\n\n@Module({\n  imports: [],\n  controllers: [],\n  providers: [],\n  exports: []\n})\nexport class UtilsModule {}\n\nexport { Token, Password, CastcleName, Host };\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilsPipesModule.html":{"url":"modules/UtilsPipesModule.html","title":"module - UtilsPipesModule","body":"\n                   \n\n\n\n\n    Modules\n    UtilsPipesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UtilsPipesModule\n\n\n\ncluster_UtilsPipesModule_providers\n\n\n\n\nLimitPipe\n\nLimitPipe\n\n\n\nUtilsPipesModule\n\nUtilsPipesModule\n\nUtilsPipesModule -->\n\nLimitPipe->UtilsPipesModule\n\n\n\n\n\nPagePipe\n\nPagePipe\n\nUtilsPipesModule -->\n\nPagePipe->UtilsPipesModule\n\n\n\n\n\nSortByPipe\n\nSortByPipe\n\nUtilsPipesModule -->\n\nSortByPipe->UtilsPipesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/utils/pipes/src/lib/utils-pipes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LimitPipe\n                        \n                        \n                            PagePipe\n                        \n                        \n                            SortByPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright (c) 2021, Castcle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 3 only, as\n * published by the Free Software Foundation.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n * version 3 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 3 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Castcle, 22 Phet Kasem 47/2 Alley, Bang Khae, Bangkok,\n * Thailand 10160, or visit www.castcle.com if you need additional information\n * or have any questions.\n */\nimport { Module } from '@nestjs/common';\nimport {\n  SortByPipe,\n  PagePipe,\n  LimitPipe,\n  ContentTypePipe,\n  SortByEnum\n} from './query/query.pipe';\n\n@Module({\n  controllers: [],\n  providers: [SortByPipe, PagePipe, LimitPipe],\n  exports: [SortByPipe, PagePipe, LimitPipe]\n})\nexport class UtilsPipesModule {}\n\nexport { SortByPipe, PagePipe, LimitPipe, ContentTypePipe, SortByEnum };\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UxEngagement.html":{"url":"classes/UxEngagement.html","title":"class - UxEngagement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UxEngagement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/schemas/uxengagement.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CastcleBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                client\n                            \n                            \n                                eventData\n                            \n                            \n                                eventType\n                            \n                            \n                                feedItemId\n                            \n                            \n                                platform\n                            \n                            \n                                screenId\n                            \n                            \n                                screenInstance\n                            \n                            \n                                target\n                            \n                            \n                                targetId\n                            \n                            \n                                timestamp\n                            \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                visibility\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Account\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Account'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/uxengagement.schema.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        client\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/uxengagement.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/uxengagement.schema.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/uxengagement.schema.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        feedItemId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/uxengagement.schema.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        platform\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/uxengagement.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        screenId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/uxengagement.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        screenInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/uxengagement.schema.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/uxengagement.schema.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/uxengagement.schema.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timestamp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/schemas/uxengagement.schema.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        visibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityVisibility\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CastcleBase\n\n                            \n                        \n                    \n                        \n                                Defined in         CastcleBase:37\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Document } from 'mongoose';\nimport { Account } from './account.schema';\nimport { CastcleBase } from './base.schema';\n\nexport type UxEngagementDocument = UxEngagement & Document;\n\n@Schema({ timestamps: true })\nexport class UxEngagement extends CastcleBase {\n  @Prop()\n  platform: string;\n\n  @Prop()\n  client: string;\n\n  @Prop({\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Account'\n  })\n  account: Account;\n\n  @Prop()\n  screenId: string;\n\n  @Prop({ type: Object })\n  screenInstance: any;\n\n  @Prop()\n  feedItemId: string;\n\n  @Prop()\n  target: string;\n\n  @Prop()\n  targetId: string;\n\n  @Prop()\n  eventType: string;\n\n  @Prop({ type: Object })\n  eventData: any;\n\n  @Prop()\n  timestamp: Date;\n}\n\nexport const UxEngagementSchema = SchemaFactory.createForClass(UxEngagement);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UxEngagementBody.html":{"url":"classes/UxEngagementBody.html","title":"class - UxEngagementBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UxEngagementBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/ux.engagement.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountId\n                            \n                            \n                                client\n                            \n                            \n                                eventData\n                            \n                            \n                                eventType\n                            \n                            \n                                feedItemId\n                            \n                            \n                                platform\n                            \n                            \n                                screenId\n                            \n                            \n                                screenInstance\n                            \n                            \n                                target\n                            \n                            \n                                targetId\n                            \n                            \n                                timestamp\n                            \n                            \n                                uxSessionId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accountId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/ux.engagement.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        client\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/ux.engagement.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/ux.engagement.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/ux.engagement.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        feedItemId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/ux.engagement.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        platform\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/ux.engagement.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        screenId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/ux.engagement.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        screenInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/ux.engagement.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/ux.engagement.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/ux.engagement.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timestamp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/ux.engagement.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uxSessionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/ux.engagement.dto.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nexport class UxEngagementBody {\n  @ApiProperty()\n  'platform': string;\n  @ApiProperty()\n  'client': string;\n  @ApiProperty()\n  'accountId': string;\n  @ApiProperty()\n  'uxSessionId': string;\n  @ApiProperty()\n  'screenId': string;\n  @ApiProperty()\n  'screenInstance': any;\n  @ApiProperty()\n  'feedItemId': string;\n  @ApiProperty()\n  'target': string;\n  @ApiProperty()\n  'targetId': string;\n  @ApiProperty()\n  'eventType': string;\n  @ApiProperty()\n  'eventData': any;\n  @ApiProperty()\n  'timestamp': string; //date time stamp\n}\n\nexport class UxEngagementDto {\n  platform: string;\n  client: string;\n  account: any; //will be accountId\n  screenId: string;\n  screenInstance: any;\n  feedItemId: string;\n  target: string;\n  targetId: string;\n  eventType: string;\n  eventData: any;\n  timestamp: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UxEngagementDto.html":{"url":"classes/UxEngagementDto.html","title":"class - UxEngagementDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UxEngagementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/dtos/ux.engagement.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                client\n                            \n                            \n                                eventData\n                            \n                            \n                                eventType\n                            \n                            \n                                feedItemId\n                            \n                            \n                                platform\n                            \n                            \n                                screenId\n                            \n                            \n                                screenInstance\n                            \n                            \n                                target\n                            \n                            \n                                targetId\n                            \n                            \n                                timestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/ux.engagement.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        client\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/ux.engagement.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/ux.engagement.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/ux.engagement.dto.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        feedItemId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/ux.engagement.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        platform\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/ux.engagement.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        screenId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/ux.engagement.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        screenInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/ux.engagement.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/ux.engagement.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/ux.engagement.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timestamp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/dtos/ux.engagement.dto.ts:62\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nexport class UxEngagementBody {\n  @ApiProperty()\n  'platform': string;\n  @ApiProperty()\n  'client': string;\n  @ApiProperty()\n  'accountId': string;\n  @ApiProperty()\n  'uxSessionId': string;\n  @ApiProperty()\n  'screenId': string;\n  @ApiProperty()\n  'screenInstance': any;\n  @ApiProperty()\n  'feedItemId': string;\n  @ApiProperty()\n  'target': string;\n  @ApiProperty()\n  'targetId': string;\n  @ApiProperty()\n  'eventType': string;\n  @ApiProperty()\n  'eventData': any;\n  @ApiProperty()\n  'timestamp': string; //date time stamp\n}\n\nexport class UxEngagementDto {\n  platform: string;\n  client: string;\n  account: any; //will be accountId\n  screenId: string;\n  screenInstance: any;\n  feedItemId: string;\n  target: string;\n  targetId: string;\n  eventType: string;\n  eventData: any;\n  timestamp: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UxEngagementService.html":{"url":"injectables/UxEngagementService.html","title":"injectable - UxEngagementService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UxEngagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/lib/services/uxengagement.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _accountModel\n                            \n                            \n                                    Public\n                                _uxEngagementModel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                track\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_accountModel: Model, _uxEngagementModel: Model)\n                    \n                \n                        \n                            \n                                Defined in libs/database/src/lib/services/uxengagement.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _accountModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _uxEngagementModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        track\n                        \n                    \n                \n            \n            \n                \n                    \n                    track(info: UxEngagementBody)\n                \n            \n\n\n            \n                \n                    Defined in libs/database/src/lib/services/uxengagement.service.ts:46\n                \n            \n\n\n            \n                \n                    track data from info to UxEngagement collection by convert it to UxEnagementDto\nconvert timestamp to Date time\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    info\n                                    \n                                                UxEngagementBody\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        return EngagementUx Document if could save\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _accountModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectModel('Account')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/uxengagement.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _uxEngagementModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Model\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectModel('UxEngagement')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/lib/services/uxengagement.service.ts:37\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Model } from 'mongoose';\nimport { AccountDocument } from '../schemas/account.schema';\nimport { UxEngagementBody, UxEngagementDto } from '../dtos/ux.engagement.dto';\nimport { UxEngagementDocument } from '../schemas/uxengagement.schema';\n\n@Injectable()\nexport class UxEngagementService {\n  constructor(\n    @InjectModel('Account') public _accountModel: Model,\n    @InjectModel('UxEngagement')\n    public _uxEngagementModel: Model\n  ) {}\n\n  /**\n   * track data from info to UxEngagement collection by convert it to UxEnagementDto\n   * convert timestamp to Date time\n   * @param {UxEngagementBody} info\n   * @returns {UxEngagementDocument} return EngagementUx Document if could save\n   */\n  async track(info: UxEngagementBody) {\n    const uxDto = {\n      ...info,\n      account: mongoose.Types.ObjectId(info.accountId),\n      timestamp: new Date(Number(info.timestamp))\n    } as UxEngagementDto;\n    const createResult = await new this._uxEngagementModel(uxDto).save();\n    return createResult;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VerificationPasswordBody.html":{"url":"classes/VerificationPasswordBody.html","title":"class - VerificationPasswordBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VerificationPasswordBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/authentications/src/app/dtos/dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/authentications/src/app/dtos/dto.ts:107\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nexport class GuestLoginDto {\n  @ApiProperty()\n  deviceUUID: string;\n}\n\nexport class CheckEmailExistDto {\n  @ApiProperty()\n  email: string;\n}\n\nexport class LoginDto {\n  @ApiProperty()\n  username: string;\n  @ApiProperty()\n  password: string;\n}\n\nclass RegisterPayload {\n  @ApiProperty()\n  email: string;\n  @ApiProperty()\n  password: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  castcleId: string;\n}\n\nexport class RegisterByEmailDto {\n  @ApiProperty()\n  channel: 'email';\n  @ApiProperty()\n  payload: RegisterPayload;\n}\n\nexport class CheckIdExistDto {\n  @ApiProperty()\n  castcleId: string;\n}\n\nexport class TokenResponse {\n  @ApiProperty()\n  accessToken: string;\n\n  @ApiProperty()\n  refreshToken: string;\n}\n\nexport class CheckingResponse {\n  @ApiProperty()\n  message: string;\n\n  @ApiProperty()\n  payload: {\n    exist: boolean;\n  };\n}\n\nexport class RefreshTokenResponse {\n  @ApiProperty()\n  accessToken: string;\n}\n\nclass suggestCastcleIdPayload {\n  @ApiProperty()\n  suggestCastcleId: string;\n}\n\nexport class SuggestCastcleIdReponse {\n  @ApiProperty()\n  payload: suggestCastcleIdPayload;\n}\n\nexport class ChangePasswordBody {\n  @ApiProperty()\n  refCode: string;\n  @ApiProperty()\n  newPassword: string;\n}\n\nexport class VerificationPasswordBody {\n  @ApiProperty()\n  password: string;\n}\n\nexport class VerificationPasswordResponse {\n  @ApiProperty()\n  refCode: string;\n  @ApiProperty()\n  expiresTime: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VerificationPasswordResponse.html":{"url":"classes/VerificationPasswordResponse.html","title":"class - VerificationPasswordResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VerificationPasswordResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/authentications/src/app/dtos/dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expiresTime\n                            \n                            \n                                refCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        expiresTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/authentications/src/app/dtos/dto.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/authentications/src/app/dtos/dto.ts:112\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nexport class GuestLoginDto {\n  @ApiProperty()\n  deviceUUID: string;\n}\n\nexport class CheckEmailExistDto {\n  @ApiProperty()\n  email: string;\n}\n\nexport class LoginDto {\n  @ApiProperty()\n  username: string;\n  @ApiProperty()\n  password: string;\n}\n\nclass RegisterPayload {\n  @ApiProperty()\n  email: string;\n  @ApiProperty()\n  password: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  castcleId: string;\n}\n\nexport class RegisterByEmailDto {\n  @ApiProperty()\n  channel: 'email';\n  @ApiProperty()\n  payload: RegisterPayload;\n}\n\nexport class CheckIdExistDto {\n  @ApiProperty()\n  castcleId: string;\n}\n\nexport class TokenResponse {\n  @ApiProperty()\n  accessToken: string;\n\n  @ApiProperty()\n  refreshToken: string;\n}\n\nexport class CheckingResponse {\n  @ApiProperty()\n  message: string;\n\n  @ApiProperty()\n  payload: {\n    exist: boolean;\n  };\n}\n\nexport class RefreshTokenResponse {\n  @ApiProperty()\n  accessToken: string;\n}\n\nclass suggestCastcleIdPayload {\n  @ApiProperty()\n  suggestCastcleId: string;\n}\n\nexport class SuggestCastcleIdReponse {\n  @ApiProperty()\n  payload: suggestCastcleIdPayload;\n}\n\nexport class ChangePasswordBody {\n  @ApiProperty()\n  refCode: string;\n  @ApiProperty()\n  newPassword: string;\n}\n\nexport class VerificationPasswordBody {\n  @ApiProperty()\n  password: string;\n}\n\nexport class VerificationPasswordResponse {\n  @ApiProperty()\n  refCode: string;\n  @ApiProperty()\n  expiresTime: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.4\n        \n            @nestjs/core : ^8.0.4\n        \n            @nestjs/mongoose : ^8.0.0\n        \n            @nestjs/platform-express : ^8.0.4\n        \n            @nestjs/swagger : ^5.0.4\n        \n            aws-sdk : ^2.965.0\n        \n            bcrypt : ^5.0.1\n        \n            jsonwebtoken : ^8.5.1\n        \n            moment : ^2.29.1\n        \n            mongoose : ^5.13.7\n        \n            nodemailer : ^6.6.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.1.6\n        \n            tslib : ^2.0.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AccountActivationType   (libs/.../accountActivation.schema.ts)\n                        \n                        \n                            AccountAuthenIdType   (libs/.../accountAuthenId.schema.ts)\n                        \n                        \n                            AccountRole   (libs/.../account.schema.ts)\n                        \n                        \n                            CastcleStatus   (libs/.../castcle.exception.ts)\n                        \n                        \n                            CircleType   (libs/.../circle.schema.ts)\n                        \n                        \n                            ContentType   (libs/.../content.dto.ts)\n                        \n                        \n                            EngagementType   (libs/.../engagement.schema.ts)\n                        \n                        \n                            EntityVisibility   (libs/.../common.dto.ts)\n                        \n                        \n                            OtpObjective   (libs/.../otp.schema.ts)\n                        \n                        \n                            SortByEnum   (libs/.../query.pipe.ts)\n                        \n                        \n                            UserType   (libs/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/database/src/lib/schemas/accountActivation.schema.ts\n    \n        \n            \n                \n                    \n                        \n                        AccountActivationType\n                    \n                \n                        \n                            \n                                 Email\n                            \n                        \n                        \n                            \n                                Value : email\n                            \n                        \n                        \n                            \n                                 Mobile\n                            \n                        \n                        \n                            \n                                Value : mobile\n                            \n                        \n            \n        \n\n    libs/database/src/lib/schemas/accountAuthenId.schema.ts\n    \n        \n            \n                \n                    \n                        \n                        AccountAuthenIdType\n                    \n                \n                        \n                            \n                                 Twitter\n                            \n                        \n                        \n                            \n                                Value : twitter\n                            \n                        \n                        \n                            \n                                 Facebook\n                            \n                        \n                        \n                            \n                                Value : facebook\n                            \n                        \n                        \n                            \n                                 Google\n                            \n                        \n                        \n                            \n                                Value : google\n                            \n                        \n                        \n                            \n                                 Telegram\n                            \n                        \n                        \n                            \n                                Value : telegram\n                            \n                        \n            \n        \n\n    libs/database/src/lib/schemas/account.schema.ts\n    \n        \n            \n                \n                    \n                        \n                        AccountRole\n                    \n                \n                        \n                            \n                                 Member\n                            \n                        \n                        \n                            \n                                Value : member\n                            \n                        \n                        \n                            \n                                 Guest\n                            \n                        \n                        \n                            \n                                Value : guest\n                            \n                        \n            \n        \n\n    libs/utils/exception/src/lib/castcle.exception.ts\n    \n        \n            \n                \n                    \n                        \n                        CastcleStatus\n                    \n                \n                        \n                            \n                                 REQUEST_URL_NOT_FOUND\n                            \n                        \n                        \n                            \n                                Value : 1001\n                            \n                        \n                        \n                            \n                                 MISSING_AUTHORIZATION_HEADER\n                            \n                        \n                        \n                            \n                                Value : 1002\n                            \n                        \n                        \n                            \n                                 INVALID_ACCESS_TOKEN\n                            \n                        \n                        \n                            \n                                Value : 1003\n                            \n                        \n                        \n                            \n                                 INVALID_REFRESH_TOKEN\n                            \n                        \n                        \n                            \n                                Value : 1004\n                            \n                        \n                        \n                            \n                                 INVALID_FORMAT\n                            \n                        \n                        \n                            \n                                Value : 1005\n                            \n                        \n                        \n                            \n                                 UPLOAD_FAILED\n                            \n                        \n                        \n                            \n                                Value : 1006\n                            \n                        \n                        \n                            \n                                 FORBIDDEN_REQUEST\n                            \n                        \n                        \n                            \n                                Value : 1007\n                            \n                        \n                        \n                            \n                                 INVLAID_AUTH_TOKEN\n                            \n                        \n                        \n                            \n                                Value : 3001\n                            \n                        \n                        \n                            \n                                 INVALID_EMAIL_OR_PASSWORD\n                            \n                        \n                        \n                            \n                                Value : 3002\n                            \n                        \n                        \n                            \n                                 INVALID_EMAIL\n                            \n                        \n                        \n                            \n                                Value : 3003\n                            \n                        \n                        \n                            \n                                 INVALID_PHONE_NUMBER\n                            \n                        \n                        \n                            \n                                Value : 3004\n                            \n                        \n                        \n                            \n                                 PAYLOAD_CHANNEL_MISMATCH\n                            \n                        \n                        \n                            \n                                Value : 3005\n                            \n                        \n                        \n                            \n                                 EMAIL_OR_PHONE_NOTFOUND\n                            \n                        \n                        \n                            \n                                Value : 3006\n                            \n                        \n                        \n                            \n                                 PLEASE_TRY_AGAIN\n                            \n                        \n                        \n                            \n                                Value : 3007\n                            \n                        \n                        \n                            \n                                 INVALID_OTP\n                            \n                        \n                        \n                            \n                                Value : 3008\n                            \n                        \n                        \n                            \n                                 EXPIRED_OTP\n                            \n                        \n                        \n                            \n                                Value : 3009\n                            \n                        \n                        \n                            \n                                 LOCKED_OTP\n                            \n                        \n                        \n                            \n                                Value : 3010\n                            \n                        \n                        \n                            \n                                 INVALID_PASSWORD\n                            \n                        \n                        \n                            \n                                Value : 3011\n                            \n                        \n                        \n                            \n                                 INVLAID_REFCODE\n                            \n                        \n                        \n                            \n                                Value : 3012\n                            \n                        \n                        \n                            \n                                 INVALID_ROLE\n                            \n                        \n                        \n                            \n                                Value : 3013\n                            \n                        \n                        \n                            \n                                 EMAIL_OR_PHONE_IS_EXIST\n                            \n                        \n                        \n                            \n                                Value : 3014\n                            \n                        \n                        \n                            \n                                 PAGE_IS_EXIST\n                            \n                        \n                        \n                            \n                                Value : 3015\n                            \n                        \n                        \n                            \n                                 USER_NAME_IS_EXIST\n                            \n                        \n                        \n                            \n                                Value : 3016\n                            \n                        \n                        \n                            \n                                 USER_ID_IS_EXIST\n                            \n                        \n                        \n                            \n                                Value : 3017\n                            \n                        \n                        \n                            \n                                 FEATURE_NOT_EXIST\n                            \n                        \n                        \n                            \n                                Value : 5001\n                            \n                        \n                        \n                            \n                                 PAYLOAD_TYPE_MISMATCH\n                            \n                        \n                        \n                            \n                                Value : 5002\n                            \n                        \n            \n        \n\n    libs/database/src/lib/schemas/circle.schema.ts\n    \n        \n            \n                \n                    \n                        \n                        CircleType\n                    \n                \n                        \n                            \n                                 Default\n                            \n                        \n                        \n                            \n                                Value : default\n                            \n                        \n                        \n                            \n                                 Topic\n                            \n                        \n                        \n                            \n                                Value : Topic\n                            \n                        \n            \n        \n\n    libs/database/src/lib/dtos/content.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        ContentType\n                    \n                \n                        \n                            \n                                 Short\n                            \n                        \n                        \n                            \n                                Value : short\n                            \n                        \n                        \n                            \n                                 Blog\n                            \n                        \n                        \n                            \n                                Value : blog\n                            \n                        \n                        \n                            \n                                 Image\n                            \n                        \n                        \n                            \n                                Value : image\n                            \n                        \n                        \n                            \n                                 Recast\n                            \n                        \n                        \n                            \n                                Value : recast\n                            \n                        \n                        \n                            \n                                 Quote\n                            \n                        \n                        \n                            \n                                Value : quote\n                            \n                        \n            \n        \n\n    libs/database/src/lib/schemas/engagement.schema.ts\n    \n        \n            \n                \n                    \n                        \n                        EngagementType\n                    \n                \n                        \n                            \n                                 Like\n                            \n                        \n                        \n                            \n                                Value : like\n                            \n                        \n                        \n                            \n                                 Recast\n                            \n                        \n                        \n                            \n                                Value : recast\n                            \n                        \n                        \n                            \n                                 Quote\n                            \n                        \n                        \n                            \n                                Value : quote\n                            \n                        \n                        \n                            \n                                 Comment\n                            \n                        \n                        \n                            \n                                Value : comment\n                            \n                        \n            \n        \n\n    libs/database/src/lib/dtos/common.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        EntityVisibility\n                    \n                \n                        \n                            \n                                 Hidden\n                            \n                        \n                        \n                            \n                                Value : hidden\n                            \n                        \n                        \n                            \n                                 Publish\n                            \n                        \n                        \n                            \n                                Value : publish\n                            \n                        \n                        \n                            \n                                 Deleted\n                            \n                        \n                        \n                            \n                                Value : deleted\n                            \n                        \n            \n        \n\n    libs/database/src/lib/schemas/otp.schema.ts\n    \n        \n            \n                \n                    \n                        \n                        OtpObjective\n                    \n                \n                        \n                            \n                                 ChangePassword\n                            \n                        \n                        \n                            \n                                Value : changepassword\n                            \n                        \n            \n        \n\n    libs/utils/pipes/src/lib/query/query.pipe.ts\n    \n        \n            \n                \n                    \n                        \n                        SortByEnum\n                    \n                \n                        \n                            \n                                 Desc\n                            \n                        \n                        \n                            \n                                Value : desc\n                            \n                        \n                        \n                            \n                                 Asc\n                            \n                        \n                        \n                            \n                                Value : asc\n                            \n                        \n            \n        \n\n    libs/database/src/lib/schemas/user.schema.ts\n    \n        \n            \n                \n                    \n                        \n                        UserType\n                    \n                \n                        \n                            \n                                 People\n                            \n                        \n                        \n                            \n                                Value : people\n                            \n                        \n                        \n                            \n                                 Page\n                            \n                        \n                        \n                            \n                                Value : page\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/authentications/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/engagements/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/backgrounds/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/contents/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/bases/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/metadata/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/users/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCastcle API\nA decentralized social media for everyone\n\nThis is a source code repository of Castcle Platform's backend micro services.\nAll works and source files published in this repository are published under GNU AGPLv3 license terms.\nAbout \nOur first mission is to create a fair social media by decentralizing values created on the platform back to the hands of whom it might belong to. We believe that everyone plays a crucial role in contributing values to the platform, for example, creating contents, giving feedbacks on those contents by clicking on LIKE button, etc. Data generated by every single user will benefit the platform --the community-- as a whole. Thus, the users should earn some benefits and own the community that they help building up as well. Castcle will reward users by distributing CAST token to each contribution they made e.g. feed reading, content creating and content farming. This makes every user beneficial from the success of Castcle platform by holding CAST token as a share. Ultimately, in the long run, anyone can be an owner of Castcle platform proportionated to the values they created on this platform.\nPhilosophy\nDON'T - Decentralize Everything\nEventhough we believe in user rights and free speeches, decentralizing content custodian can cause more harm than good. For example, violence VDOs, photos demonstrating drug uses, mis/disinformation contents, might affect users without discretion, especially in youth users. Hence, by disrupting the power of content custodian, making no one can take down violated contents, will apparently cause more harm to the society than good. This is why we're not focusing on building up a non-content-custodian social network platform.\nDO - Decentralize the Ownership\nAs the rise of blockchain technology, making anyone can trust on digital assets, aka TOKEN, will play a crucial role in making social media fairer. As stated in About section above, we believe that decentralizing platform ownership to users proportionated to the values they created is a key to create a successful and more sustainable ecosystem.\nWhitepaper\nFor Tokenomics, Key Features, Key Ideas, and more Technical Issues, please see our WHITEPAPER and PITCH DECK for more details.\nGetting Started\nPrerequisites\n\nDownload and install npm from https://nodejs.org/en/download/.\n\nDownload and install git tool you prefer. If you don't have one, try Github Desktop.\n\nClone, aka Check out, this repository to your local  by following these steps.\n\nNavigate to  by using Cmd (in Windows) or Terminal (in MacOS).\n\nInstall dependency packages by executing:\n  > npm install\n\nRunning Dev Server\n\nYou can run the Castcle's API backend server by executing:  > npm run start\n\nUnit Testing\n\nTo run ALL unit tests:\n  > npm run test\nTo run EACH micro service's unit tests:\n  > npm run test:For example, npm run test:feeds for 'feeds' service. You can see all available test:s in package.json.\n\n\nBuilding\n\nTo build ALL micro services:\n  > npm run build\nTo build EACH micro service:\n  > npm run build:For example, npm run build:authentications for 'authentications' service. You can see all available build:s in package.json.\n\n\nDeploying\n\nDockerize the app by running Dockerfile.* files in  using > docker build.\nSee: docker build\n\nDeploy Castcle's micro services using docker image generated from step above via > docker run on your local computer or in any container environments.\nSee: docker run\n\n\nLicense\nGNU Affero General Public License v3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nGNU AFFERO GENERAL PUBLIC LICENSE\n   Version 3, 19 November 2007\nCopyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/\nEveryone is permitted to copy and distribute verbatim copies\nof this license document, but changing it is not allowed.\n    PreambleThe GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\nThe licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\nWhen we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\nDevelopers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\nA secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\nThe GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\nAn older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\nThe precise terms and conditions for copying, distribution and\nmodification follow.\n   TERMS AND CONDITIONS\n\nDefinitions.\n\n\"This License\" refers to version 3 of the GNU Affero General Public License.\n\"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\nTo \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\nA \"covered work\" means either the unmodified Program or a work based\non the Program.\nTo \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\nTo \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\nAn interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\nThe \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\nA \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\nThe \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\nThe \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\nThe Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\nThe Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\nAll rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\nYou may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\nConveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\nNo covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\nWhen you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\nYou may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\nYou may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\nYou may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.\nA compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\nYou may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.\nA separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\nA \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\nIf you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\nThe requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\nCorresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n\"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\nWhen you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\nNotwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.\nAll other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\nIf you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\nAdditional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\nYou may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\nHowever, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\nMoreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\nTermination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\nYou are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\nEach time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\nAn \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\nYou may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\nA \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\nA contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\nEach contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\nIn the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\nIf you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\nIf, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\nA patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\nNothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\nIf conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nRemote Network Interaction; Use with the GNU General Public License.\n\nNotwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\nNotwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\nRevised Versions of this License.\n\nThe Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\nEach version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\nIf the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\nLater license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\nIf the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n END OF TERMS AND CONDITIONS\nHow to Apply These Terms to Your New Programs\nIf you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\nTo do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\nCopyright (C)   \nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see http://www.gnu.org/licenses/.\nAlso add information on how to contact you by electronic and paper mail.\nIf your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\nYou should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\nhttp://www.gnu.org/licenses/.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilsAwsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilsExceptionModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilsInterceptorsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilsPipesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_exports\n\n\n\ncluster_DatabaseModule_providers\n\n\n\ncluster_UtilsPipesModule\n\n\n\ncluster_UtilsPipesModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nUtilsInterceptorsModule\n\nUtilsInterceptorsModule\n\nUtilsInterceptorsModule -->\n\nDatabaseModule->UtilsInterceptorsModule\n\n\n\n\n\nAuthenticationService \n\nAuthenticationService \n\nAuthenticationService  -->\n\nDatabaseModule->AuthenticationService \n\n\n\n\n\nContentService \n\nContentService \n\nContentService  -->\n\nDatabaseModule->ContentService \n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nDatabaseModule->UserService \n\n\n\n\n\nUxEngagementService \n\nUxEngagementService \n\nUxEngagementService  -->\n\nDatabaseModule->UxEngagementService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\nAppModule -->\n\nAppService->AppModule\n\n\n\nAppModule -->\n\nAppService->AppModule\n\n\n\nAppModule -->\n\nAppService->AppModule\n\n\n\nAppModule -->\n\nAppService->AppModule\n\n\n\nAppModule -->\n\nAppService->AppModule\n\n\n\nAppModule -->\n\nAppService->AppModule\n\n\n\nAppModule -->\n\nUtilsInterceptorsModule->AppModule\n\n\n\nAppModule -->\n\nUtilsInterceptorsModule->AppModule\n\n\n\nAppModule -->\n\nUtilsInterceptorsModule->AppModule\n\n\n\nAppModule -->\n\nUtilsInterceptorsModule->AppModule\n\n\n\n\n\nUtilsAwsModule\n\nUtilsAwsModule\n\nAppModule -->\n\nUtilsAwsModule->AppModule\n\n\n\n\n\nImageInterceptor\n\nImageInterceptor\n\nAppModule -->\n\nImageInterceptor->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nDatabaseModule -->\n\nAuthenticationService->DatabaseModule\n\n\n\n\n\nContentService\n\nContentService\n\nDatabaseModule -->\n\nContentService->DatabaseModule\n\n\n\n\n\nUserService\n\nUserService\n\nDatabaseModule -->\n\nUserService->DatabaseModule\n\n\n\n\n\nUxEngagementService\n\nUxEngagementService\n\nDatabaseModule -->\n\nUxEngagementService->DatabaseModule\n\n\n\n\n\nLimitPipe\n\nLimitPipe\n\n\n\nUtilsPipesModule\n\nUtilsPipesModule\n\nUtilsPipesModule -->\n\nLimitPipe->UtilsPipesModule\n\n\n\n\n\nPagePipe\n\nPagePipe\n\nUtilsPipesModule -->\n\nPagePipe->UtilsPipesModule\n\n\n\n\n\nSortByPipe\n\nSortByPipe\n\nUtilsPipesModule -->\n\nSortByPipe->UtilsPipesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    17 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    25 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    79 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    26 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/suggestCastcleIdPayload.html":{"url":"classes/suggestCastcleIdPayload.html","title":"class - suggestCastcleIdPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  suggestCastcleIdPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/authentications/src/app/dtos/dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                suggestCastcleId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        suggestCastcleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/authentications/src/app/dtos/dto.ts:90\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nexport class GuestLoginDto {\n  @ApiProperty()\n  deviceUUID: string;\n}\n\nexport class CheckEmailExistDto {\n  @ApiProperty()\n  email: string;\n}\n\nexport class LoginDto {\n  @ApiProperty()\n  username: string;\n  @ApiProperty()\n  password: string;\n}\n\nclass RegisterPayload {\n  @ApiProperty()\n  email: string;\n  @ApiProperty()\n  password: string;\n  @ApiProperty()\n  displayName: string;\n  @ApiProperty()\n  castcleId: string;\n}\n\nexport class RegisterByEmailDto {\n  @ApiProperty()\n  channel: 'email';\n  @ApiProperty()\n  payload: RegisterPayload;\n}\n\nexport class CheckIdExistDto {\n  @ApiProperty()\n  castcleId: string;\n}\n\nexport class TokenResponse {\n  @ApiProperty()\n  accessToken: string;\n\n  @ApiProperty()\n  refreshToken: string;\n}\n\nexport class CheckingResponse {\n  @ApiProperty()\n  message: string;\n\n  @ApiProperty()\n  payload: {\n    exist: boolean;\n  };\n}\n\nexport class RefreshTokenResponse {\n  @ApiProperty()\n  accessToken: string;\n}\n\nclass suggestCastcleIdPayload {\n  @ApiProperty()\n  suggestCastcleId: string;\n}\n\nexport class SuggestCastcleIdReponse {\n  @ApiProperty()\n  payload: suggestCastcleIdPayload;\n}\n\nexport class ChangePasswordBody {\n  @ApiProperty()\n  refCode: string;\n  @ApiProperty()\n  newPassword: string;\n}\n\nexport class VerificationPasswordBody {\n  @ApiProperty()\n  password: string;\n}\n\nexport class VerificationPasswordResponse {\n  @ApiProperty()\n  refCode: string;\n  @ApiProperty()\n  expiresTime: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AccountActivationDocument   (libs/.../accountActivation.schema.ts)\n                        \n                        \n                            AccountAuthenIdDocument   (libs/.../accountAuthenId.schema.ts)\n                        \n                        \n                            AccountDocument   (libs/.../account.schema.ts)\n                        \n                        \n                            ArchiveHashtagDocument   (libs/.../archiveHashtag.schema.ts)\n                        \n                        \n                            CircleDocument   (libs/.../circle.schema.ts)\n                        \n                        \n                            CommentDocument   (libs/.../comment.schema.ts)\n                        \n                        \n                            ContentDocument   (libs/.../content.schema.ts)\n                        \n                        \n                            CredentialDocument   (libs/.../credential.schema.ts)\n                        \n                        \n                            EngagementDocument   (libs/.../engagement.schema.ts)\n                        \n                        \n                            FeatureDocument   (libs/.../feature.schema.ts)\n                        \n                        \n                            FeatureDocument   (libs/.../i18n.schema.ts)\n                        \n                        \n                            HashtagDocument   (libs/.../hashtag.schema.ts)\n                        \n                        \n                            HashtagItemDocument   (libs/.../hashtagItem.schema.ts)\n                        \n                        \n                            OtpDocument   (libs/.../otp.schema.ts)\n                        \n                        \n                            ProfileImage   (libs/.../user.schema.ts)\n                        \n                        \n                            RelationshipDocument   (libs/.../relationship.schema.ts)\n                        \n                        \n                            RevisionDocument   (libs/.../revision.schema.ts)\n                        \n                        \n                            UploadOptions   (libs/.../uploader.ts)\n                        \n                        \n                            UserDocument   (libs/.../user.schema.ts)\n                        \n                        \n                            UxEngagementDocument   (libs/.../uxengagement.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/database/src/lib/schemas/accountActivation.schema.ts\n    \n    \n        \n            \n                \n                    \n                    AccountActivationDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/database/src/lib/schemas/accountAuthenId.schema.ts\n    \n    \n        \n            \n                \n                    \n                    AccountAuthenIdDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/database/src/lib/schemas/account.schema.ts\n    \n    \n        \n            \n                \n                    \n                    AccountDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/database/src/lib/schemas/archiveHashtag.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ArchiveHashtagDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/database/src/lib/schemas/circle.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CircleDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/database/src/lib/schemas/comment.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CommentDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/database/src/lib/schemas/content.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ContentDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/database/src/lib/schemas/credential.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CredentialDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/database/src/lib/schemas/engagement.schema.ts\n    \n    \n        \n            \n                \n                    \n                    EngagementDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/database/src/lib/schemas/feature.schema.ts\n    \n    \n        \n            \n                \n                    \n                    FeatureDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/database/src/lib/schemas/i18n.schema.ts\n    \n    \n        \n            \n                \n                    \n                    FeatureDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/database/src/lib/schemas/hashtag.schema.ts\n    \n    \n        \n            \n                \n                    \n                    HashtagDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/database/src/lib/schemas/hashtagItem.schema.ts\n    \n    \n        \n            \n                \n                    \n                    HashtagItemDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/database/src/lib/schemas/otp.schema.ts\n    \n    \n        \n            \n                \n                    \n                    OtpDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/database/src/lib/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ProfileImage\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/database/src/lib/schemas/relationship.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RelationshipDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/database/src/lib/schemas/revision.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RevisionDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/utils/aws/src/lib/uploader.ts\n    \n    \n        \n            \n                \n                    \n                    UploadOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    libs/database/src/lib/schemas/uxengagement.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UxEngagementDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
